

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb  4 19:32:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  001F                     _ADCON0	set	31
   372  0009                     _PORTE	set	9
   373  0005                     _PORTA	set	5
   374  001F                     _ADCON0bits	set	31
   375  001E                     _ADRESH	set	30
   376  000C                     _PIR1bits	set	12
   377  0001                     _TMR0	set	1
   378  0006                     _PORTB	set	6
   379  000B                     _INTCONbits	set	11
   380  0008                     _PORTD	set	8
   381  0009                     _PORTEbits	set	9
   382  0007                     _PORTC	set	7
   383  008C                     _PIE1bits	set	140
   384  009F                     _ADCON1bits	set	159
   385  0081                     _OPTION_REGbits	set	129
   386  008F                     _OSCCON	set	143
   387  0096                     _IOCB	set	150
   388  0089                     _TRISE	set	137
   389  0088                     _TRISD	set	136
   390  0087                     _TRISC	set	135
   391  0086                     _TRISB	set	134
   392  0085                     _TRISA	set	133
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398                           ; #config settings
   399                           
   400  000F                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   404  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   406                           
   407                           ; Clear objects allocated to BANK0
   408  0012  1283               	bcf	3,5	;RP0=0, select bank0
   409  0013  1303               	bcf	3,6	;RP1=0, select bank0
   410  0014  01A8               	clrf	__pbssBANK0& (0+127)
   411  0015  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   412  0016  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   413  0017                     end_of_initialization:	
   414                           ;End of C runtime variable initialization code
   415                           
   416  0017                     __end_of__initialization:
   417  0017  0183               	clrf	3
   418  0018  120A  118A  297F   	ljmp	_main	;jump to C main() function
   419                           
   420                           	psect	bssCOMMON
   421  0077                     __pbssCOMMON:
   422  0077                     _mux_flag:
   423  0077                     	ds	1
   424  0078                     _portb_flags:
   425  0078                     	ds	1
   426  0079                     _push_counter:
   427  0079                     	ds	1
   428                           
   429                           	psect	bssBANK0
   430  0028                     __pbssBANK0:
   431  0028                     _adc_data:
   432  0028                     	ds	1
   433  0029                     _mux_timer:
   434  0029                     	ds	1
   435  002A                     _push_timer:
   436  002A                     	ds	1
   437                           
   438                           	psect	cstackCOMMON
   439  0070                     __pcstackCOMMON:
   440  0070                     ?_setup:
   441  0070                     ?_push_logic:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_adc_logic:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_mux_logic:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_adc_wait:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_adc_start:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_adc_config:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_adc_isr_enable:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_main:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_isr:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ??_isr:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_d7s_bin2hex:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476  0070                     	ds	3
   477  0073                     ??_setup:
   478  0073                     ??_push_logic:	
   479                           ; 1 bytes @ 0x3
   480                           
   481  0073                     ??_adc_logic:	
   482                           ; 1 bytes @ 0x3
   483                           
   484  0073                     ??_adc_wait:	
   485                           ; 1 bytes @ 0x3
   486                           
   487  0073                     ??_adc_start:	
   488                           ; 1 bytes @ 0x3
   489                           
   490  0073                     ??_adc_config:	
   491                           ; 1 bytes @ 0x3
   492                           
   493  0073                     ??_adc_isr_enable:	
   494                           ; 1 bytes @ 0x3
   495                           
   496  0073                     ??_d7s_bin2hex:	
   497                           ; 1 bytes @ 0x3
   498                           
   499                           
   500                           ; 1 bytes @ 0x3
   501  0073                     	ds	2
   502  0075                     d7s_bin2hex@num:
   503                           
   504                           ; 1 bytes @ 0x5
   505  0075                     	ds	1
   506  0076                     d7s_bin2hex@hex:
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	1
   510  0077                     ??_main:
   511                           
   512                           	psect	cstackBANK0
   513  0020                     __pcstackBANK0:	
   514                           ; 1 bytes @ 0x7
   515                           
   516  0020                     ?_d7s_2display:
   517  0020                     d7s_2display@port:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 2 bytes @ 0x0
   522  0020                     	ds	2
   523  0022                     d7s_2display@data:
   524                           
   525                           ; 1 bytes @ 0x2
   526  0022                     	ds	1
   527  0023                     d7s_2display@sel:
   528                           
   529                           ; 1 bytes @ 0x3
   530  0023                     	ds	1
   531  0024                     ??_d7s_2display:
   532                           
   533                           ; 1 bytes @ 0x4
   534  0024                     	ds	2
   535  0026                     ??_mux_logic:
   536                           
   537                           ; 1 bytes @ 0x6
   538  0026                     	ds	2
   539                           
   540                           	psect	maintext
   541  017F                     __pmaintext:	
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 77 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels required when called:    4
   567 ;; This function calls:
   568 ;;		_adc_logic
   569 ;;		_mux_logic
   570 ;;		_push_logic
   571 ;;		_setup
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _main
   579  017F                     _main:
   580  017F                     l1186:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;main.c: 79:     setup();
   586  017F  120A  118A  20EE  120A  118A  	fcall	_setup
   587  0184                     l77:	
   588                           ;main.c: 80:     while(1)
   589                           
   590                           
   591                           ;main.c: 81:     {;main.c: 85:         push_logic();
   592  0184  120A  118A  21A7  120A  118A  	fcall	_push_logic
   593  0189                     l1188:
   594                           
   595                           ;main.c: 86:         adc_logic();
   596  0189  120A  118A  21C3  120A  118A  	fcall	_adc_logic
   597  018E                     l1190:
   598                           
   599                           ;main.c: 87:         mux_logic();
   600  018E  120A  118A  20B2  120A  118A  	fcall	_mux_logic
   601  0193                     l1192:
   602                           
   603                           ;main.c: 89:         PORTEbits.RE2 = adc_data >= push_counter ? 1 : 0;
   604  0193  0879               	movf	_push_counter,w
   605  0194  1283               	bcf	3,5	;RP0=0, select bank0
   606  0195  1303               	bcf	3,6	;RP1=0, select bank0
   607  0196  0228               	subwf	_adc_data,w
   608  0197  1803               	skipnc
   609  0198  299A               	goto	u461
   610  0199  299E               	goto	u460
   611  019A                     u461:
   612  019A  1283               	bcf	3,5	;RP0=0, select bank0
   613  019B  1303               	bcf	3,6	;RP1=0, select bank0
   614  019C  1509               	bsf	9,2	;volatile
   615  019D  29A1               	goto	u474
   616  019E                     u460:
   617  019E  1283               	bcf	3,5	;RP0=0, select bank0
   618  019F  1303               	bcf	3,6	;RP1=0, select bank0
   619  01A0  1109               	bcf	9,2	;volatile
   620  01A1                     u474:
   621  01A1                     l1194:
   622                           
   623                           ;main.c: 91:         PORTD = push_counter;
   624  01A1  0879               	movf	_push_counter,w
   625  01A2  0088               	movwf	8	;volatile
   626  01A3  2984               	goto	l77
   627  01A4  120A  118A  280C   	ljmp	start
   628  01A7                     __end_of_main:
   629                           
   630                           	psect	text1
   631  00EE                     __ptext1:	
   632 ;; *************** function _setup *****************
   633 ;; Defined at:
   634 ;;		line 171 in file "main.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    2
   655 ;; This function calls:
   656 ;;		_adc_config
   657 ;;		_adc_isr_enable
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _setup
   665  00EE                     _setup:
   666  00EE                     l1028:	
   667                           ;incstack = 0
   668                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   669                           
   670                           
   671                           ;main.c: 173:     ANSEL = 0x01;
   672  00EE  3001               	movlw	1
   673  00EF  1683               	bsf	3,5	;RP0=1, select bank3
   674  00F0  1703               	bsf	3,6	;RP1=1, select bank3
   675  00F1  0088               	movwf	8	;volatile
   676  00F2                     l1030:
   677                           
   678                           ;main.c: 174:     ANSELH = 0x00;
   679  00F2  0189               	clrf	9	;volatile
   680  00F3                     l1032:
   681                           
   682                           ;main.c: 176:     TRISA = 0x01;
   683  00F3  3001               	movlw	1
   684  00F4  1683               	bsf	3,5	;RP0=1, select bank1
   685  00F5  1303               	bcf	3,6	;RP1=0, select bank1
   686  00F6  0085               	movwf	5	;volatile
   687  00F7                     l1034:
   688                           
   689                           ;main.c: 177:     TRISB = 0x03;
   690  00F7  3003               	movlw	3
   691  00F8  0086               	movwf	6	;volatile
   692  00F9                     l1036:
   693                           
   694                           ;main.c: 178:     TRISC = 0x00;
   695  00F9  0187               	clrf	7	;volatile
   696  00FA                     l1038:
   697                           
   698                           ;main.c: 179:     TRISD = 0x00;
   699  00FA  0188               	clrf	8	;volatile
   700  00FB                     l1040:
   701                           
   702                           ;main.c: 180:     TRISE = 0x00;
   703  00FB  0189               	clrf	9	;volatile
   704  00FC                     l1042:
   705                           
   706                           ;main.c: 182:     PORTA = 0;
   707  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   708  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   709  00FE  0185               	clrf	5	;volatile
   710  00FF                     l1044:
   711                           
   712                           ;main.c: 183:     PORTB = 0;
   713  00FF  0186               	clrf	6	;volatile
   714  0100                     l1046:
   715                           
   716                           ;main.c: 184:     PORTC = 0;
   717  0100  0187               	clrf	7	;volatile
   718  0101                     l1048:
   719                           
   720                           ;main.c: 185:     PORTD = 0;
   721  0101  0188               	clrf	8	;volatile
   722  0102                     l1050:
   723                           
   724                           ;main.c: 186:     PORTE = 0;
   725  0102  0189               	clrf	9	;volatile
   726  0103                     l1052:
   727                           
   728                           ;main.c: 189:     IOCB = 0x03;
   729  0103  3003               	movlw	3
   730  0104  1683               	bsf	3,5	;RP0=1, select bank1
   731  0105  1303               	bcf	3,6	;RP1=0, select bank1
   732  0106  0096               	movwf	22	;volatile
   733  0107                     l1054:
   734                           
   735                           ;main.c: 190:     INTCONbits.RBIE = 1;
   736  0107  158B               	bsf	11,3	;volatile
   737  0108                     l1056:
   738                           
   739                           ;main.c: 191:     INTCONbits.T0IE = 1;
   740  0108  168B               	bsf	11,5	;volatile
   741  0109                     l1058:
   742                           
   743                           ;main.c: 192:     INTCONbits.GIE = 1;
   744  0109  178B               	bsf	11,7	;volatile
   745  010A                     l1060:
   746                           
   747                           ;main.c: 194:     OSCCON = 0b01100001;
   748  010A  3061               	movlw	97
   749  010B  008F               	movwf	15	;volatile
   750  010C                     l1062:
   751                           
   752                           ;main.c: 196:     OPTION_REGbits.T0CS = 0;
   753  010C  1281               	bcf	1,5	;volatile
   754  010D                     l1064:
   755                           
   756                           ;main.c: 197:     OPTION_REGbits.PSA = 0;
   757  010D  1181               	bcf	1,3	;volatile
   758  010E                     l1066:
   759                           
   760                           ;main.c: 198:     OPTION_REGbits.PS2 = 0;
   761  010E  1101               	bcf	1,2	;volatile
   762  010F                     l1068:
   763                           
   764                           ;main.c: 199:     OPTION_REGbits.PS1 = 0;
   765  010F  1081               	bcf	1,1	;volatile
   766  0110                     l1070:
   767                           
   768                           ;main.c: 200:     OPTION_REGbits.PS0 = 1;
   769  0110  1401               	bsf	1,0	;volatile
   770  0111                     l1072:
   771                           
   772                           ;main.c: 202:     TMR0 = 6;;
   773  0111  3006               	movlw	6
   774  0112  1283               	bcf	3,5	;RP0=0, select bank0
   775  0113  1303               	bcf	3,6	;RP1=0, select bank0
   776  0114  0081               	movwf	1	;volatile
   777  0115                     l1074:
   778                           
   779                           ;main.c: 204:     INTCONbits.T0IF = 0;
   780  0115  110B               	bcf	11,2	;volatile
   781  0116                     l1076:
   782                           
   783                           ;main.c: 206:     adc_config();
   784  0116  120A  118A  21E0  120A  118A  	fcall	_adc_config
   785  011B                     l1078:
   786                           
   787                           ;main.c: 207:     adc_isr_enable();
   788  011B  120A  118A  21EA  120A  118A  	fcall	_adc_isr_enable
   789  0120                     l105:
   790  0120  0008               	return
   791  0121                     __end_of_setup:
   792                           
   793                           	psect	text2
   794  01EA                     __ptext2:	
   795 ;; *************** function _adc_isr_enable *****************
   796 ;; Defined at:
   797 ;;		line 37 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		None
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_setup
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _adc_isr_enable
   827  01EA                     _adc_isr_enable:
   828  01EA                     l1026:	
   829                           ;incstack = 0
   830                           ; Regs used in _adc_isr_enable: []
   831                           
   832                           
   833                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 39:     PIE1bits.ADIE 
      +                          = 1;
   834  01EA  1683               	bsf	3,5	;RP0=1, select bank1
   835  01EB  1303               	bcf	3,6	;RP1=0, select bank1
   836  01EC  170C               	bsf	12,6	;volatile
   837  01ED                     l207:
   838  01ED  0008               	return
   839  01EE                     __end_of_adc_isr_enable:
   840                           
   841                           	psect	text3
   842  01E0                     __ptext3:	
   843 ;; *************** function _adc_config *****************
   844 ;; Defined at:
   845 ;;		line 11 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_setup
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _adc_config
   875  01E0                     _adc_config:
   876  01E0                     l1016:	
   877                           ;incstack = 0
   878                           ; Regs used in _adc_config: [wreg]
   879                           
   880                           
   881                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 13:     ADCON0 = 0b100
      +                          00001;
   882  01E0  3081               	movlw	129
   883  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   884  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   885  01E3  009F               	movwf	31	;volatile
   886  01E4                     l1018:
   887                           
   888                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 15:     ADCON1bits.ADF
      +                          M = 0;
   889  01E4  1683               	bsf	3,5	;RP0=1, select bank1
   890  01E5  1303               	bcf	3,6	;RP1=0, select bank1
   891  01E6  139F               	bcf	31,7	;volatile
   892  01E7                     l1020:
   893                           
   894                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 16:     ADCON1bits.VCF
      +                          G1 = 0;
   895  01E7  129F               	bcf	31,5	;volatile
   896  01E8                     l1022:
   897                           
   898                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 17:     ADCON1bits.VCF
      +                          G0 = 0;
   899  01E8  121F               	bcf	31,4	;volatile
   900  01E9                     l198:
   901  01E9  0008               	return
   902  01EA                     __end_of_adc_config:
   903                           
   904                           	psect	text4
   905  01A7                     __ptext4:	
   906 ;; *************** function _push_logic *****************
   907 ;; Defined at:
   908 ;;		line 146 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          1       0       0       0       0
   925 ;;      Totals:         1       0       0       0       0
   926 ;;Total ram usage:        1 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _push_logic
   938  01A7                     _push_logic:
   939  01A7                     l1082:	
   940                           ;incstack = 0
   941                           ; Regs used in _push_logic: [wreg+status,2+status,0]
   942                           
   943                           
   944                           ;main.c: 148:     if (200 != push_timer)
   945  01A7  30C8               	movlw	200
   946  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   947  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   948  01AA  062A               	xorwf	_push_timer,w
   949  01AB  1903               	btfsc	3,2
   950  01AC  29AE               	goto	u211
   951  01AD  29AF               	goto	u210
   952  01AE                     u211:
   953  01AE  29B0               	goto	l1086
   954  01AF                     u210:
   955  01AF  29C2               	goto	l100
   956  01B0                     l1086:
   957                           
   958                           ;main.c: 153:     push_timer = 0;
   959  01B0  01AA               	clrf	_push_timer
   960  01B1                     l1088:
   961                           
   962                           ;main.c: 155:     if (0x01 == portb_flags)
   963  01B1  0378               	decf	_portb_flags,w
   964  01B2  1D03               	btfss	3,2
   965  01B3  29B5               	goto	u221
   966  01B4  29B6               	goto	u220
   967  01B5                     u221:
   968  01B5  29BA               	goto	l101
   969  01B6                     u220:
   970  01B6                     l1090:
   971                           
   972                           ;main.c: 156:     {;main.c: 157:         push_counter++;
   973  01B6  3001               	movlw	1
   974  01B7  00F3               	movwf	??_push_logic
   975  01B8  0873               	movf	??_push_logic,w
   976  01B9  07F9               	addwf	_push_counter,f
   977  01BA                     l101:	
   978                           ;main.c: 158:     }
   979                           
   980                           
   981                           ;main.c: 160:     if (0x02 == portb_flags)
   982  01BA  3002               	movlw	2
   983  01BB  0678               	xorwf	_portb_flags,w
   984  01BC  1D03               	btfss	3,2
   985  01BD  29BF               	goto	u231
   986  01BE  29C0               	goto	u230
   987  01BF                     u231:
   988  01BF  29C2               	goto	l100
   989  01C0                     u230:
   990  01C0                     l1092:
   991                           
   992                           ;main.c: 161:     {;main.c: 162:         push_counter--;
   993  01C0  3001               	movlw	1
   994  01C1  02F9               	subwf	_push_counter,f
   995  01C2                     l100:
   996  01C2  0008               	return
   997  01C3                     __end_of_push_logic:
   998                           
   999                           	psect	text5
  1000  00B2                     __ptext5:	
  1001 ;; *************** function _mux_logic *****************
  1002 ;; Defined at:
  1003 ;;		line 117 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       2       0       0       0
  1020 ;;      Totals:         0       2       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    3
  1024 ;; This function calls:
  1025 ;;		_d7s_2display
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _mux_logic
  1033  00B2                     _mux_logic:
  1034  00B2                     l1172:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _mux_logic: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1037                           
  1038                           
  1039                           ;main.c: 119:     if (40 != mux_timer)
  1040  00B2  3028               	movlw	40
  1041  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1042  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1043  00B5  0629               	xorwf	_mux_timer,w
  1044  00B6  1903               	btfsc	3,2
  1045  00B7  28B9               	goto	u391
  1046  00B8  28BA               	goto	u390
  1047  00B9                     u391:
  1048  00B9  28BB               	goto	l1176
  1049  00BA                     u390:
  1050  00BA  28ED               	goto	l92
  1051  00BB                     l1176:
  1052                           
  1053                           ;main.c: 124:     mux_timer = 0;
  1054  00BB  01A9               	clrf	_mux_timer
  1055  00BC                     l1178:
  1056                           
  1057                           ;main.c: 126:     mux_flag = !mux_flag;
  1058  00BC  0877               	movf	_mux_flag,w
  1059  00BD  1903               	btfsc	3,2
  1060  00BE  28C0               	goto	u401
  1061  00BF  28C2               	goto	u400
  1062  00C0                     u401:
  1063  00C0  3001               	movlw	1
  1064  00C1  28C3               	goto	u410
  1065  00C2                     u400:
  1066  00C2  3000               	movlw	0
  1067  00C3                     u410:
  1068  00C3  00A6               	movwf	??_mux_logic
  1069  00C4  0826               	movf	??_mux_logic,w
  1070  00C5  00F7               	movwf	_mux_flag
  1071  00C6                     l1180:
  1072                           
  1073                           ;main.c: 128:     PORTEbits.RE0 = mux_flag ? 1 : 0;
  1074  00C6  0877               	movf	_mux_flag,w
  1075  00C7  1D03               	btfss	3,2
  1076  00C8  28CA               	goto	u421
  1077  00C9  28CE               	goto	u420
  1078  00CA                     u421:
  1079  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1080  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1081  00CC  1409               	bsf	9,0	;volatile
  1082  00CD  28D1               	goto	u434
  1083  00CE                     u420:
  1084  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1085  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1086  00D0  1009               	bcf	9,0	;volatile
  1087  00D1                     u434:
  1088  00D1                     l1182:
  1089                           
  1090                           ;main.c: 129:     PORTEbits.RE1 = mux_flag ? 0 : 1;
  1091  00D1  0877               	movf	_mux_flag,w
  1092  00D2  1903               	btfsc	3,2
  1093  00D3  28D5               	goto	u441
  1094  00D4  28D9               	goto	u440
  1095  00D5                     u441:
  1096  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1097  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1098  00D7  1489               	bsf	9,1	;volatile
  1099  00D8  28DC               	goto	u454
  1100  00D9                     u440:
  1101  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00DB  1089               	bcf	9,1	;volatile
  1104  00DC                     u454:
  1105  00DC                     l1184:
  1106                           
  1107                           ;main.c: 131:     d7s_2display(&PORTC, adc_data, mux_flag);
  1108  00DC  3007               	movlw	7
  1109  00DD  00A0               	movwf	d7s_2display@port
  1110  00DE  3000               	movlw	0
  1111  00DF  00A1               	movwf	d7s_2display@port+1
  1112  00E0  0828               	movf	_adc_data,w
  1113  00E1  00A6               	movwf	??_mux_logic
  1114  00E2  0826               	movf	??_mux_logic,w
  1115  00E3  00A2               	movwf	d7s_2display@data
  1116  00E4  0877               	movf	_mux_flag,w
  1117  00E5  00A7               	movwf	??_mux_logic+1
  1118  00E6  0827               	movf	??_mux_logic+1,w
  1119  00E7  00A3               	movwf	d7s_2display@sel
  1120  00E8  120A  118A  2121  120A  118A  	fcall	_d7s_2display
  1121  00ED                     l92:
  1122  00ED  0008               	return
  1123  00EE                     __end_of_mux_logic:
  1124                           
  1125                           	psect	text6
  1126  0121                     __ptext6:	
  1127 ;; *************** function _d7s_2display *****************
  1128 ;; Defined at:
  1129 ;;		line 97 in file "d7s.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1132 ;;		 -> PORTC(1), 
  1133 ;;  data            1    2[BANK0 ] unsigned char 
  1134 ;;  sel             1    3[BANK0 ] _Bool 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       4       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       2       0       0       0
  1149 ;;      Totals:         0       6       0       0       0
  1150 ;;Total ram usage:        6 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		_d7s_bin2hex
  1155 ;; This function is called by:
  1156 ;;		_mux_logic
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _d7s_2display
  1162  0121                     _d7s_2display:
  1163  0121                     l1166:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _d7s_2display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1166                           
  1167                           
  1168                           ;d7s.c: 97: void d7s_2display(uint8_t* port, uint8_t data, _Bool sel);d7s.c: 98: {;d7s.c
      +                          : 99:     if (sel)
  1169  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0123  0823               	movf	d7s_2display@sel,w
  1172  0124  1903               	btfsc	3,2
  1173  0125  2927               	goto	u371
  1174  0126  2928               	goto	u370
  1175  0127                     u371:
  1176  0127  2939               	goto	l1170
  1177  0128                     u370:
  1178  0128                     l1168:
  1179                           
  1180                           ;d7s.c: 100:     {;d7s.c: 101:         *port = d7s_bin2hex(data);
  1181  0128  0822               	movf	d7s_2display@data,w
  1182  0129  120A  118A  201B  120A  118A  	fcall	_d7s_bin2hex
  1183  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1184  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0130  00A4               	movwf	??_d7s_2display
  1186  0131  0820               	movf	d7s_2display@port,w
  1187  0132  0084               	movwf	4
  1188  0133  1783               	bsf	3,7
  1189  0134  1C21               	btfss	d7s_2display@port+1,0
  1190  0135  1383               	bcf	3,7
  1191  0136  0824               	movf	??_d7s_2display,w
  1192  0137  0080               	movwf	0
  1193                           
  1194                           ;d7s.c: 102:     }
  1195  0138  2951               	goto	l240
  1196  0139                     l1170:
  1197                           
  1198                           ;d7s.c: 104:     {;d7s.c: 105:         *port = d7s_bin2hex(data >> 4);
  1199  0139  0822               	movf	d7s_2display@data,w
  1200  013A  00A4               	movwf	??_d7s_2display
  1201  013B  3004               	movlw	4
  1202  013C                     u385:
  1203  013C  1003               	clrc
  1204  013D  0CA4               	rrf	??_d7s_2display,f
  1205  013E  3EFF               	addlw	-1
  1206  013F  1D03               	skipz
  1207  0140  293C               	goto	u385
  1208  0141  0824               	movf	??_d7s_2display,w
  1209  0142  120A  118A  201B  120A  118A  	fcall	_d7s_bin2hex
  1210  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0149  00A5               	movwf	??_d7s_2display+1
  1213  014A  0820               	movf	d7s_2display@port,w
  1214  014B  0084               	movwf	4
  1215  014C  1783               	bsf	3,7
  1216  014D  1C21               	btfss	d7s_2display@port+1,0
  1217  014E  1383               	bcf	3,7
  1218  014F  0825               	movf	??_d7s_2display+1,w
  1219  0150  0080               	movwf	0
  1220  0151                     l240:
  1221  0151  0008               	return
  1222  0152                     __end_of_d7s_2display:
  1223                           
  1224                           	psect	text7
  1225  001B                     __ptext7:	
  1226 ;; *************** function _d7s_bin2hex *****************
  1227 ;; Defined at:
  1228 ;;		line 18 in file "d7s.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  num             1    wreg     unsigned char 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  num             1    5[COMMON] unsigned char 
  1233 ;;  hex             1    6[COMMON] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         2       0       0       0       0
  1245 ;;      Temps:          2       0       0       0       0
  1246 ;;      Totals:         4       0       0       0       0
  1247 ;;Total ram usage:        4 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_d7s_2display
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _d7s_bin2hex
  1259  001B                     _d7s_bin2hex:
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _d7s_bin2hex: [wreg-fsr0h+status,2+status,0]
  1263                           ;d7s_bin2hex@num stored from wreg
  1264  001B  00F5               	movwf	d7s_bin2hex@num
  1265  001C                     l958:
  1266                           
  1267                           ;d7s.c: 18: uint8_t d7s_bin2hex(uint8_t num);d7s.c: 19: {;d7s.c: 20:     num &= 0x0F;
  1268  001C  300F               	movlw	15
  1269  001D  00F3               	movwf	??_d7s_bin2hex
  1270  001E  0873               	movf	??_d7s_bin2hex,w
  1271  001F  05F5               	andwf	d7s_bin2hex@num,f
  1272  0020                     l960:
  1273                           
  1274                           ;d7s.c: 24:     switch (num)
  1275  0020  2876               	goto	l996
  1276  0021                     l962:
  1277                           
  1278                           ;d7s.c: 27:             hex = 0x7E;
  1279  0021  307E               	movlw	126
  1280  0022  00F3               	movwf	??_d7s_bin2hex
  1281  0023  0873               	movf	??_d7s_bin2hex,w
  1282  0024  00F6               	movwf	d7s_bin2hex@hex
  1283                           
  1284                           ;d7s.c: 28:             break;
  1285  0025  28B0               	goto	l998
  1286  0026                     l964:
  1287                           
  1288                           ;d7s.c: 31:             hex = 0x30;
  1289  0026  3030               	movlw	48
  1290  0027  00F3               	movwf	??_d7s_bin2hex
  1291  0028  0873               	movf	??_d7s_bin2hex,w
  1292  0029  00F6               	movwf	d7s_bin2hex@hex
  1293                           
  1294                           ;d7s.c: 32:             break;
  1295  002A  28B0               	goto	l998
  1296  002B                     l966:
  1297                           
  1298                           ;d7s.c: 35:             hex = 0x6D;
  1299  002B  306D               	movlw	109
  1300  002C  00F3               	movwf	??_d7s_bin2hex
  1301  002D  0873               	movf	??_d7s_bin2hex,w
  1302  002E  00F6               	movwf	d7s_bin2hex@hex
  1303                           
  1304                           ;d7s.c: 36:             break;
  1305  002F  28B0               	goto	l998
  1306  0030                     l968:
  1307                           
  1308                           ;d7s.c: 39:             hex = 0x79;
  1309  0030  3079               	movlw	121
  1310  0031  00F3               	movwf	??_d7s_bin2hex
  1311  0032  0873               	movf	??_d7s_bin2hex,w
  1312  0033  00F6               	movwf	d7s_bin2hex@hex
  1313                           
  1314                           ;d7s.c: 40:             break;
  1315  0034  28B0               	goto	l998
  1316  0035                     l970:
  1317                           
  1318                           ;d7s.c: 43:             hex = 0x33;
  1319  0035  3033               	movlw	51
  1320  0036  00F3               	movwf	??_d7s_bin2hex
  1321  0037  0873               	movf	??_d7s_bin2hex,w
  1322  0038  00F6               	movwf	d7s_bin2hex@hex
  1323                           
  1324                           ;d7s.c: 44:             break;
  1325  0039  28B0               	goto	l998
  1326  003A                     l972:
  1327                           
  1328                           ;d7s.c: 47:             hex = 0x5B;
  1329  003A  305B               	movlw	91
  1330  003B  00F3               	movwf	??_d7s_bin2hex
  1331  003C  0873               	movf	??_d7s_bin2hex,w
  1332  003D  00F6               	movwf	d7s_bin2hex@hex
  1333                           
  1334                           ;d7s.c: 48:             break;
  1335  003E  28B0               	goto	l998
  1336  003F                     l974:
  1337                           
  1338                           ;d7s.c: 51:             hex = 0x5F;
  1339  003F  305F               	movlw	95
  1340  0040  00F3               	movwf	??_d7s_bin2hex
  1341  0041  0873               	movf	??_d7s_bin2hex,w
  1342  0042  00F6               	movwf	d7s_bin2hex@hex
  1343                           
  1344                           ;d7s.c: 52:             break;
  1345  0043  28B0               	goto	l998
  1346  0044                     l976:
  1347                           
  1348                           ;d7s.c: 55:             hex = 0x70;
  1349  0044  3070               	movlw	112
  1350  0045  00F3               	movwf	??_d7s_bin2hex
  1351  0046  0873               	movf	??_d7s_bin2hex,w
  1352  0047  00F6               	movwf	d7s_bin2hex@hex
  1353                           
  1354                           ;d7s.c: 56:             break;
  1355  0048  28B0               	goto	l998
  1356  0049                     l978:
  1357                           
  1358                           ;d7s.c: 59:             hex = 0x7F;
  1359  0049  307F               	movlw	127
  1360  004A  00F3               	movwf	??_d7s_bin2hex
  1361  004B  0873               	movf	??_d7s_bin2hex,w
  1362  004C  00F6               	movwf	d7s_bin2hex@hex
  1363                           
  1364                           ;d7s.c: 60:             break;
  1365  004D  28B0               	goto	l998
  1366  004E                     l980:
  1367                           
  1368                           ;d7s.c: 63:             hex = 0x7B;
  1369  004E  307B               	movlw	123
  1370  004F  00F3               	movwf	??_d7s_bin2hex
  1371  0050  0873               	movf	??_d7s_bin2hex,w
  1372  0051  00F6               	movwf	d7s_bin2hex@hex
  1373                           
  1374                           ;d7s.c: 64:             break;
  1375  0052  28B0               	goto	l998
  1376  0053                     l982:
  1377                           
  1378                           ;d7s.c: 67:             hex = 0x77;
  1379  0053  3077               	movlw	119
  1380  0054  00F3               	movwf	??_d7s_bin2hex
  1381  0055  0873               	movf	??_d7s_bin2hex,w
  1382  0056  00F6               	movwf	d7s_bin2hex@hex
  1383                           
  1384                           ;d7s.c: 68:             break;
  1385  0057  28B0               	goto	l998
  1386  0058                     l984:
  1387                           
  1388                           ;d7s.c: 71:             hex = 0x1F;
  1389  0058  301F               	movlw	31
  1390  0059  00F3               	movwf	??_d7s_bin2hex
  1391  005A  0873               	movf	??_d7s_bin2hex,w
  1392  005B  00F6               	movwf	d7s_bin2hex@hex
  1393                           
  1394                           ;d7s.c: 72:             break;
  1395  005C  28B0               	goto	l998
  1396  005D                     l986:
  1397                           
  1398                           ;d7s.c: 75:             hex = 0x4E;
  1399  005D  304E               	movlw	78
  1400  005E  00F3               	movwf	??_d7s_bin2hex
  1401  005F  0873               	movf	??_d7s_bin2hex,w
  1402  0060  00F6               	movwf	d7s_bin2hex@hex
  1403                           
  1404                           ;d7s.c: 76:             break;
  1405  0061  28B0               	goto	l998
  1406  0062                     l988:
  1407                           
  1408                           ;d7s.c: 79:             hex = 0x3D;
  1409  0062  303D               	movlw	61
  1410  0063  00F3               	movwf	??_d7s_bin2hex
  1411  0064  0873               	movf	??_d7s_bin2hex,w
  1412  0065  00F6               	movwf	d7s_bin2hex@hex
  1413                           
  1414                           ;d7s.c: 80:             break;
  1415  0066  28B0               	goto	l998
  1416  0067                     l990:
  1417                           
  1418                           ;d7s.c: 83:             hex = 0x4F;
  1419  0067  304F               	movlw	79
  1420  0068  00F3               	movwf	??_d7s_bin2hex
  1421  0069  0873               	movf	??_d7s_bin2hex,w
  1422  006A  00F6               	movwf	d7s_bin2hex@hex
  1423                           
  1424                           ;d7s.c: 84:             break;
  1425  006B  28B0               	goto	l998
  1426  006C                     l992:
  1427                           
  1428                           ;d7s.c: 87:             hex = 0x47;
  1429  006C  3047               	movlw	71
  1430  006D  00F3               	movwf	??_d7s_bin2hex
  1431  006E  0873               	movf	??_d7s_bin2hex,w
  1432  006F  00F6               	movwf	d7s_bin2hex@hex
  1433                           
  1434                           ;d7s.c: 88:             break;
  1435  0070  28B0               	goto	l998
  1436  0071                     l994:
  1437                           
  1438                           ;d7s.c: 91:             hex = 0xFF;
  1439  0071  30FF               	movlw	255
  1440  0072  00F3               	movwf	??_d7s_bin2hex
  1441  0073  0873               	movf	??_d7s_bin2hex,w
  1442  0074  00F6               	movwf	d7s_bin2hex@hex
  1443                           
  1444                           ;d7s.c: 92:     }
  1445  0075  28B0               	goto	l998
  1446  0076                     l996:
  1447  0076  0875               	movf	d7s_bin2hex@num,w
  1448  0077  00F3               	movwf	??_d7s_bin2hex
  1449  0078  01F4               	clrf	??_d7s_bin2hex+1
  1450                           
  1451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1452                           ; Switch size 1, requested type "simple"
  1453                           ; Number of cases is 1, Range of values is 0 to 0
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte            4     3 (average)
  1457                           ; direct_byte           11     8 (fixed)
  1458                           ; jumptable            260     6 (fixed)
  1459                           ;	Chosen strategy is simple_byte
  1460  0079  0874               	movf	??_d7s_bin2hex+1,w
  1461  007A  3A00               	xorlw	0	; case 0
  1462  007B  1903               	skipnz
  1463  007C  287E               	goto	l1216
  1464  007D  2871               	goto	l994
  1465  007E                     l1216:
  1466                           
  1467                           ; Switch size 1, requested type "simple"
  1468                           ; Number of cases is 16, Range of values is 0 to 15
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; simple_byte           49    25 (average)
  1472                           ; direct_byte           56     8 (fixed)
  1473                           ; jumptable            260     6 (fixed)
  1474                           ;	Chosen strategy is simple_byte
  1475  007E  0873               	movf	??_d7s_bin2hex,w
  1476  007F  3A00               	xorlw	0	; case 0
  1477  0080  1903               	skipnz
  1478  0081  2821               	goto	l962
  1479  0082  3A01               	xorlw	1	; case 1
  1480  0083  1903               	skipnz
  1481  0084  2826               	goto	l964
  1482  0085  3A03               	xorlw	3	; case 2
  1483  0086  1903               	skipnz
  1484  0087  282B               	goto	l966
  1485  0088  3A01               	xorlw	1	; case 3
  1486  0089  1903               	skipnz
  1487  008A  2830               	goto	l968
  1488  008B  3A07               	xorlw	7	; case 4
  1489  008C  1903               	skipnz
  1490  008D  2835               	goto	l970
  1491  008E  3A01               	xorlw	1	; case 5
  1492  008F  1903               	skipnz
  1493  0090  283A               	goto	l972
  1494  0091  3A03               	xorlw	3	; case 6
  1495  0092  1903               	skipnz
  1496  0093  283F               	goto	l974
  1497  0094  3A01               	xorlw	1	; case 7
  1498  0095  1903               	skipnz
  1499  0096  2844               	goto	l976
  1500  0097  3A0F               	xorlw	15	; case 8
  1501  0098  1903               	skipnz
  1502  0099  2849               	goto	l978
  1503  009A  3A01               	xorlw	1	; case 9
  1504  009B  1903               	skipnz
  1505  009C  284E               	goto	l980
  1506  009D  3A03               	xorlw	3	; case 10
  1507  009E  1903               	skipnz
  1508  009F  2853               	goto	l982
  1509  00A0  3A01               	xorlw	1	; case 11
  1510  00A1  1903               	skipnz
  1511  00A2  2858               	goto	l984
  1512  00A3  3A07               	xorlw	7	; case 12
  1513  00A4  1903               	skipnz
  1514  00A5  285D               	goto	l986
  1515  00A6  3A01               	xorlw	1	; case 13
  1516  00A7  1903               	skipnz
  1517  00A8  2862               	goto	l988
  1518  00A9  3A03               	xorlw	3	; case 14
  1519  00AA  1903               	skipnz
  1520  00AB  2867               	goto	l990
  1521  00AC  3A01               	xorlw	1	; case 15
  1522  00AD  1903               	skipnz
  1523  00AE  286C               	goto	l992
  1524  00AF  2871               	goto	l994
  1525  00B0                     l998:
  1526                           
  1527                           ;d7s.c: 94:     return hex;
  1528  00B0  0876               	movf	d7s_bin2hex@hex,w
  1529  00B1                     l235:
  1530  00B1  0008               	return
  1531  00B2                     __end_of_d7s_bin2hex:
  1532                           
  1533                           	psect	text8
  1534  01C3                     __ptext8:	
  1535 ;; *************** function _adc_logic *****************
  1536 ;; Defined at:
  1537 ;;		line 135 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    2
  1558 ;; This function calls:
  1559 ;;		_adc_start
  1560 ;;		_adc_wait
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _adc_logic
  1568  01C3                     _adc_logic:
  1569  01C3                     l1096:	
  1570                           ;incstack = 0
  1571                           ; Regs used in _adc_logic: [status,2+status,0+pclath+cstack]
  1572                           
  1573                           
  1574                           ;main.c: 137:     if (ADCON0bits.GO)
  1575  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1576  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1577  01C5  1C9F               	btfss	31,1	;volatile
  1578  01C6  29C8               	goto	u241
  1579  01C7  29C9               	goto	u240
  1580  01C8                     u241:
  1581  01C8  29CA               	goto	l1100
  1582  01C9                     u240:
  1583  01C9  29D4               	goto	l96
  1584  01CA                     l1100:
  1585                           
  1586                           ;main.c: 142:     adc_wait();
  1587  01CA  120A  118A  21D5  120A  118A  	fcall	_adc_wait
  1588                           
  1589                           ;main.c: 143:     adc_start();
  1590  01CF  120A  118A  21EE  120A  118A  	fcall	_adc_start
  1591  01D4                     l96:
  1592  01D4  0008               	return
  1593  01D5                     __end_of_adc_logic:
  1594                           
  1595                           	psect	text9
  1596  01D5                     __ptext9:	
  1597 ;; *************** function _adc_wait *****************
  1598 ;; Defined at:
  1599 ;;		line 47 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		None
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0
  1616 ;;      Totals:         0       0       0       0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_adc_logic
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _adc_wait
  1629  01D5                     _adc_wait:
  1630  01D5                     l1012:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _adc_wait: []
  1633                           
  1634  01D5  0000               	nop	;# 
  1635  01D6  0000               	nop	;# 
  1636  01D7  0000               	nop	;# 
  1637  01D8  0000               	nop	;# 
  1638  01D9  0000               	nop	;# 
  1639  01DA  0000               	nop	;# 
  1640  01DB  0000               	nop	;# 
  1641  01DC  0000               	nop	;# 
  1642  01DD  0000               	nop	;# 
  1643  01DE  0000               	nop	;# 
  1644  01DF                     l213:	
  1645                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 60:     return;
  1646                           
  1647  01DF  0008               	return
  1648  01E0                     __end_of_adc_wait:
  1649                           
  1650                           	psect	text10
  1651  01EE                     __ptext10:	
  1652 ;; *************** function _adc_start *****************
  1653 ;; Defined at:
  1654 ;;		line 22 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		None
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_adc_logic
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _adc_start
  1684  01EE                     _adc_start:
  1685  01EE                     l1014:	
  1686                           ;incstack = 0
  1687                           ; Regs used in _adc_start: []
  1688                           
  1689                           
  1690                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 24:     ADCON0bits.GO 
      +                          = 1;
  1691  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1692  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1693  01F0  149F               	bsf	31,1	;volatile
  1694  01F1                     l201:	
  1695                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 26:     return;
  1696                           
  1697  01F1  0008               	return
  1698  01F2                     __end_of_adc_start:
  1699                           
  1700                           	psect	text11
  1701  0152                     __ptext11:	
  1702 ;; *************** function _isr *****************
  1703 ;; Defined at:
  1704 ;;		line 95 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0
  1720 ;;      Temps:          3       0       0       0       0
  1721 ;;      Totals:         3       0       0       0       0
  1722 ;;Total ram usage:        3 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		Interrupt level 1
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _isr
  1733  0152                     _isr:
  1734  0152                     i1l1126:
  1735                           
  1736                           ;main.c: 97:     if (INTCONbits.RBIF)
  1737  0152  1C0B               	btfss	11,0	;volatile
  1738  0153  2955               	goto	u34_21
  1739  0154  2956               	goto	u34_20
  1740  0155                     u34_21:
  1741  0155  295D               	goto	i1l1132
  1742  0156                     u34_20:
  1743  0156                     i1l1128:
  1744                           
  1745                           ;main.c: 98:     {;main.c: 99:         INTCONbits.RBIF = 0;
  1746  0156  100B               	bcf	11,0	;volatile
  1747  0157                     i1l1130:
  1748                           
  1749                           ;main.c: 100:         portb_flags = PORTB;
  1750  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0159  0806               	movf	6,w	;volatile
  1753  015A  00F0               	movwf	??_isr
  1754  015B  0870               	movf	??_isr,w
  1755  015C  00F8               	movwf	_portb_flags
  1756  015D                     i1l1132:
  1757                           
  1758                           ;main.c: 103:     if (INTCONbits.T0IF)
  1759  015D  1D0B               	btfss	11,2	;volatile
  1760  015E  2960               	goto	u35_21
  1761  015F  2961               	goto	u35_20
  1762  0160                     u35_21:
  1763  0160  296E               	goto	i1l1142
  1764  0161                     u35_20:
  1765  0161                     i1l1134:
  1766                           
  1767                           ;main.c: 104:     {;main.c: 105:         INTCONbits.T0IF = 0;
  1768  0161  110B               	bcf	11,2	;volatile
  1769  0162                     i1l1136:
  1770                           
  1771                           ;main.c: 106:         TMR0 = 6;;
  1772  0162  3006               	movlw	6
  1773  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0165  0081               	movwf	1	;volatile
  1776  0166                     i1l1138:
  1777                           
  1778                           ;main.c: 107:         push_timer++;
  1779  0166  3001               	movlw	1
  1780  0167  00F0               	movwf	??_isr
  1781  0168  0870               	movf	??_isr,w
  1782  0169  07AA               	addwf	_push_timer,f
  1783  016A                     i1l1140:
  1784                           
  1785                           ;main.c: 108:         mux_timer++;
  1786  016A  3001               	movlw	1
  1787  016B  00F0               	movwf	??_isr
  1788  016C  0870               	movf	??_isr,w
  1789  016D  07A9               	addwf	_mux_timer,f
  1790  016E                     i1l1142:
  1791                           
  1792                           ;main.c: 111:     if (PIR1bits.ADIF)
  1793  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1794  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0170  1F0C               	btfss	12,6	;volatile
  1796  0171  2973               	goto	u36_21
  1797  0172  2974               	goto	u36_20
  1798  0173                     u36_21:
  1799  0173  2978               	goto	i1l88
  1800  0174                     u36_20:
  1801  0174                     i1l1144:
  1802                           
  1803                           ;main.c: 112:     {;main.c: 113:         adc_data = ADRESH;
  1804  0174  081E               	movf	30,w	;volatile
  1805  0175  00F0               	movwf	??_isr
  1806  0176  0870               	movf	??_isr,w
  1807  0177  00A8               	movwf	_adc_data
  1808  0178                     i1l88:
  1809  0178  0872               	movf	??_isr+2,w
  1810  0179  008A               	movwf	10
  1811  017A  0E71               	swapf	??_isr+1,w
  1812  017B  0083               	movwf	3
  1813  017C  0EFE               	swapf	btemp,f
  1814  017D  0E7E               	swapf	btemp,w
  1815  017E  0009               	retfie
  1816  017F                     __end_of_isr:
  1817  007E                     btemp	set	126	;btemp
  1818  007E                     wtemp0	set	126
  1819                           
  1820                           	psect	intentry
  1821  0004                     __pintentry:	
  1822                           ;incstack = 0
  1823                           ; Regs used in _isr: [wreg+status,2+status,0]
  1824                           
  1825  0004                     interrupt_function:
  1826  007E                     saved_w	set	btemp
  1827  0004  00FE               	movwf	btemp
  1828  0005  0E03               	swapf	3,w
  1829  0006  00F1               	movwf	??_isr+1
  1830  0007  080A               	movf	10,w
  1831  0008  00F2               	movwf	??_isr+2
  1832  0009  120A  118A  2952   	ljmp	_isr
  1833                           
  1834                           	psect	config
  1835                           
  1836                           ;Config register CONFIG1 @ 0x2007
  1837                           ;	Oscillator Selection bits
  1838                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1839                           ;	Watchdog Timer Enable bit
  1840                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1841                           ;	Power-up Timer Enable bit
  1842                           ;	PWRTE = OFF, PWRT disabled
  1843                           ;	RE3/MCLR pin function select bit
  1844                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1845                           ;	Code Protection bit
  1846                           ;	CP = OFF, Program memory code protection is disabled
  1847                           ;	Data Code Protection bit
  1848                           ;	CPD = OFF, Data memory code protection is disabled
  1849                           ;	Brown Out Reset Selection bits
  1850                           ;	BOREN = OFF, BOR disabled
  1851                           ;	Internal External Switchover bit
  1852                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1853                           ;	Fail-Safe Clock Monitor Enabled bit
  1854                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1855                           ;	Low Voltage Programming Enable bit
  1856                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1857                           ;	In-Circuit Debugger Mode bit
  1858                           ;	DEBUG = 0x1, unprogrammed default
  1859  2007                     	org	8199
  1860  2007  20D4               	dw	8404
  1861                           
  1862                           ;Config register CONFIG2 @ 0x2008
  1863                           ;	Brown-out Reset Selection bit
  1864                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1865                           ;	Flash Program Memory Self Write Enable bits
  1866                           ;	WRT = OFF, Write protection off
  1867  2008                     	org	8200
  1868  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      8      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    d7s_2display@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _d7s_2display->_d7s_bin2hex

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mux_logic
    _mux_logic->_d7s_2display

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     488
                          _adc_logic
                          _mux_logic
                         _push_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                     _adc_isr_enable
 ---------------------------------------------------------------------------------
 (2) _adc_isr_enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _push_logic                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mux_logic                                            2     2      0     488
                                              6 BANK0      2     2      0
                       _d7s_2display
 ---------------------------------------------------------------------------------
 (2) _d7s_2display                                         6     2      4     488
                                              0 BANK0      6     2      4
                        _d7s_bin2hex
 ---------------------------------------------------------------------------------
 (3) _d7s_bin2hex                                          4     4      0      63
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_logic                                            0     0      0       0
                          _adc_start
                           _adc_wait
 ---------------------------------------------------------------------------------
 (2) _adc_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_logic
     _adc_start
     _adc_wait
   _mux_logic
     _d7s_2display
       _d7s_bin2hex
   _push_logic
   _setup
     _adc_config
     _adc_isr_enable

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb  4 19:32:37 2021

                     l92 00ED                       l77 0184                       l96 01D4  
                    l100 01C2                      l101 01BA                      l201 01F1  
                    l105 0120                      l213 01DF                      l207 01ED  
                    l240 0151                      l235 00B1                      l198 01E9  
                    l960 0020                      l970 0035                      l962 0021  
                    l980 004E                      l972 003A                      l964 0026  
                    l990 0067                      l982 0053                      l974 003F  
                    l966 002B                      l958 001C                      l992 006C  
                    l984 0058                      l976 0044                      l968 0030  
                    l994 0071                      l986 005D                      l978 0049  
                    l988 0062                      l996 0076                      l998 00B0  
                    u210 01AF                      u211 01AE                      u220 01B6  
                    u221 01B5                      u230 01C0                      u231 01BF  
                    u240 01C9                      u400 00C2                      u241 01C8  
                    u401 00C0                      u410 00C3                      u420 00CE  
                    u421 00CA                      u440 00D9                      u441 00D5  
                    u370 0128                      u434 00D1                      u371 0127  
                    u460 019E                      u461 019A                      u454 00DC  
                    u390 00BA                      u391 00B9                      u385 013C  
                    u474 01A1                      _isr 0152                      fsr0 0004  
                    indf 0000                     l1012 01D5                     l1100 01CA  
                   l1020 01E7                     l1014 01EE                     l1022 01E8  
                   l1030 00F2                     l1016 01E0                     l1040 00FB  
                   l1032 00F3                     l1018 01E4                     l1026 01EA  
                   l1050 0102                     l1042 00FC                     l1034 00F7  
                   l1060 010A                     l1052 0103                     l1044 00FF  
                   l1036 00F9                     l1028 00EE                     l1070 0110  
                   l1062 010C                     l1054 0107                     l1046 0100  
                   l1038 00FA                     l1216 007E                     l1072 0111  
                   l1064 010D                     l1056 0108                     l1048 0101  
                   l1170 0139                     l1090 01B6                     l1082 01A7  
                   l1074 0115                     l1066 010E                     l1058 0109  
                   l1180 00C6                     l1172 00B2                     l1092 01C0  
                   l1076 0116                     l1068 010F                     l1166 0121  
                   l1182 00D1                     l1086 01B0                     l1078 011B  
                   l1190 018E                     l1096 01C3                     l1168 0128  
                   l1184 00DC                     l1176 00BB                     l1088 01B1  
                   l1192 0193                     l1178 00BC                     l1194 01A1  
                   l1186 017F                     l1188 0189             _push_counter 0079  
                   ?_isr 0070                     _IOCB 0096           ??_d7s_2display 0024  
                   i1l88 0178                     _TMR0 0001                     _main 017F  
                   btemp 007E                     start 000C            ??_d7s_bin2hex 0073  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  u34_20 0156                    u34_21 0155                    u35_20 0161  
                  u35_21 0160                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u36_20 0174                    u36_21 0173                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 00EE                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01A7                   ??_main 0077      __end_of_d7s_bin2hex 00B2  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1130 0157                   i1l1140 016A  
                 i1l1132 015D                   i1l1134 0161                   i1l1142 016E  
                 i1l1126 0152                   i1l1144 0174                   i1l1136 0162  
                 i1l1128 0156                   i1l1138 0166         __end_of_adc_wait 01E0  
                 _OSCCON 008F     __end_of_d7s_2display 0152  __size_of_adc_isr_enable 0004  
                 saved_w 007E  __end_of__initialization 0017       __size_of_adc_logic 0012  
     __size_of_adc_start 0004           __pcstackCOMMON 0070              _d7s_bin2hex 001B  
             _adc_config 01E0            __end_of_setup 0121          d7s_2display@sel 0023  
         _OPTION_REGbits 0081                  ??_setup 0073               __pbssBANK0 0028  
             __pmaintext 017F               __pintentry 0004                ?_adc_wait 0070  
      __end_of_adc_logic 01D5        __end_of_adc_start 01F2       __size_of_mux_logic 003C  
  __size_of_d7s_2display 0031              ?_adc_config 0070                  __ptext1 00EE  
                __ptext2 01EA                  __ptext3 01E0                  __ptext4 01A7  
                __ptext5 00B2                  __ptext6 0121                  __ptext7 001B  
                __ptext8 01C3                  __ptext9 01D5               ??_adc_wait 0073  
         _adc_isr_enable 01EA             __size_of_isr 002D     end_of_initialization 0017  
           _d7s_2display 0121        __end_of_mux_logic 00EE   __end_of_adc_isr_enable 01EE  
              _PORTEbits 0009      __size_of_adc_config 000A               _push_logic 01A7  
             _push_timer 002A             ?_d7s_bin2hex 0070          ?_adc_isr_enable 0070  
    start_initialization 000F              __end_of_isr 017F         d7s_2display@data 0022  
       d7s_2display@port 0020        __size_of_adc_wait 000B              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                _adc_logic 01C3  
              _adc_start 01EE              ?_push_logic 0070             ??_adc_config 0073  
             ?_adc_logic 0070               ?_adc_start 0070           __size_of_setup 0033  
     __end_of_adc_config 01EA        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C     __size_of_d7s_bin2hex 0097                _mux_logic 00B2  
              _mux_timer 0029      __size_of_push_logic 001C               _ADCON0bits 001F  
             _ADCON1bits 009F         ??_adc_isr_enable 0073               ?_mux_logic 0070  
               _adc_data 0028                 _adc_wait 01D5                 __ptext10 01EE  
               __ptext11 0152              ??_adc_logic 0073              ??_adc_start 0073  
          __size_of_main 0028           d7s_bin2hex@hex 0076                 _mux_flag 0077  
         d7s_bin2hex@num 0075               _INTCONbits 000B             ??_push_logic 0073  
               intlevel1 0000              ??_mux_logic 0026       __end_of_push_logic 01C3  
          ?_d7s_2display 0020              _portb_flags 0078  
