

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 21:54:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0014                     _SSPCON	set	20
   367  001F                     _ADCON0	set	31
   368  000B                     _INTCONbits	set	11
   369  0009                     _PORTE	set	9
   370  0007                     _PORTC	set	7
   371  0005                     _PORTA	set	5
   372  001F                     _ADCON0bits	set	31
   373  0013                     _SSPBUF	set	19
   374  001E                     _ADRESH	set	30
   375  000C                     _PIR1bits	set	12
   376  0008                     _PORTD	set	8
   377  0006                     _PORTB	set	6
   378  0094                     _SSPSTAT	set	148
   379  008C                     _PIE1bits	set	140
   380  009F                     _ADCON1bits	set	159
   381  0081                     _OPTION_REGbits	set	129
   382  008F                     _OSCCON	set	143
   383  0096                     _IOCB	set	150
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0011                     __end_of__initialization:
   407  0011  0183               	clrf	3
   408  0012  120A  118A  284F   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0077                     __pbssCOMMON:
   412  0077                     _trash:
   413  0077                     	ds	1
   414  0078                     _adc_data:
   415  0078                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_setup:
   420  0070                     ?_adc_logic:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_adc_wait:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_adc_start:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_adc_config:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_adc_isr_enable:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_isr:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_isr:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	3
   447  0073                     ??_adc_logic:
   448  0073                     ??_adc_wait:	
   449                           ; 1 bytes @ 0x3
   450                           
   451  0073                     ??_adc_start:	
   452                           ; 1 bytes @ 0x3
   453                           
   454  0073                     ??_adc_config:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     ??_adc_isr_enable:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     ?_spi_init:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0073                     spi_init@sDataSample:	
   464                           ; 1 bytes @ 0x3
   465                           
   466                           
   467                           ; 1 bytes @ 0x3
   468  0073                     	ds	1
   469  0074                     spi_init@sClockIdle:
   470                           
   471                           ; 1 bytes @ 0x4
   472  0074                     	ds	1
   473  0075                     spi_init@sTransmitEdge:
   474                           
   475                           ; 1 bytes @ 0x5
   476  0075                     	ds	1
   477  0076                     ??_spi_init:
   478  0076                     spi_init@sType:	
   479                           ; 1 bytes @ 0x6
   480                           
   481                           
   482                           ; 1 bytes @ 0x6
   483  0076                     	ds	1
   484  0077                     ??_setup:
   485  0077                     ??_main:	
   486                           ; 1 bytes @ 0x7
   487                           
   488                           
   489                           	psect	maintext
   490  004F                     __pmaintext:	
   491                           ; 1 bytes @ 0x7
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 66 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels required when called:    3
   517 ;; This function calls:
   518 ;;		_adc_logic
   519 ;;		_setup
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  004F                     _main:
   528  004F                     l914:	
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;main.c: 68:     setup();
   534  004F  120A  118A  2015  120A  118A  	fcall	_setup
   535  0054                     l916:
   536                           
   537                           ;main.c: 70:     {;main.c: 71:         adc_logic();
   538  0054  120A  118A  20A8  120A  118A  	fcall	_adc_logic
   539                           
   540                           ;main.c: 73:         PORTB = adc_data;
   541  0059  0878               	movf	_adc_data,w
   542  005A  1283               	bcf	3,5	;RP0=0, select bank0
   543  005B  1303               	bcf	3,6	;RP1=0, select bank0
   544  005C  0086               	movwf	6	;volatile
   545                           
   546                           ;main.c: 75:         if (adc_data < 25)
   547  005D  3019               	movlw	25
   548  005E  0278               	subwf	_adc_data,w
   549  005F  1803               	skipnc
   550  0060  2862               	goto	u81
   551  0061  2863               	goto	u80
   552  0062                     u81:
   553  0062  2866               	goto	l920
   554  0063                     u80:
   555  0063                     l918:
   556                           
   557                           ;main.c: 76:         {;main.c: 77:             PORTD = 1;
   558  0063  3001               	movlw	1
   559  0064  0088               	movwf	8	;volatile
   560                           
   561                           ;main.c: 78:         }
   562  0065  2854               	goto	l916
   563  0066                     l920:
   564  0066  3025               	movlw	37
   565  0067  0278               	subwf	_adc_data,w
   566  0068  1803               	skipnc
   567  0069  286B               	goto	u91
   568  006A  286C               	goto	u90
   569  006B                     u91:
   570  006B  286F               	goto	l924
   571  006C                     u90:
   572  006C                     l922:
   573                           
   574                           ;main.c: 80:         {;main.c: 81:             PORTD = 2;
   575  006C  3002               	movlw	2
   576  006D  0088               	movwf	8	;volatile
   577                           
   578                           ;main.c: 82:         }
   579  006E  2854               	goto	l916
   580  006F                     l924:
   581                           
   582                           ;main.c: 84:         {;main.c: 85:             PORTD = 4;
   583  006F  3004               	movlw	4
   584  0070  0088               	movwf	8	;volatile
   585  0071  2854               	goto	l916
   586  0072  120A  118A  280C   	ljmp	start
   587  0075                     __end_of_main:
   588                           
   589                           	psect	text1
   590  0015                     __ptext1:	
   591 ;; *************** function _setup *****************
   592 ;; Defined at:
   593 ;;		line 121 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		_adc_config
   616 ;;		_adc_isr_enable
   617 ;;		_spi_init
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _setup
   625  0015                     _setup:
   626  0015                     l860:	
   627                           ;incstack = 0
   628                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   629                           
   630                           
   631                           ;main.c: 123:     ANSEL = 0x09;
   632  0015  3009               	movlw	9
   633  0016  1683               	bsf	3,5	;RP0=1, select bank3
   634  0017  1703               	bsf	3,6	;RP1=1, select bank3
   635  0018  0088               	movwf	8	;volatile
   636  0019                     l862:
   637                           
   638                           ;main.c: 124:     ANSELH = 0x00;
   639  0019  0189               	clrf	9	;volatile
   640  001A                     l864:
   641                           
   642                           ;main.c: 126:     TRISA = 0x29;
   643  001A  3029               	movlw	41
   644  001B  1683               	bsf	3,5	;RP0=1, select bank1
   645  001C  1303               	bcf	3,6	;RP1=0, select bank1
   646  001D  0085               	movwf	5	;volatile
   647                           
   648                           ;main.c: 127:     TRISB = 0x00;
   649  001E  0186               	clrf	6	;volatile
   650  001F                     l866:
   651                           
   652                           ;main.c: 128:     TRISC = 0x18;
   653  001F  3018               	movlw	24
   654  0020  0087               	movwf	7	;volatile
   655  0021                     l868:
   656                           
   657                           ;main.c: 129:     TRISD = 0x00;
   658  0021  0188               	clrf	8	;volatile
   659  0022                     l870:
   660                           
   661                           ;main.c: 130:     TRISE = 0x00;
   662  0022  0189               	clrf	9	;volatile
   663  0023                     l872:
   664                           
   665                           ;main.c: 132:     PORTA = 0;
   666  0023  1283               	bcf	3,5	;RP0=0, select bank0
   667  0024  1303               	bcf	3,6	;RP1=0, select bank0
   668  0025  0185               	clrf	5	;volatile
   669  0026                     l874:
   670                           
   671                           ;main.c: 133:     PORTB = 0;
   672  0026  0186               	clrf	6	;volatile
   673  0027                     l876:
   674                           
   675                           ;main.c: 134:     PORTC = 0;
   676  0027  0187               	clrf	7	;volatile
   677  0028                     l878:
   678                           
   679                           ;main.c: 135:     PORTD = 0;
   680  0028  0188               	clrf	8	;volatile
   681  0029                     l880:
   682                           
   683                           ;main.c: 136:     PORTE = 0;
   684  0029  0189               	clrf	9	;volatile
   685  002A                     l882:
   686                           
   687                           ;main.c: 139:     IOCB = 0x00;
   688  002A  1683               	bsf	3,5	;RP0=1, select bank1
   689  002B  1303               	bcf	3,6	;RP1=0, select bank1
   690  002C  0196               	clrf	22	;volatile
   691  002D                     l884:
   692                           
   693                           ;main.c: 140:     INTCONbits.RBIE = 0;
   694  002D  118B               	bcf	11,3	;volatile
   695  002E                     l886:
   696                           
   697                           ;main.c: 141:     INTCONbits.T0IE = 0;
   698  002E  128B               	bcf	11,5	;volatile
   699  002F                     l888:
   700                           
   701                           ;main.c: 142:     INTCONbits.PEIE = 1;
   702  002F  170B               	bsf	11,6	;volatile
   703  0030                     l890:
   704                           
   705                           ;main.c: 143:     INTCONbits.GIE = 1;
   706  0030  178B               	bsf	11,7	;volatile
   707  0031                     l892:
   708                           
   709                           ;main.c: 145:     OSCCON = 0b01100001;
   710  0031  3061               	movlw	97
   711  0032  008F               	movwf	15	;volatile
   712  0033                     l894:
   713                           
   714                           ;main.c: 147:     OPTION_REGbits.T0CS = 0;
   715  0033  1281               	bcf	1,5	;volatile
   716  0034                     l896:
   717                           
   718                           ;main.c: 148:     OPTION_REGbits.PSA = 0;
   719  0034  1181               	bcf	1,3	;volatile
   720  0035                     l898:
   721                           
   722                           ;main.c: 149:     OPTION_REGbits.PS2 = 0;
   723  0035  1101               	bcf	1,2	;volatile
   724  0036                     l900:
   725                           
   726                           ;main.c: 150:     OPTION_REGbits.PS1 = 0;
   727  0036  1081               	bcf	1,1	;volatile
   728  0037                     l902:
   729                           
   730                           ;main.c: 151:     OPTION_REGbits.PS0 = 1;
   731  0037  1401               	bsf	1,0	;volatile
   732  0038                     l904:
   733                           
   734                           ;main.c: 153:     adc_config();
   735  0038  120A  118A  20C5  120A  118A  	fcall	_adc_config
   736  003D                     l906:
   737                           
   738                           ;main.c: 154:     adc_isr_enable();
   739  003D  120A  118A  20CF  120A  118A  	fcall	_adc_isr_enable
   740  0042                     l908:
   741                           
   742                           ;main.c: 156:     ADCON1bits.VCFG0 = 1;
   743  0042  1683               	bsf	3,5	;RP0=1, select bank1
   744  0043  1303               	bcf	3,6	;RP1=0, select bank1
   745  0044  161F               	bsf	31,4	;volatile
   746  0045                     l910:
   747                           
   748                           ;main.c: 158:     spi_init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   749  0045  01F3               	clrf	spi_init@sDataSample
   750  0046  01F4               	clrf	spi_init@sClockIdle
   751  0047  01F5               	clrf	spi_init@sTransmitEdge
   752  0048  3024               	movlw	36
   753  0049  120A  118A  2092  120A  118A  	fcall	_spi_init
   754  004E                     l86:
   755  004E  0008               	return
   756  004F                     __end_of_setup:
   757                           
   758                           	psect	text2
   759  0092                     __ptext2:	
   760 ;; *************** function _spi_init *****************
   761 ;; Defined at:
   762 ;;		line 12 in file "spi.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  sType           1    wreg     enum E1264
   765 ;;  sDataSample     1    3[COMMON] enum E1272
   766 ;;  sClockIdle      1    4[COMMON] enum E1276
   767 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  sType           1    6[COMMON] enum E1264
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         3       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         4       0       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_setup
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _spi_init
   795  0092                     _spi_init:
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _spi_init: [wreg+status,2+status,0]
   799                           ;spi_init@sType stored from wreg
   800  0092  00F6               	movwf	spi_init@sType
   801  0093                     l850:
   802                           
   803                           ;spi.c: 12: void spi_init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   804  0093  1683               	bsf	3,5	;RP0=1, select bank1
   805  0094  1303               	bcf	3,6	;RP1=0, select bank1
   806  0095  1287               	bcf	7,5	;volatile
   807                           
   808                           ;spi.c: 15:     if(sType & 0b00000100)
   809  0096  1D76               	btfss	spi_init@sType,2
   810  0097  2899               	goto	u71
   811  0098  289A               	goto	u70
   812  0099                     u71:
   813  0099  289E               	goto	l856
   814  009A                     u70:
   815  009A                     l852:
   816                           
   817                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   818  009A  0875               	movf	spi_init@sTransmitEdge,w
   819  009B  0094               	movwf	20	;volatile
   820  009C                     l854:
   821                           
   822                           ;spi.c: 18:         TRISC3 = 1;
   823  009C  1587               	bsf	7,3	;volatile
   824                           
   825                           ;spi.c: 19:     }
   826  009D  28A2               	goto	l212
   827  009E                     l856:
   828                           
   829                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   830  009E  0873               	movf	spi_init@sDataSample,w
   831  009F  0475               	iorwf	spi_init@sTransmitEdge,w
   832  00A0  0094               	movwf	20	;volatile
   833  00A1                     l858:
   834                           
   835                           ;spi.c: 23:         TRISC3 = 0;
   836  00A1  1187               	bcf	7,3	;volatile
   837  00A2                     l212:	
   838                           ;spi.c: 24:     }
   839                           
   840                           
   841                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   842  00A2  0876               	movf	spi_init@sType,w
   843  00A3  0474               	iorwf	spi_init@sClockIdle,w
   844  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   845  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   846  00A6  0094               	movwf	20	;volatile
   847  00A7                     l213:
   848  00A7  0008               	return
   849  00A8                     __end_of_spi_init:
   850                           
   851                           	psect	text3
   852  00CF                     __ptext3:	
   853 ;; *************** function _adc_isr_enable *****************
   854 ;; Defined at:
   855 ;;		line 40 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		None
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_setup
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _adc_isr_enable
   885  00CF                     _adc_isr_enable:
   886  00CF                     l754:	
   887                           ;incstack = 0
   888                           ; Regs used in _adc_isr_enable: []
   889                           
   890                           
   891                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 42:     INTCONbits.PEI
      +                          E = 1;
   892  00CF  170B               	bsf	11,6	;volatile
   893                           
   894                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 43:     PIE1bits.ADIE 
      +                          = 1;
   895  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   896  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   897  00D2  170C               	bsf	12,6	;volatile
   898  00D3                     l190:
   899  00D3  0008               	return
   900  00D4                     __end_of_adc_isr_enable:
   901                           
   902                           	psect	text4
   903  00C5                     __ptext4:	
   904 ;; *************** function _adc_config *****************
   905 ;; Defined at:
   906 ;;		line 11 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_setup
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _adc_config
   936  00C5                     _adc_config:
   937  00C5                     l744:	
   938                           ;incstack = 0
   939                           ; Regs used in _adc_config: [wreg]
   940                           
   941                           
   942                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 13:     ADCON0 = 0b100
      +                          00001;
   943  00C5  3081               	movlw	129
   944  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   945  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   946  00C8  009F               	movwf	31	;volatile
   947  00C9                     l746:
   948                           
   949                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 15:     ADCON1bits.ADF
      +                          M = 0;
   950  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   951  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   952  00CB  139F               	bcf	31,7	;volatile
   953  00CC                     l748:
   954                           
   955                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 16:     ADCON1bits.VCF
      +                          G1 = 0;
   956  00CC  129F               	bcf	31,5	;volatile
   957  00CD                     l750:
   958                           
   959                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 17:     ADCON1bits.VCF
      +                          G0 = 0;
   960  00CD  121F               	bcf	31,4	;volatile
   961  00CE                     l181:
   962  00CE  0008               	return
   963  00CF                     __end_of_adc_config:
   964                           
   965                           	psect	text5
   966  00A8                     __ptext5:	
   967 ;; *************** function _adc_logic *****************
   968 ;; Defined at:
   969 ;;		line 107 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		status,2, status,0, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    2
   990 ;; This function calls:
   991 ;;		_adc_start
   992 ;;		_adc_wait
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _adc_logic
  1000  00A8                     _adc_logic:
  1001  00A8                     l820:	
  1002                           ;incstack = 0
  1003                           ; Regs used in _adc_logic: [status,2+status,0+pclath+cstack]
  1004                           
  1005                           
  1006                           ;main.c: 109:     if (ADCON0bits.GO)
  1007  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1008  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1009  00AA  1C9F               	btfss	31,1	;volatile
  1010  00AB  28AD               	goto	u21
  1011  00AC  28AE               	goto	u20
  1012  00AD                     u21:
  1013  00AD  28AF               	goto	l824
  1014  00AE                     u20:
  1015  00AE  28B9               	goto	l83
  1016  00AF                     l824:
  1017                           
  1018                           ;main.c: 114:     adc_wait();
  1019  00AF  120A  118A  20BA  120A  118A  	fcall	_adc_wait
  1020                           
  1021                           ;main.c: 115:     adc_start();
  1022  00B4  120A  118A  20D4  120A  118A  	fcall	_adc_start
  1023  00B9                     l83:
  1024  00B9  0008               	return
  1025  00BA                     __end_of_adc_logic:
  1026                           
  1027                           	psect	text6
  1028  00BA                     __ptext6:	
  1029 ;; *************** function _adc_wait *****************
  1030 ;; Defined at:
  1031 ;;		line 51 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		None
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_adc_logic
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _adc_wait
  1061  00BA                     _adc_wait:
  1062  00BA                     l740:	
  1063                           ;incstack = 0
  1064                           ; Regs used in _adc_wait: []
  1065                           
  1066  00BA  0000               	nop	;# 
  1067  00BB  0000               	nop	;# 
  1068  00BC  0000               	nop	;# 
  1069  00BD  0000               	nop	;# 
  1070  00BE  0000               	nop	;# 
  1071  00BF  0000               	nop	;# 
  1072  00C0  0000               	nop	;# 
  1073  00C1  0000               	nop	;# 
  1074  00C2  0000               	nop	;# 
  1075  00C3  0000               	nop	;# 
  1076  00C4                     l196:	
  1077                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 64:     return;
  1078                           
  1079  00C4  0008               	return
  1080  00C5                     __end_of_adc_wait:
  1081                           
  1082                           	psect	text7
  1083  00D4                     __ptext7:	
  1084 ;; *************** function _adc_start *****************
  1085 ;; Defined at:
  1086 ;;		line 22 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		None
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_adc_logic
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function _adc_start
  1116  00D4                     _adc_start:
  1117  00D4                     l742:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _adc_start: []
  1120                           
  1121                           
  1122                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 24:     ADCON0bits.GO 
      +                          = 1;
  1123  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1124  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1125  00D6  149F               	bsf	31,1	;volatile
  1126  00D7                     l184:	
  1127                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 26:     return;
  1128                           
  1129  00D7  0008               	return
  1130  00D8                     __end_of_adc_start:
  1131                           
  1132                           	psect	text8
  1133  0075                     __ptext8:	
  1134 ;; *************** function _isr *****************
  1135 ;; Defined at:
  1136 ;;		line 90 in file "main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          3       0       0       0       0
  1153 ;;      Totals:         3       0       0       0       0
  1154 ;;Total ram usage:        3 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		Interrupt level 1
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _isr
  1165  0075                     _isr:
  1166  0075                     i1l838:
  1167                           
  1168                           ;main.c: 92:     if (PIR1bits.ADIF)
  1169  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0077  1F0C               	btfss	12,6	;volatile
  1172  0078  287A               	goto	u5_21
  1173  0079  287B               	goto	u5_20
  1174  007A                     u5_21:
  1175  007A  2880               	goto	i1l844
  1176  007B                     u5_20:
  1177  007B                     i1l840:
  1178                           
  1179                           ;main.c: 93:     {;main.c: 94:         PIR1bits.ADIF = 0;
  1180  007B  130C               	bcf	12,6	;volatile
  1181  007C                     i1l842:
  1182                           
  1183                           ;main.c: 96:         adc_data = ADRESH;
  1184  007C  081E               	movf	30,w	;volatile
  1185  007D  00F0               	movwf	??_isr
  1186  007E  0870               	movf	??_isr,w
  1187  007F  00F8               	movwf	_adc_data
  1188  0080                     i1l844:
  1189                           
  1190                           ;main.c: 99:     if (PIR1bits.SSPIF)
  1191  0080  1D8C               	btfss	12,3	;volatile
  1192  0081  2883               	goto	u6_21
  1193  0082  2884               	goto	u6_20
  1194  0083                     u6_21:
  1195  0083  288B               	goto	i1l79
  1196  0084                     u6_20:
  1197  0084                     i1l846:
  1198                           
  1199                           ;main.c: 100:     {;main.c: 101:         trash = SSPBUF;
  1200  0084  0813               	movf	19,w	;volatile
  1201  0085  00F0               	movwf	??_isr
  1202  0086  0870               	movf	??_isr,w
  1203  0087  00F7               	movwf	_trash
  1204                           
  1205                           ;main.c: 102:         SSPBUF = adc_data;
  1206  0088  0878               	movf	_adc_data,w
  1207  0089  0093               	movwf	19	;volatile
  1208  008A                     i1l848:
  1209                           
  1210                           ;main.c: 103:         PIR1bits.SSPIF = 0;
  1211  008A  118C               	bcf	12,3	;volatile
  1212  008B                     i1l79:
  1213  008B  0872               	movf	??_isr+2,w
  1214  008C  008A               	movwf	10
  1215  008D  0E71               	swapf	??_isr+1,w
  1216  008E  0083               	movwf	3
  1217  008F  0EFE               	swapf	btemp,f
  1218  0090  0E7E               	swapf	btemp,w
  1219  0091  0009               	retfie
  1220  0092                     __end_of_isr:
  1221  007E                     btemp	set	126	;btemp
  1222  007E                     wtemp0	set	126
  1223                           
  1224                           	psect	intentry
  1225  0004                     __pintentry:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _isr: [wreg]
  1228                           
  1229  0004                     interrupt_function:
  1230  007E                     saved_w	set	btemp
  1231  0004  00FE               	movwf	btemp
  1232  0005  0E03               	swapf	3,w
  1233  0006  00F1               	movwf	??_isr+1
  1234  0007  080A               	movf	10,w
  1235  0008  00F2               	movwf	??_isr+2
  1236  0009  120A  118A  2875   	ljmp	_isr
  1237                           
  1238                           	psect	config
  1239                           
  1240                           ;Config register CONFIG1 @ 0x2007
  1241                           ;	Oscillator Selection bits
  1242                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1243                           ;	Watchdog Timer Enable bit
  1244                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1245                           ;	Power-up Timer Enable bit
  1246                           ;	PWRTE = OFF, PWRT disabled
  1247                           ;	RE3/MCLR pin function select bit
  1248                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1249                           ;	Code Protection bit
  1250                           ;	CP = OFF, Program memory code protection is disabled
  1251                           ;	Data Code Protection bit
  1252                           ;	CPD = OFF, Data memory code protection is disabled
  1253                           ;	Brown Out Reset Selection bits
  1254                           ;	BOREN = OFF, BOR disabled
  1255                           ;	Internal External Switchover bit
  1256                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1257                           ;	Fail-Safe Clock Monitor Enabled bit
  1258                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1259                           ;	Low Voltage Programming Enable bit
  1260                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1261                           ;	In-Circuit Debugger Mode bit
  1262                           ;	DEBUG = 0x1, unprogrammed default
  1263  2007                     	org	8199
  1264  2007  20D4               	dw	8404
  1265                           
  1266                           ;Config register CONFIG2 @ 0x2008
  1267                           ;	Brown-out Reset Selection bit
  1268                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1269                           ;	Flash Program Memory Self Write Enable bits
  1270                           ;	WRT = OFF, Write protection off
  1271  2008                     	org	8200
  1272  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spi_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                          _adc_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                         _adc_config
                     _adc_isr_enable
                           _spi_init
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _adc_isr_enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_logic                                            0     0      0       0
                          _adc_start
                           _adc_wait
 ---------------------------------------------------------------------------------
 (2) _adc_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_logic
     _adc_start
     _adc_wait
   _setup
     _adc_config
     _adc_isr_enable
     _spi_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 21:54:10 2021

                     l83 00B9                       l86 004E                       u20 00AE  
                     u21 00AD                       u70 009A                       u71 0099  
                     u80 0063                       u81 0062                       u90 006C  
                     u91 006B                      l212 00A2                      l213 00A7  
                    l181 00CE                      l190 00D3                      l184 00D7  
                    l196 00C4                      l740 00BA                      l820 00A8  
                    l900 0036                      l742 00D4                      l750 00CD  
                    l910 0045                      l902 0037                      l824 00AF  
                    l744 00C5                      l904 0038                      l920 0066  
                    l746 00C9                      l754 00CF                      l850 0093  
                    l906 003D                      l922 006C                      l914 004F  
                    l748 00CC                      l852 009A                      l908 0042  
                    l860 0015                      l924 006F                      l916 0054  
                    l854 009C                      l870 0022                      l862 0019  
                    l918 0063                      l856 009E                      l880 0029  
                    l872 0023                      l864 001A                      l858 00A1  
                    l890 0030                      l882 002A                      l874 0026  
                    l866 001F                      l892 0031                      l884 002D  
                    l876 0027                      l868 0021                      l894 0033  
                    l886 002E                      l878 0028                      l896 0034  
                    l888 002F                      l898 0035                      _isr 0075  
                   ?_isr 0070                     _IOCB 0096                     i1l79 008B  
                   u5_20 007B                     u5_21 007A                     u6_20 0084  
                   u6_21 0083                     _main 004F                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l840 007B                    i1l842 007C  
                  i1l844 0080                    i1l846 0084                    i1l838 0075  
                  i1l848 008A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 0015  
          spi_init@sType 0076                    _trash 0077                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0075                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_wait 00C5                   _OSCCON 008F                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPBUF 0013                   _SSPCON 0014  
__size_of_adc_isr_enable 0005                   saved_w 007E         __end_of_spi_init 00A8  
__end_of__initialization 0011       __size_of_adc_logic 0012       __size_of_adc_start 0004  
         __pcstackCOMMON 0070               _adc_config 00C5            __end_of_setup 004F  
         _OPTION_REGbits 0081                  ??_setup 0077               __pmaintext 004F  
             __pintentry 0004                ?_adc_wait 0070        __end_of_adc_logic 00BA  
      __end_of_adc_start 00D8                  _SSPSTAT 0094       spi_init@sClockIdle 0074  
            ?_adc_config 0070                ?_spi_init 0073                  __ptext1 0015  
                __ptext2 0092                  __ptext3 00CF                  __ptext4 00C5  
                __ptext5 00A8                  __ptext6 00BA                  __ptext7 00D4  
                __ptext8 0075               ??_adc_wait 0073           _adc_isr_enable 00CF  
           __size_of_isr 001D     end_of_initialization 0011               ??_spi_init 0076  
 __end_of_adc_isr_enable 00D4      __size_of_adc_config 000A          ?_adc_isr_enable 0070  
    start_initialization 000F              __end_of_isr 0092        __size_of_adc_wait 000B  
            __pbssCOMMON 0077                ___latbits 0002                _adc_logic 00A8  
              _adc_start 00D4             ??_adc_config 0073        __size_of_spi_init 0016  
             ?_adc_logic 0070               ?_adc_start 0070           __size_of_setup 003A  
     __end_of_adc_config 00CF        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
    spi_init@sDataSample 0073         ??_adc_isr_enable 0073                 _adc_data 0078  
               _adc_wait 00BA    spi_init@sTransmitEdge 0075              ??_adc_logic 0073  
            ??_adc_start 0073            __size_of_main 0026                 _spi_init 0092  
             _INTCONbits 000B                 intlevel1 0000  
