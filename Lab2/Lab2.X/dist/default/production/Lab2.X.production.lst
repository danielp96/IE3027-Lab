

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jan 29 14:23:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0009                     _PORTE	set	9
   206  0007                     _PORTC	set	7
   207  0005                     _PORTA	set	5
   208  0006                     _PORTB	set	6
   209  000B                     _INTCONbits	set	11
   210  0008                     _PORTD	set	8
   211  0096                     _IOCB	set	150
   212  0089                     _TRISE	set	137
   213  0088                     _TRISD	set	136
   214  0087                     _TRISC	set	135
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0189                     _ANSELH	set	393
   218  0188                     _ANSEL	set	392
   219                           
   220                           	psect	cinit
   221  000F                     start_initialization:	
   222                           ; #config settings
   223                           
   224  000F                     __initialization:
   225                           
   226                           ; Clear objects allocated to COMMON
   227  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   228  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   229  0011                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  0011                     __end_of__initialization:
   233  0011  0183               	clrf	3
   234  0012  120A  118A  2831   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMMON
   237  0074                     __pbssCOMMON:
   238  0074                     _portb_flags:
   239  0074                     	ds	1
   240  0075                     _push_counter:
   241  0075                     	ds	1
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:
   245  0070                     ?_setup:
   246  0070                     ?_push_logic:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_isr:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??_isr:	
   256                           ; 1 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260  0070                     	ds	3
   261  0073                     ??_setup:
   262  0073                     ??_push_logic:	
   263                           ; 1 bytes @ 0x3
   264                           
   265                           
   266                           ; 1 bytes @ 0x3
   267  0073                     	ds	1
   268  0074                     ??_main:
   269                           
   270                           	psect	maintext
   271  0031                     __pmaintext:	
   272                           ; 1 bytes @ 0x4
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 65 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called:    2
   298 ;; This function calls:
   299 ;;		_push_logic
   300 ;;		_setup
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  0031                     _main:
   309  0031                     l692:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   312                           
   313                           
   314                           ;main.c: 67:     setup();
   315  0031  120A  118A  2015  120A  118A  	fcall	_setup
   316  0036                     l41:	
   317                           ;main.c: 68:     while(1)
   318                           
   319                           
   320                           ;main.c: 69:     {;main.c: 73:         push_logic();
   321  0036  120A  118A  2055  120A  118A  	fcall	_push_logic
   322  003B                     l694:
   323                           
   324                           ;main.c: 75:         PORTD = push_counter;
   325  003B  0875               	movf	_push_counter,w
   326  003C  1283               	bcf	3,5	;RP0=0, select bank0
   327  003D  1303               	bcf	3,6	;RP1=0, select bank0
   328  003E  0088               	movwf	8	;volatile
   329  003F  2836               	goto	l41
   330  0040  120A  118A  280C   	ljmp	start
   331  0043                     __end_of_main:
   332                           
   333                           	psect	text1
   334  0015                     __ptext1:	
   335 ;; *************** function _setup *****************
   336 ;; Defined at:
   337 ;;		line 105 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; Hardware stack levels required when called:    1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           
   366                           ;psect for function _setup
   367  0015                     _setup:
   368  0015                     l650:	
   369                           ;incstack = 0
   370                           ; Regs used in _setup: [wreg+status,2]
   371                           
   372                           
   373                           ;main.c: 107:     ANSEL = 0x01;
   374  0015  3001               	movlw	1
   375  0016  1683               	bsf	3,5	;RP0=1, select bank3
   376  0017  1703               	bsf	3,6	;RP1=1, select bank3
   377  0018  0088               	movwf	8	;volatile
   378  0019                     l652:
   379                           
   380                           ;main.c: 108:     ANSELH = 0x00;
   381  0019  0189               	clrf	9	;volatile
   382  001A                     l654:
   383                           
   384                           ;main.c: 110:     TRISA = 0x01;
   385  001A  3001               	movlw	1
   386  001B  1683               	bsf	3,5	;RP0=1, select bank1
   387  001C  1303               	bcf	3,6	;RP1=0, select bank1
   388  001D  0085               	movwf	5	;volatile
   389  001E                     l656:
   390                           
   391                           ;main.c: 111:     TRISB = 0x03;
   392  001E  3003               	movlw	3
   393  001F  0086               	movwf	6	;volatile
   394  0020                     l658:
   395                           
   396                           ;main.c: 112:     TRISC = 0x00;
   397  0020  0187               	clrf	7	;volatile
   398  0021                     l660:
   399                           
   400                           ;main.c: 113:     TRISD = 0x00;
   401  0021  0188               	clrf	8	;volatile
   402  0022                     l662:
   403                           
   404                           ;main.c: 114:     TRISE = 0x00;
   405  0022  0189               	clrf	9	;volatile
   406  0023                     l664:
   407                           
   408                           ;main.c: 116:     PORTA = 0;
   409  0023  1283               	bcf	3,5	;RP0=0, select bank0
   410  0024  1303               	bcf	3,6	;RP1=0, select bank0
   411  0025  0185               	clrf	5	;volatile
   412  0026                     l666:
   413                           
   414                           ;main.c: 117:     PORTB = 0;
   415  0026  0186               	clrf	6	;volatile
   416  0027                     l668:
   417                           
   418                           ;main.c: 118:     PORTC = 0;
   419  0027  0187               	clrf	7	;volatile
   420  0028                     l670:
   421                           
   422                           ;main.c: 119:     PORTD = 0;
   423  0028  0188               	clrf	8	;volatile
   424  0029                     l672:
   425                           
   426                           ;main.c: 120:     PORTE = 0;
   427  0029  0189               	clrf	9	;volatile
   428  002A                     l674:
   429                           
   430                           ;main.c: 122:     IOCB = 0x03;
   431  002A  3003               	movlw	3
   432  002B  1683               	bsf	3,5	;RP0=1, select bank1
   433  002C  1303               	bcf	3,6	;RP1=0, select bank1
   434  002D  0096               	movwf	22	;volatile
   435  002E                     l676:
   436                           
   437                           ;main.c: 123:     INTCONbits.RBIE = 1;
   438  002E  158B               	bsf	11,3	;volatile
   439  002F                     l678:
   440                           
   441                           ;main.c: 124:     INTCONbits.GIE = 1;
   442  002F  178B               	bsf	11,7	;volatile
   443  0030                     l58:
   444  0030  0008               	return
   445  0031                     __end_of_setup:
   446                           
   447                           	psect	text2
   448  0055                     __ptext2:	
   449 ;; *************** function _push_logic *****************
   450 ;; Defined at:
   451 ;;		line 88 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; Hardware stack levels required when called:    1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           
   480                           ;psect for function _push_logic
   481  0055                     _push_logic:
   482  0055                     l682:	
   483                           ;incstack = 0
   484                           ; Regs used in _push_logic: [wreg+status,2+status,0]
   485                           
   486                           
   487                           ;main.c: 90:     if (portb_flags & 0x01)
   488  0055  1C74               	btfss	_portb_flags,0
   489  0056  2858               	goto	u11
   490  0057  2859               	goto	u10
   491  0058                     u11:
   492  0058  285D               	goto	l686
   493  0059                     u10:
   494  0059                     l684:
   495                           
   496                           ;main.c: 91:     {;main.c: 92:         push_counter++;
   497  0059  3001               	movlw	1
   498  005A  00F3               	movwf	??_push_logic
   499  005B  0873               	movf	??_push_logic,w
   500  005C  07F5               	addwf	_push_counter,f
   501  005D                     l686:
   502                           
   503                           ;main.c: 95:     if (portb_flags & 0x02)
   504  005D  1CF4               	btfss	_portb_flags,1
   505  005E  2860               	goto	u21
   506  005F  2861               	goto	u20
   507  0060                     u21:
   508  0060  2863               	goto	l55
   509  0061                     u20:
   510  0061                     l688:
   511                           
   512                           ;main.c: 96:     {;main.c: 97:         push_counter--;
   513  0061  3001               	movlw	1
   514  0062  02F5               	subwf	_push_counter,f
   515  0063                     l55:
   516  0063  0008               	return
   517  0064                     __end_of_push_logic:
   518                           
   519                           	psect	text3
   520  0043                     __ptext3:	
   521 ;; *************** function _isr *****************
   522 ;; Defined at:
   523 ;;		line 79 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          3       0       0       0       0
   540 ;;      Totals:         3       0       0       0       0
   541 ;;Total ram usage:        3 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		Interrupt level 1
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _isr
   552  0043                     _isr:
   553  0043                     i1l696:
   554                           
   555                           ;main.c: 81:     if (INTCONbits.RBIF)
   556  0043  1C0B               	btfss	11,0	;volatile
   557  0044  2846               	goto	u3_21
   558  0045  2847               	goto	u3_20
   559  0046                     u3_21:
   560  0046  284E               	goto	i1l50
   561  0047                     u3_20:
   562  0047                     i1l698:
   563                           
   564                           ;main.c: 82:     {;main.c: 83:         INTCONbits.RBIF = 0;
   565  0047  100B               	bcf	11,0	;volatile
   566  0048                     i1l700:
   567                           
   568                           ;main.c: 84:         portb_flags = PORTB;
   569  0048  1283               	bcf	3,5	;RP0=0, select bank0
   570  0049  1303               	bcf	3,6	;RP1=0, select bank0
   571  004A  0806               	movf	6,w	;volatile
   572  004B  00F0               	movwf	??_isr
   573  004C  0870               	movf	??_isr,w
   574  004D  00F4               	movwf	_portb_flags
   575  004E                     i1l50:
   576  004E  0872               	movf	??_isr+2,w
   577  004F  008A               	movwf	10
   578  0050  0E71               	swapf	??_isr+1,w
   579  0051  0083               	movwf	3
   580  0052  0EFE               	swapf	btemp,f
   581  0053  0E7E               	swapf	btemp,w
   582  0054  0009               	retfie
   583  0055                     __end_of_isr:
   584  007E                     btemp	set	126	;btemp
   585  007E                     wtemp0	set	126
   586                           
   587                           	psect	intentry
   588  0004                     __pintentry:	
   589                           ;incstack = 0
   590                           ; Regs used in _isr: [wreg]
   591                           
   592  0004                     interrupt_function:
   593  007E                     saved_w	set	btemp
   594  0004  00FE               	movwf	btemp
   595  0005  0E03               	swapf	3,w
   596  0006  00F1               	movwf	??_isr+1
   597  0007  080A               	movf	10,w
   598  0008  00F2               	movwf	??_isr+2
   599  0009  120A  118A  2843   	ljmp	_isr
   600                           
   601                           	psect	config
   602                           
   603                           ;Config register CONFIG1 @ 0x2007
   604                           ;	Oscillator Selection bits
   605                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   606                           ;	Watchdog Timer Enable bit
   607                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   608                           ;	Power-up Timer Enable bit
   609                           ;	PWRTE = OFF, PWRT disabled
   610                           ;	RE3/MCLR pin function select bit
   611                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   612                           ;	Code Protection bit
   613                           ;	CP = OFF, Program memory code protection is disabled
   614                           ;	Data Code Protection bit
   615                           ;	CPD = OFF, Data memory code protection is disabled
   616                           ;	Brown Out Reset Selection bits
   617                           ;	BOREN = OFF, BOR disabled
   618                           ;	Internal External Switchover bit
   619                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   620                           ;	Fail-Safe Clock Monitor Enabled bit
   621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   622                           ;	Low Voltage Programming Enable bit
   623                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   624                           ;	In-Circuit Debugger Mode bit
   625                           ;	DEBUG = 0x1, unprogrammed default
   626  2007                     	org	8199
   627  2007  20D4               	dw	8404
   628                           
   629                           ;Config register CONFIG2 @ 0x2008
   630                           ;	Brown-out Reset Selection bit
   631                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   632                           ;	Flash Program Memory Self Write Enable bits
   633                           ;	WRT = OFF, Write protection off
   634  2008                     	org	8200
   635  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_push_logic

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _push_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _push_logic                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _push_logic
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jan 29 14:23:42 2021

                     l41 0036                       l55 0063                       l58 0030  
                     u10 0059                       u11 0058                       u20 0061  
                     u21 0060                      l650 0015                      l660 0021  
                    l652 0019                      l670 0028                      l662 0022  
                    l654 001A                      l672 0029                      l664 0023  
                    l656 001E                      l682 0055                      l674 002A  
                    l666 0026                      l658 0020                      l684 0059  
                    l676 002E                      l668 0027                      l692 0031  
                    l686 005D                      l678 002F                      l694 003B  
                    l688 0061                      _isr 0043             _push_counter 0075  
                   ?_isr 0070                     _IOCB 0096                     i1l50 004E  
                   u3_20 0047                     u3_21 0046                     _main 0031  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l700 0048  
                  i1l696 0043                    i1l698 0047                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 0015                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0043  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 0031                  ??_setup 0073               __pmaintext 0031  
             __pintentry 0004                  __ptext1 0015                  __ptext2 0055  
                __ptext3 0043             __size_of_isr 0012     end_of_initialization 0011  
             _push_logic 0055      start_initialization 000F              __end_of_isr 0055  
            __pbssCOMMON 0074                ___latbits 0002              ?_push_logic 0070  
         __size_of_setup 001C        interrupt_function 0004      __size_of_push_logic 000F  
          __size_of_main 0012               _INTCONbits 000B             ??_push_logic 0073  
               intlevel1 0000       __end_of_push_logic 0064              _portb_flags 0074  
