

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jan 29 22:00:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0009                     _PORTE	set	9
   206  0005                     _PORTA	set	5
   207  0007                     _PORTC	set	7
   208  0001                     _TMR0	set	1
   209  0006                     _PORTB	set	6
   210  000B                     _INTCONbits	set	11
   211  0008                     _PORTD	set	8
   212  0081                     _OPTION_REGbits	set	129
   213  008F                     _OSCCON	set	143
   214  0096                     _IOCB	set	150
   215  0089                     _TRISE	set	137
   216  0088                     _TRISD	set	136
   217  0087                     _TRISC	set	135
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  000F                     start_initialization:	
   225                           ; #config settings
   226                           
   227  000F                     __initialization:
   228                           
   229                           ; Clear objects allocated to COMMON
   230  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   231  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   232  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   233  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   234  0013                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  0013                     __end_of__initialization:
   238  0013  0183               	clrf	3
   239  0014  120A  118A  287F   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  0070                     __pbssCOMMON:
   243  0070                     _mux_timer:
   244  0070                     	ds	1
   245  0071                     _push_timer:
   246  0071                     	ds	1
   247  0072                     _portb_flags:
   248  0072                     	ds	1
   249  0073                     _push_counter:
   250  0073                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0074                     __pcstackCOMMON:
   254  0074                     ?_setup:
   255  0074                     ?_push_logic:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0074                     ?_main:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0074                     ?_isr:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0074                     ??_isr:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0074                     	ds	3
   270  0077                     ??_setup:
   271  0077                     ??_push_logic:	
   272                           ; 1 bytes @ 0x3
   273                           
   274                           
   275                           ; 1 bytes @ 0x3
   276  0077                     	ds	1
   277  0078                     ??_main:
   278                           
   279                           	psect	maintext
   280  007F                     __pmaintext:	
   281                           ; 1 bytes @ 0x4
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 68 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels required when called:    2
   307 ;; This function calls:
   308 ;;		_push_logic
   309 ;;		_setup
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _main
   317  007F                     _main:
   318  007F                     l726:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   321                           
   322                           
   323                           ;main.c: 70:     setup();
   324  007F  120A  118A  2017  120A  118A  	fcall	_setup
   325  0084                     l51:	
   326                           ;main.c: 71:     while(1)
   327                           
   328                           
   329                           ;main.c: 72:     {;main.c: 76:         push_logic();
   330  0084  120A  118A  2065  120A  118A  	fcall	_push_logic
   331  0089                     l728:
   332                           
   333                           ;main.c: 78:         PORTD = push_counter;
   334  0089  0873               	movf	_push_counter,w
   335  008A  1283               	bcf	3,5	;RP0=0, select bank0
   336  008B  1303               	bcf	3,6	;RP1=0, select bank0
   337  008C  0088               	movwf	8	;volatile
   338  008D  2884               	goto	l51
   339  008E  120A  118A  280C   	ljmp	start
   340  0091                     __end_of_main:
   341                           
   342                           	psect	text1
   343  0017                     __ptext1:	
   344 ;; *************** function _setup *****************
   345 ;; Defined at:
   346 ;;		line 126 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _setup
   376  0017                     _setup:
   377  0017                     l662:	
   378                           ;incstack = 0
   379                           ; Regs used in _setup: [wreg+status,2]
   380                           
   381                           
   382                           ;main.c: 128:     ANSEL = 0x01;
   383  0017  3001               	movlw	1
   384  0018  1683               	bsf	3,5	;RP0=1, select bank3
   385  0019  1703               	bsf	3,6	;RP1=1, select bank3
   386  001A  0088               	movwf	8	;volatile
   387  001B                     l664:
   388                           
   389                           ;main.c: 129:     ANSELH = 0x00;
   390  001B  0189               	clrf	9	;volatile
   391  001C                     l666:
   392                           
   393                           ;main.c: 131:     TRISA = 0x01;
   394  001C  3001               	movlw	1
   395  001D  1683               	bsf	3,5	;RP0=1, select bank1
   396  001E  1303               	bcf	3,6	;RP1=0, select bank1
   397  001F  0085               	movwf	5	;volatile
   398  0020                     l668:
   399                           
   400                           ;main.c: 132:     TRISB = 0x03;
   401  0020  3003               	movlw	3
   402  0021  0086               	movwf	6	;volatile
   403  0022                     l670:
   404                           
   405                           ;main.c: 133:     TRISC = 0x00;
   406  0022  0187               	clrf	7	;volatile
   407  0023                     l672:
   408                           
   409                           ;main.c: 134:     TRISD = 0x00;
   410  0023  0188               	clrf	8	;volatile
   411  0024                     l674:
   412                           
   413                           ;main.c: 135:     TRISE = 0x00;
   414  0024  0189               	clrf	9	;volatile
   415  0025                     l676:
   416                           
   417                           ;main.c: 137:     PORTA = 0;
   418  0025  1283               	bcf	3,5	;RP0=0, select bank0
   419  0026  1303               	bcf	3,6	;RP1=0, select bank0
   420  0027  0185               	clrf	5	;volatile
   421  0028                     l678:
   422                           
   423                           ;main.c: 138:     PORTB = 0;
   424  0028  0186               	clrf	6	;volatile
   425  0029                     l680:
   426                           
   427                           ;main.c: 139:     PORTC = 0;
   428  0029  0187               	clrf	7	;volatile
   429  002A                     l682:
   430                           
   431                           ;main.c: 140:     PORTD = 0;
   432  002A  0188               	clrf	8	;volatile
   433  002B                     l684:
   434                           
   435                           ;main.c: 141:     PORTE = 0;
   436  002B  0189               	clrf	9	;volatile
   437  002C                     l686:
   438                           
   439                           ;main.c: 144:     IOCB = 0x03;
   440  002C  3003               	movlw	3
   441  002D  1683               	bsf	3,5	;RP0=1, select bank1
   442  002E  1303               	bcf	3,6	;RP1=0, select bank1
   443  002F  0096               	movwf	22	;volatile
   444  0030                     l688:
   445                           
   446                           ;main.c: 145:     INTCONbits.RBIE = 1;
   447  0030  158B               	bsf	11,3	;volatile
   448  0031                     l690:
   449                           
   450                           ;main.c: 146:     INTCONbits.T0IE = 1;
   451  0031  168B               	bsf	11,5	;volatile
   452  0032                     l692:
   453                           
   454                           ;main.c: 147:     INTCONbits.GIE = 1;
   455  0032  178B               	bsf	11,7	;volatile
   456  0033                     l694:
   457                           
   458                           ;main.c: 149:     OSCCON = 0b01100001;
   459  0033  3061               	movlw	97
   460  0034  008F               	movwf	15	;volatile
   461  0035                     l696:
   462                           
   463                           ;main.c: 151:     OPTION_REGbits.T0CS = 0;
   464  0035  1281               	bcf	1,5	;volatile
   465  0036                     l698:
   466                           
   467                           ;main.c: 152:     OPTION_REGbits.PSA = 0;
   468  0036  1181               	bcf	1,3	;volatile
   469  0037                     l700:
   470                           
   471                           ;main.c: 153:     OPTION_REGbits.PS2 = 0;
   472  0037  1101               	bcf	1,2	;volatile
   473  0038                     l702:
   474                           
   475                           ;main.c: 154:     OPTION_REGbits.PS1 = 0;
   476  0038  1081               	bcf	1,1	;volatile
   477  0039                     l704:
   478                           
   479                           ;main.c: 155:     OPTION_REGbits.PS0 = 1;
   480  0039  1401               	bsf	1,0	;volatile
   481  003A                     l706:
   482                           
   483                           ;main.c: 157:     TMR0 = 6;;
   484  003A  3006               	movlw	6
   485  003B  1283               	bcf	3,5	;RP0=0, select bank0
   486  003C  1303               	bcf	3,6	;RP1=0, select bank0
   487  003D  0081               	movwf	1	;volatile
   488  003E                     l708:
   489                           
   490                           ;main.c: 159:     INTCONbits.T0IF = 0;
   491  003E  110B               	bcf	11,2	;volatile
   492  003F                     l70:
   493  003F  0008               	return
   494  0040                     __end_of_setup:
   495                           
   496                           	psect	text2
   497  0065                     __ptext2:	
   498 ;; *************** function _push_logic *****************
   499 ;; Defined at:
   500 ;;		line 101 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          1       0       0       0       0
   517 ;;      Totals:         1       0       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _push_logic
   530  0065                     _push_logic:
   531  0065                     l712:	
   532                           ;incstack = 0
   533                           ; Regs used in _push_logic: [wreg+status,2+status,0]
   534                           
   535                           
   536                           ;main.c: 103:     if (200 != push_timer)
   537  0065  30C8               	movlw	200
   538  0066  0671               	xorwf	_push_timer,w
   539  0067  1903               	btfsc	3,2
   540  0068  286A               	goto	u11
   541  0069  286B               	goto	u10
   542  006A                     u11:
   543  006A  286C               	goto	l716
   544  006B                     u10:
   545  006B  287E               	goto	l65
   546  006C                     l716:
   547                           
   548                           ;main.c: 108:     push_timer = 0;
   549  006C  01F1               	clrf	_push_timer
   550  006D                     l718:
   551                           
   552                           ;main.c: 110:     if (0x01 == portb_flags)
   553  006D  0372               	decf	_portb_flags,w
   554  006E  1D03               	btfss	3,2
   555  006F  2871               	goto	u21
   556  0070  2872               	goto	u20
   557  0071                     u21:
   558  0071  2876               	goto	l66
   559  0072                     u20:
   560  0072                     l720:
   561                           
   562                           ;main.c: 111:     {;main.c: 112:         push_counter++;
   563  0072  3001               	movlw	1
   564  0073  00F7               	movwf	??_push_logic
   565  0074  0877               	movf	??_push_logic,w
   566  0075  07F3               	addwf	_push_counter,f
   567  0076                     l66:	
   568                           ;main.c: 113:     }
   569                           
   570                           
   571                           ;main.c: 115:     if (0x02 == portb_flags)
   572  0076  3002               	movlw	2
   573  0077  0672               	xorwf	_portb_flags,w
   574  0078  1D03               	btfss	3,2
   575  0079  287B               	goto	u31
   576  007A  287C               	goto	u30
   577  007B                     u31:
   578  007B  287E               	goto	l65
   579  007C                     u30:
   580  007C                     l722:
   581                           
   582                           ;main.c: 116:     {;main.c: 117:         push_counter--;
   583  007C  3001               	movlw	1
   584  007D  02F3               	subwf	_push_counter,f
   585  007E                     l65:
   586  007E  0008               	return
   587  007F                     __end_of_push_logic:
   588                           
   589                           	psect	text3
   590  0040                     __ptext3:	
   591 ;; *************** function _isr *****************
   592 ;; Defined at:
   593 ;;		line 82 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          3       0       0       0       0
   610 ;;      Totals:         3       0       0       0       0
   611 ;;Total ram usage:        3 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		Interrupt level 1
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _isr
   622  0040                     _isr:
   623  0040                     i1l730:
   624                           
   625                           ;main.c: 84:     if (INTCONbits.RBIF)
   626  0040  1C0B               	btfss	11,0	;volatile
   627  0041  2843               	goto	u4_21
   628  0042  2844               	goto	u4_20
   629  0043                     u4_21:
   630  0043  284B               	goto	i1l736
   631  0044                     u4_20:
   632  0044                     i1l732:
   633                           
   634                           ;main.c: 85:     {;main.c: 86:         INTCONbits.RBIF = 0;
   635  0044  100B               	bcf	11,0	;volatile
   636  0045                     i1l734:
   637                           
   638                           ;main.c: 87:         portb_flags = PORTB;
   639  0045  1283               	bcf	3,5	;RP0=0, select bank0
   640  0046  1303               	bcf	3,6	;RP1=0, select bank0
   641  0047  0806               	movf	6,w	;volatile
   642  0048  00F4               	movwf	??_isr
   643  0049  0874               	movf	??_isr,w
   644  004A  00F2               	movwf	_portb_flags
   645  004B                     i1l736:
   646                           
   647                           ;main.c: 90:     if (INTCONbits.T0IF)
   648  004B  1D0B               	btfss	11,2	;volatile
   649  004C  284E               	goto	u5_21
   650  004D  284F               	goto	u5_20
   651  004E                     u5_21:
   652  004E  285E               	goto	i1l61
   653  004F                     u5_20:
   654  004F                     i1l738:
   655                           
   656                           ;main.c: 91:     {;main.c: 92:         INTCONbits.T0IF = 0;
   657  004F  110B               	bcf	11,2	;volatile
   658  0050                     i1l740:
   659                           
   660                           ;main.c: 93:         TMR0 = 6;;
   661  0050  3006               	movlw	6
   662  0051  1283               	bcf	3,5	;RP0=0, select bank0
   663  0052  1303               	bcf	3,6	;RP1=0, select bank0
   664  0053  0081               	movwf	1	;volatile
   665  0054                     i1l742:
   666                           
   667                           ;main.c: 94:         push_timer++;
   668  0054  3001               	movlw	1
   669  0055  00F4               	movwf	??_isr
   670  0056  0874               	movf	??_isr,w
   671  0057  07F1               	addwf	_push_timer,f
   672  0058                     i1l744:
   673                           
   674                           ;main.c: 95:         mux_timer++;
   675  0058  3001               	movlw	1
   676  0059  00F4               	movwf	??_isr
   677  005A  0874               	movf	??_isr,w
   678  005B  07F0               	addwf	_mux_timer,f
   679                           
   680                           ;main.c: 97:         PORTC = mux_timer;
   681  005C  0870               	movf	_mux_timer,w
   682  005D  0087               	movwf	7	;volatile
   683  005E                     i1l61:
   684  005E  0876               	movf	??_isr+2,w
   685  005F  008A               	movwf	10
   686  0060  0E75               	swapf	??_isr+1,w
   687  0061  0083               	movwf	3
   688  0062  0EFE               	swapf	btemp,f
   689  0063  0E7E               	swapf	btemp,w
   690  0064  0009               	retfie
   691  0065                     __end_of_isr:
   692  007E                     btemp	set	126	;btemp
   693  007E                     wtemp0	set	126
   694                           
   695                           	psect	intentry
   696  0004                     __pintentry:	
   697                           ;incstack = 0
   698                           ; Regs used in _isr: [wreg+status,2+status,0]
   699                           
   700  0004                     interrupt_function:
   701  007E                     saved_w	set	btemp
   702  0004  00FE               	movwf	btemp
   703  0005  0E03               	swapf	3,w
   704  0006  00F5               	movwf	??_isr+1
   705  0007  080A               	movf	10,w
   706  0008  00F6               	movwf	??_isr+2
   707  0009  120A  118A  2840   	ljmp	_isr
   708                           
   709                           	psect	config
   710                           
   711                           ;Config register CONFIG1 @ 0x2007
   712                           ;	Oscillator Selection bits
   713                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   714                           ;	Watchdog Timer Enable bit
   715                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   716                           ;	Power-up Timer Enable bit
   717                           ;	PWRTE = OFF, PWRT disabled
   718                           ;	RE3/MCLR pin function select bit
   719                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   720                           ;	Code Protection bit
   721                           ;	CP = OFF, Program memory code protection is disabled
   722                           ;	Data Code Protection bit
   723                           ;	CPD = OFF, Data memory code protection is disabled
   724                           ;	Brown Out Reset Selection bits
   725                           ;	BOREN = OFF, BOR disabled
   726                           ;	Internal External Switchover bit
   727                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   728                           ;	Fail-Safe Clock Monitor Enabled bit
   729                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   730                           ;	Low Voltage Programming Enable bit
   731                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   732                           ;	In-Circuit Debugger Mode bit
   733                           ;	DEBUG = 0x1, unprogrammed default
   734  2007                     	org	8199
   735  2007  20D4               	dw	8404
   736                           
   737                           ;Config register CONFIG2 @ 0x2008
   738                           ;	Brown-out Reset Selection bit
   739                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   740                           ;	Flash Program Memory Self Write Enable bits
   741                           ;	WRT = OFF, Write protection off
   742  2008                     	org	8200
   743  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_push_logic

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _push_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _push_logic                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _push_logic
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jan 29 22:00:53 2021

                     l51 0084                       l70 003F                       l65 007E  
                     l66 0076                       u10 006B                       u11 006A  
                     u20 0072                       u21 0071                       u30 007C  
                     u31 007B                      l700 0037                      l702 0038  
                    l720 0072                      l712 0065                      l704 0039  
                    l722 007C                      l706 003A                      l716 006C  
                    l708 003E                      l718 006D                      l670 0022  
                    l662 0017                      l726 007F                      l680 0029  
                    l672 0023                      l664 001B                      l728 0089  
                    l690 0031                      l682 002A                      l674 0024  
                    l666 001C                      l692 0032                      l684 002B  
                    l676 0025                      l668 0020                      l694 0033  
                    l686 002C                      l678 0028                      l696 0035  
                    l688 0030                      l698 0036                      _isr 0040  
           _push_counter 0073                     ?_isr 0074                     _IOCB 0096  
                   i1l61 005E                     _TMR0 0001                     u4_20 0044  
                   u4_21 0043                     u5_20 004F                     u5_21 004E  
                   _main 007F                     btemp 007E                     start 000C  
                  ??_isr 0074                    ?_main 0074                    _ANSEL 0188  
                  i1l730 0040                    i1l740 0050                    i1l732 0044  
                  i1l742 0054                    i1l734 0045                    i1l744 0058  
                  i1l736 004B                    i1l738 004F                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 0017                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0091  
                 ??_main 0078                   ?_setup 0074                   _ANSELH 0189  
                 _OSCCON 008F                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0074            __end_of_setup 0040           _OPTION_REGbits 0081  
                ??_setup 0077               __pmaintext 007F               __pintentry 0004  
                __ptext1 0017                  __ptext2 0065                  __ptext3 0040  
           __size_of_isr 0025     end_of_initialization 0013               _push_logic 0065  
             _push_timer 0071      start_initialization 000F              __end_of_isr 0065  
            __pbssCOMMON 0070                ___latbits 0002              ?_push_logic 0074  
         __size_of_setup 0029        interrupt_function 0004                _mux_timer 0070  
    __size_of_push_logic 001A            __size_of_main 0012               _INTCONbits 000B  
           ??_push_logic 0077                 intlevel1 0000       __end_of_push_logic 007F  
            _portb_flags 0072  
