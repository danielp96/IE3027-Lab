

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 28 18:03:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0007                     _PORTC	set	7
   204  0006                     _PORTB	set	6
   205  0005                     _PORTA	set	5
   206  0008                     _PORTDbits	set	8
   207  0088                     _TRISD	set	136
   208  0087                     _TRISC	set	135
   209  0086                     _TRISB	set	134
   210  0085                     _TRISA	set	133
   211  0189                     _ANSELH	set	393
   212  0188                     _ANSEL	set	392
   213                           
   214                           	psect	cinit
   215  07F6                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07F6                     __initialization:
   219                           
   220                           ; Clear objects allocated to BANK0
   221  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   222  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   223  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   224  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   225  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   226  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   227  07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FC                     __end_of__initialization:
   231  07FC  0183               	clrf	3
   232  07FD  120A  118A  2F4A   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssBANK0
   235  0020                     __pbssBANK0:
   236  0020                     _b_game_running:
   237  0020                     	ds	1
   238  0021                     _b_p2_push:
   239  0021                     	ds	1
   240  0022                     _b_p1_push:
   241  0022                     	ds	1
   242  0023                     _b_start_push:
   243  0023                     	ds	1
   244                           
   245                           	psect	cstackCOMMON
   246  0070                     __pcstackCOMMON:
   247  0070                     ?_setup:
   248  0070                     ??_setup:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_semaforo:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ??_semaforo:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262  0070                     	ds	3
   263  0073                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x3
   266  0073                     	ds	3
   267  0076                     _main$83:
   268                           
   269                           ; 2 bytes @ 0x6
   270  0076                     	ds	2
   271  0078                     _main$84:
   272                           
   273                           ; 2 bytes @ 0x8
   274  0078                     	ds	2
   275  007A                     _main$85:
   276                           
   277                           ; 2 bytes @ 0xA
   278  007A                     	ds	2
   279  007C                     _main$86:
   280                           
   281                           ; 2 bytes @ 0xC
   282  007C                     	ds	2
   283                           
   284                           	psect	maintext
   285  074A                     __pmaintext:	
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 70 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0, pclath, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : B00/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   305 ;;      Params:         0       0       0       0       0
   306 ;;      Locals:         8       0       0       0       0
   307 ;;      Temps:          3       0       0       0       0
   308 ;;      Totals:        11       0       0       0       0
   309 ;;Total ram usage:       11 bytes
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		_semaforo
   313 ;;		_setup
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           
   320                           ;psect for function _main
   321  074A                     _main:
   322  074A                     l759:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   325                           
   326                           
   327                           ;main.c: 72:     setup();
   328  074A  120A  118A  2712  120A  118A  	fcall	_setup
   329  074F                     l761:
   330                           
   331                           ;main.c: 74:     {;main.c: 75:         _delay((unsigned long)((250)*(8000000/4000.0)));
   332  074F  3003               	movlw	3
   333  0750  00F5               	movwf	??_main+2
   334  0751  308A               	movlw	138
   335  0752  00F4               	movwf	??_main+1
   336  0753  3055               	movlw	85
   337  0754  00F3               	movwf	??_main
   338  0755                     u317:
   339  0755  0BF3               	decfsz	??_main,f
   340  0756  2F55               	goto	u317
   341  0757  0BF4               	decfsz	??_main+1,f
   342  0758  2F55               	goto	u317
   343  0759  0BF5               	decfsz	??_main+2,f
   344  075A  2F55               	goto	u317
   345  075B  2F5C               	nop2
   346  075C                     l763:
   347                           
   348                           ;main.c: 80:         b_start_push = 0;
   349  075C  1283               	bcf	3,5	;RP0=0, select bank0
   350  075D  1303               	bcf	3,6	;RP1=0, select bank0
   351  075E  01A3               	clrf	_b_start_push
   352  075F                     l765:
   353                           
   354                           ;main.c: 81:         b_p1_push = 0;
   355  075F  01A2               	clrf	_b_p1_push
   356  0760                     l767:
   357                           
   358                           ;main.c: 82:         b_p2_push = 0;
   359  0760  01A1               	clrf	_b_p2_push
   360  0761                     l769:
   361                           
   362                           ;main.c: 84:         if (PORTDbits.RD0)
   363  0761  1C08               	btfss	8,0	;volatile
   364  0762  2F64               	goto	u161
   365  0763  2F65               	goto	u160
   366  0764                     u161:
   367  0764  2F67               	goto	l40
   368  0765                     u160:
   369  0765                     l771:
   370                           
   371                           ;main.c: 85:         {;main.c: 86:             b_start_push = 1;
   372  0765  01A3               	clrf	_b_start_push
   373  0766  0AA3               	incf	_b_start_push,f
   374  0767                     l40:	
   375                           ;main.c: 87:         }
   376                           
   377                           
   378                           ;main.c: 89:         if (PORTDbits.RD1)
   379  0767  1C88               	btfss	8,1	;volatile
   380  0768  2F6A               	goto	u171
   381  0769  2F6B               	goto	u170
   382  076A                     u171:
   383  076A  2F6D               	goto	l41
   384  076B                     u170:
   385  076B                     l773:
   386                           
   387                           ;main.c: 90:         {;main.c: 91:             b_p1_push = 1;
   388  076B  01A2               	clrf	_b_p1_push
   389  076C  0AA2               	incf	_b_p1_push,f
   390  076D                     l41:	
   391                           ;main.c: 92:         }
   392                           
   393                           
   394                           ;main.c: 94:         if (PORTDbits.RD2)
   395  076D  1D08               	btfss	8,2	;volatile
   396  076E  2F70               	goto	u181
   397  076F  2F71               	goto	u180
   398  0770                     u181:
   399  0770  2F73               	goto	l777
   400  0771                     u180:
   401  0771                     l775:
   402                           
   403                           ;main.c: 95:         {;main.c: 96:             b_p2_push = 1;
   404  0771  01A1               	clrf	_b_p2_push
   405  0772  0AA1               	incf	_b_p2_push,f
   406  0773                     l777:
   407                           
   408                           ;main.c: 102:         if (b_start_push && !b_game_running)
   409  0773  0823               	movf	_b_start_push,w
   410  0774  1903               	btfsc	3,2
   411  0775  2F77               	goto	u191
   412  0776  2F78               	goto	u190
   413  0777                     u191:
   414  0777  2F84               	goto	l785
   415  0778                     u190:
   416  0778                     l779:
   417  0778  0820               	movf	_b_game_running,w
   418  0779  1D03               	btfss	3,2
   419  077A  2F7C               	goto	u201
   420  077B  2F7D               	goto	u200
   421  077C                     u201:
   422  077C  2F84               	goto	l785
   423  077D                     u200:
   424  077D                     l781:
   425                           
   426                           ;main.c: 103:         {;main.c: 104:             b_game_running = 1;
   427  077D  01A0               	clrf	_b_game_running
   428  077E  0AA0               	incf	_b_game_running,f
   429  077F                     l783:
   430                           
   431                           ;main.c: 105:             semaforo();
   432  077F  120A  118A  2723  120A  118A  	fcall	_semaforo
   433  0784                     l785:
   434                           
   435                           ;main.c: 112:         if (b_p1_push && b_game_running)
   436  0784  1283               	bcf	3,5	;RP0=0, select bank0
   437  0785  1303               	bcf	3,6	;RP1=0, select bank0
   438  0786  0822               	movf	_b_p1_push,w
   439  0787  1903               	btfsc	3,2
   440  0788  2F8A               	goto	u211
   441  0789  2F8B               	goto	u210
   442  078A                     u211:
   443  078A  2FA6               	goto	l795
   444  078B                     u210:
   445  078B                     l787:
   446  078B  0820               	movf	_b_game_running,w
   447  078C  1903               	btfsc	3,2
   448  078D  2F8F               	goto	u221
   449  078E  2F90               	goto	u220
   450  078F                     u221:
   451  078F  2FA6               	goto	l795
   452  0790                     u220:
   453  0790                     l789:
   454                           
   455                           ;main.c: 113:         {;main.c: 114:             PORTA = !PORTA ? 1 : PORTA << 1;
   456  0790  0805               	movf	5,w	;volatile
   457  0791  1903               	btfsc	3,2
   458  0792  2F94               	goto	u231
   459  0793  2F95               	goto	u230
   460  0794                     u231:
   461  0794  2FA0               	goto	l793
   462  0795                     u230:
   463  0795                     l791:
   464  0795  0805               	movf	5,w	;volatile
   465  0796  00F3               	movwf	??_main
   466  0797  01F4               	clrf	??_main+1
   467  0798  1003               	clrc
   468  0799  0DF3               	rlf	??_main,f
   469  079A  0DF4               	rlf	??_main+1,f
   470  079B  0873               	movf	??_main,w
   471  079C  00F6               	movwf	_main$83
   472  079D  0874               	movf	??_main+1,w
   473  079E  00F7               	movwf	_main$83+1
   474  079F  2FA4               	goto	l48
   475  07A0                     l793:
   476  07A0  3001               	movlw	1
   477  07A1  00F6               	movwf	_main$83
   478  07A2  3000               	movlw	0
   479  07A3  00F7               	movwf	_main$83+1
   480  07A4                     l48:
   481  07A4  0876               	movf	_main$83,w
   482  07A5  0085               	movwf	5	;volatile
   483  07A6                     l795:
   484                           
   485                           ;main.c: 117:         if (b_p2_push && b_game_running)
   486  07A6  0821               	movf	_b_p2_push,w
   487  07A7  1903               	btfsc	3,2
   488  07A8  2FAA               	goto	u241
   489  07A9  2FAB               	goto	u240
   490  07AA                     u241:
   491  07AA  2FC6               	goto	l805
   492  07AB                     u240:
   493  07AB                     l797:
   494  07AB  0820               	movf	_b_game_running,w
   495  07AC  1903               	btfsc	3,2
   496  07AD  2FAF               	goto	u251
   497  07AE  2FB0               	goto	u250
   498  07AF                     u251:
   499  07AF  2FC6               	goto	l805
   500  07B0                     u250:
   501  07B0                     l799:
   502                           
   503                           ;main.c: 118:         {;main.c: 119:             PORTB = !PORTB ? 1 : PORTB << 1;
   504  07B0  0806               	movf	6,w	;volatile
   505  07B1  1903               	btfsc	3,2
   506  07B2  2FB4               	goto	u261
   507  07B3  2FB5               	goto	u260
   508  07B4                     u261:
   509  07B4  2FC0               	goto	l803
   510  07B5                     u260:
   511  07B5                     l801:
   512  07B5  0806               	movf	6,w	;volatile
   513  07B6  00F3               	movwf	??_main
   514  07B7  01F4               	clrf	??_main+1
   515  07B8  1003               	clrc
   516  07B9  0DF3               	rlf	??_main,f
   517  07BA  0DF4               	rlf	??_main+1,f
   518  07BB  0873               	movf	??_main,w
   519  07BC  00F8               	movwf	_main$84
   520  07BD  0874               	movf	??_main+1,w
   521  07BE  00F9               	movwf	_main$84+1
   522  07BF  2FC4               	goto	l53
   523  07C0                     l803:
   524  07C0  3001               	movlw	1
   525  07C1  00F8               	movwf	_main$84
   526  07C2  3000               	movlw	0
   527  07C3  00F9               	movwf	_main$84+1
   528  07C4                     l53:
   529  07C4  0878               	movf	_main$84,w
   530  07C5  0086               	movwf	6	;volatile
   531  07C6                     l805:
   532                           
   533                           ;main.c: 126:         if ((0x80 == PORTA) || (0x80 == PORTB))
   534  07C6  3080               	movlw	128
   535  07C7  0605               	xorwf	5,w	;volatile
   536  07C8  1903               	btfsc	3,2
   537  07C9  2FCB               	goto	u271
   538  07CA  2FCC               	goto	u270
   539  07CB                     u271:
   540  07CB  2FD2               	goto	l809
   541  07CC                     u270:
   542  07CC                     l807:
   543  07CC  3080               	movlw	128
   544  07CD  0606               	xorwf	6,w	;volatile
   545  07CE  1D03               	btfss	3,2
   546  07CF  2FD1               	goto	u281
   547  07D0  2FD2               	goto	u280
   548  07D1                     u281:
   549  07D1  2F4F               	goto	l761
   550  07D2                     u280:
   551  07D2                     l809:
   552                           
   553                           ;main.c: 127:         {;main.c: 128:             b_game_running = 0;
   554  07D2  01A0               	clrf	_b_game_running
   555  07D3                     l811:
   556                           
   557                           ;main.c: 130:             PORTA = 0x80 == PORTA ? 0xFF : 0;
   558  07D3  3080               	movlw	128
   559  07D4  0605               	xorwf	5,w	;volatile
   560  07D5  1903               	btfsc	3,2
   561  07D6  2FD8               	goto	u291
   562  07D7  2FD9               	goto	u290
   563  07D8                     u291:
   564  07D8  2FDC               	goto	l815
   565  07D9                     u290:
   566  07D9                     l813:
   567  07D9  01FA               	clrf	_main$85
   568  07DA  01FB               	clrf	_main$85+1
   569  07DB  2FE0               	goto	l60
   570  07DC                     l815:
   571  07DC  30FF               	movlw	255
   572  07DD  00FA               	movwf	_main$85
   573  07DE  3000               	movlw	0
   574  07DF  00FB               	movwf	_main$85+1
   575  07E0                     l60:
   576  07E0  087A               	movf	_main$85,w
   577  07E1  0085               	movwf	5	;volatile
   578  07E2                     l817:
   579                           
   580                           ;main.c: 131:             PORTB = 0x80 == PORTB ? 0xFF : 0;
   581  07E2  3080               	movlw	128
   582  07E3  0606               	xorwf	6,w	;volatile
   583  07E4  1903               	btfsc	3,2
   584  07E5  2FE7               	goto	u301
   585  07E6  2FE8               	goto	u300
   586  07E7                     u301:
   587  07E7  2FEB               	goto	l821
   588  07E8                     u300:
   589  07E8                     l819:
   590  07E8  01FC               	clrf	_main$86
   591  07E9  01FD               	clrf	_main$86+1
   592  07EA  2FEF               	goto	l64
   593  07EB                     l821:
   594  07EB  30FF               	movlw	255
   595  07EC  00FC               	movwf	_main$86
   596  07ED  3000               	movlw	0
   597  07EE  00FD               	movwf	_main$86+1
   598  07EF                     l64:
   599  07EF  087C               	movf	_main$86,w
   600  07F0  0086               	movwf	6	;volatile
   601  07F1                     l823:
   602                           
   603                           ;main.c: 133:             PORTC = 0;
   604  07F1  0187               	clrf	7	;volatile
   605  07F2  2F4F               	goto	l761
   606  07F3  120A  118A  2800   	ljmp	start
   607  07F6                     __end_of_main:
   608                           
   609                           	psect	text1
   610  0712                     __ptext1:	
   611 ;; *************** function _setup *****************
   612 ;; Defined at:
   613 ;;		line 141 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _setup
   642  0712                     _setup:
   643  0712                     l745:	
   644                           ;incstack = 0
   645                           ; Regs used in _setup: [wreg+status,2]
   646                           
   647                           
   648                           ;main.c: 143:     ANSEL = 0x00;
   649  0712  1683               	bsf	3,5	;RP0=1, select bank3
   650  0713  1703               	bsf	3,6	;RP1=1, select bank3
   651  0714  0188               	clrf	8	;volatile
   652                           
   653                           ;main.c: 144:     ANSELH = 0x00;
   654  0715  0189               	clrf	9	;volatile
   655                           
   656                           ;main.c: 146:     TRISA = 0x00;
   657  0716  1683               	bsf	3,5	;RP0=1, select bank1
   658  0717  1303               	bcf	3,6	;RP1=0, select bank1
   659  0718  0185               	clrf	5	;volatile
   660                           
   661                           ;main.c: 147:     TRISB = 0x00;
   662  0719  0186               	clrf	6	;volatile
   663                           
   664                           ;main.c: 148:     TRISC = 0x00;
   665  071A  0187               	clrf	7	;volatile
   666  071B                     l747:
   667                           
   668                           ;main.c: 149:     TRISD = 0x07;
   669  071B  3007               	movlw	7
   670  071C  0088               	movwf	8	;volatile
   671  071D                     l749:
   672                           
   673                           ;main.c: 151:     PORTA = 0;
   674  071D  1283               	bcf	3,5	;RP0=0, select bank0
   675  071E  1303               	bcf	3,6	;RP1=0, select bank0
   676  071F  0185               	clrf	5	;volatile
   677  0720                     l751:
   678                           
   679                           ;main.c: 152:     PORTB = 0;
   680  0720  0186               	clrf	6	;volatile
   681  0721                     l753:
   682                           
   683                           ;main.c: 153:     PORTC = 0;
   684  0721  0187               	clrf	7	;volatile
   685  0722                     l70:
   686  0722  0008               	return
   687  0723                     __end_of_setup:
   688                           
   689                           	psect	text2
   690  0723                     __ptext2:	
   691 ;; *************** function _semaforo *****************
   692 ;; Defined at:
   693 ;;		line 158 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          3       0       0       0       0
   710 ;;      Totals:         3       0       0       0       0
   711 ;;Total ram usage:        3 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _semaforo
   722  0723                     _semaforo:
   723  0723                     l757:	
   724                           ;incstack = 0
   725                           ; Regs used in _semaforo: [wreg]
   726                           
   727                           
   728                           ;main.c: 161:     PORTC = 1;
   729  0723  3001               	movlw	1
   730  0724  1283               	bcf	3,5	;RP0=0, select bank0
   731  0725  1303               	bcf	3,6	;RP1=0, select bank0
   732  0726  0087               	movwf	7	;volatile
   733                           
   734                           ;main.c: 162:     _delay((unsigned long)((750)*(8000000/4000.0)));
   735  0727  3008               	movlw	8
   736  0728  00F2               	movwf	??_semaforo+2
   737  0729  309D               	movlw	157
   738  072A  00F1               	movwf	??_semaforo+1
   739  072B  3005               	movlw	5
   740  072C  00F0               	movwf	??_semaforo
   741  072D                     u327:
   742  072D  0BF0               	decfsz	??_semaforo,f
   743  072E  2F2D               	goto	u327
   744  072F  0BF1               	decfsz	??_semaforo+1,f
   745  0730  2F2D               	goto	u327
   746  0731  0BF2               	decfsz	??_semaforo+2,f
   747  0732  2F2D               	goto	u327
   748  0733  2F34               	nop2
   749                           
   750                           ;main.c: 164:     PORTC <<= 1;
   751  0734  1003               	clrc
   752  0735  1283               	bcf	3,5	;RP0=0, select bank0
   753  0736  1303               	bcf	3,6	;RP1=0, select bank0
   754  0737  0D87               	rlf	7,f	;volatile
   755                           
   756                           ;main.c: 165:     _delay((unsigned long)((750)*(8000000/4000.0)));
   757  0738  3008               	movlw	8
   758  0739  00F2               	movwf	??_semaforo+2
   759  073A  309D               	movlw	157
   760  073B  00F1               	movwf	??_semaforo+1
   761  073C  3005               	movlw	5
   762  073D  00F0               	movwf	??_semaforo
   763  073E                     u337:
   764  073E  0BF0               	decfsz	??_semaforo,f
   765  073F  2F3E               	goto	u337
   766  0740  0BF1               	decfsz	??_semaforo+1,f
   767  0741  2F3E               	goto	u337
   768  0742  0BF2               	decfsz	??_semaforo+2,f
   769  0743  2F3E               	goto	u337
   770  0744  2F45               	nop2
   771                           
   772                           ;main.c: 168:     PORTC <<= 1;
   773  0745  1003               	clrc
   774  0746  1283               	bcf	3,5	;RP0=0, select bank0
   775  0747  1303               	bcf	3,6	;RP1=0, select bank0
   776  0748  0D87               	rlf	7,f	;volatile
   777  0749                     l73:
   778  0749  0008               	return
   779  074A                     __end_of_semaforo:
   780  007E                     btemp	set	126	;btemp
   781  007E                     wtemp0	set	126
   782                           
   783                           	psect	config
   784                           
   785                           ;Config register CONFIG1 @ 0x2007
   786                           ;	Oscillator Selection bits
   787                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   788                           ;	Watchdog Timer Enable bit
   789                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   790                           ;	Power-up Timer Enable bit
   791                           ;	PWRTE = OFF, PWRT disabled
   792                           ;	RE3/MCLR pin function select bit
   793                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   794                           ;	Code Protection bit
   795                           ;	CP = OFF, Program memory code protection is disabled
   796                           ;	Data Code Protection bit
   797                           ;	CPD = OFF, Data memory code protection is disabled
   798                           ;	Brown Out Reset Selection bits
   799                           ;	BOREN = OFF, BOR disabled
   800                           ;	Internal External Switchover bit
   801                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   802                           ;	Fail-Safe Clock Monitor Enabled bit
   803                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   804                           ;	Low Voltage Programming Enable bit
   805                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   806                           ;	In-Circuit Debugger Mode bit
   807                           ;	DEBUG = 0x1, unprogrammed default
   808  2007                     	org	8199
   809  2007  20D4               	dw	8404
   810                           
   811                           ;Config register CONFIG2 @ 0x2008
   812                           ;	Brown-out Reset Selection bit
   813                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   814                           ;	Flash Program Memory Self Write Enable bits
   815                           ;	WRT = OFF, Write protection off
   816  2008                     	org	8200
   817  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0      96
                                              3 COMMON    11    11      0
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 28 18:03:06 2021

                     l40 0767                       l41 076D                       l60 07E0  
                     l53 07C4                       l70 0722                       l64 07EF  
                     l48 07A4                       l73 0749                      l801 07B5  
                    l811 07D3                      l803 07C0                      l821 07EB  
                    l813 07D9                      l805 07C6                      l751 0720  
                    l823 07F1                      l815 07DC                      l807 07CC  
                    l753 0721                      l745 0712                      l817 07E2  
                    l809 07D2                      l761 074F                      l747 071B  
                    l819 07E8                      l771 0765                      l763 075C  
                    l757 0723                      l749 071D                      l781 077D  
                    l773 076B                      l765 075F                      l791 0795  
                    l783 077F                      l775 0771                      l767 0760  
                    l759 074A                      l793 07A0                      l785 0784  
                    l777 0773                      l769 0761                      l787 078B  
                    l795 07A6                      l779 0778                      l797 07AB  
                    l789 0790                      l799 07B0                      u200 077D  
                    u201 077C                      u210 078B                      u211 078A  
                    u300 07E8                      u220 0790                      u301 07E7  
                    u221 078F                      u230 0795                      u231 0794  
                    u240 07AB                      u160 0765                      u241 07AA  
                    u161 0764                      u250 07B0                      u170 076B  
                    u251 07AF                      u171 076A                      u260 07B5  
                    u180 0771                      u261 07B4                      u181 0770  
                    u317 0755                      u270 07CC                      u190 0778  
                    u327 072D                      u271 07CB                      u191 0777  
                    u280 07D2                      u337 073E                      u281 07D1  
                    u290 07D9                      u291 07D8                     _main 074A  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 0712  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 07F6                   ??_main 0073                   ?_setup 0070  
                 _ANSELH 0189         __end_of_semaforo 074A  __end_of__initialization 07FC  
           _b_start_push 0023           __pcstackCOMMON 0070            __end_of_setup 0723  
                ??_setup 0070               __pbssBANK0 0020               __pmaintext 074A  
         _b_game_running 0020                ?_semaforo 0070                  _main$83 0076  
                _main$84 0078                  _main$85 007A                  _main$86 007C  
                __ptext1 0712                  __ptext2 0723     end_of_initialization 07FC  
             ??_semaforo 0070                _PORTDbits 0008      start_initialization 07F6  
              _b_p1_push 0022                _b_p2_push 0021                ___latbits 0002  
      __size_of_semaforo 0027           __size_of_setup 0011            __size_of_main 00AC  
               _semaforo 0723  
