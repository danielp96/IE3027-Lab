

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb  4 19:25:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  001F                     _ADCON0	set	31
   372  0005                     _PORTA	set	5
   373  001F                     _ADCON0bits	set	31
   374  0009                     _PORTE	set	9
   375  001E                     _ADRESH	set	30
   376  000C                     _PIR1bits	set	12
   377  0001                     _TMR0	set	1
   378  0006                     _PORTB	set	6
   379  000B                     _INTCONbits	set	11
   380  0008                     _PORTD	set	8
   381  0007                     _PORTC	set	7
   382  008C                     _PIE1bits	set	140
   383  009F                     _ADCON1bits	set	159
   384  0081                     _OPTION_REGbits	set	129
   385  008F                     _OSCCON	set	143
   386  0096                     _IOCB	set	150
   387  0089                     _TRISE	set	137
   388  0088                     _TRISD	set	136
   389  0087                     _TRISC	set	135
   390  0086                     _TRISB	set	134
   391  0085                     _TRISA	set	133
   392  0189                     _ANSELH	set	393
   393  0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399  000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   403  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   404                           
   405                           ; Clear objects allocated to BANK0
   406  0011  1283               	bcf	3,5	;RP0=0, select bank0
   407  0012  1303               	bcf	3,6	;RP1=0, select bank0
   408  0013  01A8               	clrf	__pbssBANK0& (0+127)
   409  0014  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   410  0015  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   411  0016  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   412  0017                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415  0017                     __end_of__initialization:
   416  0017  0183               	clrf	3
   417  0018  120A  118A  2997   	ljmp	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMMON
   420  0079                     __pbssCOMMON:
   421  0079                     _push_timer:
   422  0079                     	ds	1
   423  007A                     _portb_flags:
   424  007A                     	ds	1
   425                           
   426                           	psect	bssBANK0
   427  0028                     __pbssBANK0:
   428  0028                     _mux_flag:
   429  0028                     	ds	1
   430  0029                     _adc_data:
   431  0029                     	ds	1
   432  002A                     _mux_timer:
   433  002A                     	ds	1
   434  002B                     _push_counter:
   435  002B                     	ds	1
   436                           
   437                           	psect	cstackCOMMON
   438  0070                     __pcstackCOMMON:
   439  0070                     ?_setup:
   440  0070                     ?_push_logic:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_adc_logic:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_mux_logic:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_adc_wait:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_adc_start:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_adc_config:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_adc_isr_enable:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_main:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_isr:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ??_isr:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_d7s_bin2hex:	
   471                           ; 1 bytes @ 0x0
   472                           
   473                           
   474                           ; 1 bytes @ 0x0
   475  0070                     	ds	3
   476  0073                     ??_setup:
   477  0073                     ??_push_logic:	
   478                           ; 1 bytes @ 0x3
   479                           
   480  0073                     ??_adc_logic:	
   481                           ; 1 bytes @ 0x3
   482                           
   483  0073                     ??_adc_wait:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0073                     ??_adc_start:	
   487                           ; 1 bytes @ 0x3
   488                           
   489  0073                     ??_adc_config:	
   490                           ; 1 bytes @ 0x3
   491                           
   492  0073                     ??_adc_isr_enable:	
   493                           ; 1 bytes @ 0x3
   494                           
   495  0073                     ??_d7s_bin2hex:	
   496                           ; 1 bytes @ 0x3
   497                           
   498                           
   499                           ; 1 bytes @ 0x3
   500  0073                     	ds	2
   501  0075                     d7s_bin2hex@num:
   502                           
   503                           ; 1 bytes @ 0x5
   504  0075                     	ds	1
   505  0076                     d7s_bin2hex@hex:
   506                           
   507                           ; 1 bytes @ 0x6
   508  0076                     	ds	1
   509  0077                     ??_d7s_2display:
   510                           
   511                           ; 1 bytes @ 0x7
   512  0077                     	ds	2
   513  0079                     ??_main:
   514                           
   515                           	psect	cstackBANK0
   516  0020                     __pcstackBANK0:	
   517                           ; 1 bytes @ 0x9
   518                           
   519  0020                     ?_d7s_2display:
   520  0020                     d7s_2display@port:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 2 bytes @ 0x0
   525  0020                     	ds	2
   526  0022                     d7s_2display@data:
   527                           
   528                           ; 1 bytes @ 0x2
   529  0022                     	ds	1
   530  0023                     d7s_2display@sel:
   531                           
   532                           ; 1 bytes @ 0x3
   533  0023                     	ds	1
   534  0024                     ??_mux_logic:
   535                           
   536                           ; 1 bytes @ 0x4
   537  0024                     	ds	2
   538  0026                     _mux_logic$232:
   539                           
   540                           ; 2 bytes @ 0x6
   541  0026                     	ds	2
   542                           
   543                           	psect	maintext
   544  0197                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 77 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B00/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called:    4
   570 ;; This function calls:
   571 ;;		_adc_logic
   572 ;;		_mux_logic
   573 ;;		_push_logic
   574 ;;		_setup
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _main
   582  0197                     _main:
   583  0197                     l1190:	
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   586                           
   587                           
   588                           ;main.c: 79:     setup();
   589  0197  120A  118A  20E8  120A  118A  	fcall	_setup
   590  019C                     l75:	
   591                           ;main.c: 80:     while(1)
   592                           
   593                           
   594                           ;main.c: 81:     {;main.c: 85:         push_logic();
   595  019C  120A  118A  2179  120A  118A  	fcall	_push_logic
   596  01A1                     l1192:
   597                           
   598                           ;main.c: 86:         adc_logic();
   599  01A1  120A  118A  21B3  120A  118A  	fcall	_adc_logic
   600  01A6                     l1194:
   601                           
   602                           ;main.c: 87:         mux_logic();
   603  01A6  120A  118A  20B2  120A  118A  	fcall	_mux_logic
   604  01AB                     l1196:
   605                           
   606                           ;main.c: 89:         PORTD = push_counter;
   607  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   608  01AC  1303               	bcf	3,6	;RP1=0, select bank0
   609  01AD  082B               	movf	_push_counter,w
   610  01AE  0088               	movwf	8	;volatile
   611  01AF  299C               	goto	l75
   612  01B0  120A  118A  280C   	ljmp	start
   613  01B3                     __end_of_main:
   614                           
   615                           	psect	text1
   616  00E8                     __ptext1:	
   617 ;; *************** function _setup *****************
   618 ;; Defined at:
   619 ;;		line 168 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    2
   640 ;; This function calls:
   641 ;;		_adc_config
   642 ;;		_adc_isr_enable
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _setup
   650  00E8                     _setup:
   651  00E8                     l1030:	
   652                           ;incstack = 0
   653                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   654                           
   655                           
   656                           ;main.c: 170:     ANSEL = 0x01;
   657  00E8  3001               	movlw	1
   658  00E9  1683               	bsf	3,5	;RP0=1, select bank3
   659  00EA  1703               	bsf	3,6	;RP1=1, select bank3
   660  00EB  0088               	movwf	8	;volatile
   661  00EC                     l1032:
   662                           
   663                           ;main.c: 171:     ANSELH = 0x00;
   664  00EC  0189               	clrf	9	;volatile
   665  00ED                     l1034:
   666                           
   667                           ;main.c: 173:     TRISA = 0x01;
   668  00ED  3001               	movlw	1
   669  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   670  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   671  00F0  0085               	movwf	5	;volatile
   672  00F1                     l1036:
   673                           
   674                           ;main.c: 174:     TRISB = 0x03;
   675  00F1  3003               	movlw	3
   676  00F2  0086               	movwf	6	;volatile
   677  00F3                     l1038:
   678                           
   679                           ;main.c: 175:     TRISC = 0x00;
   680  00F3  0187               	clrf	7	;volatile
   681  00F4                     l1040:
   682                           
   683                           ;main.c: 176:     TRISD = 0x00;
   684  00F4  0188               	clrf	8	;volatile
   685  00F5                     l1042:
   686                           
   687                           ;main.c: 177:     TRISE = 0x00;
   688  00F5  0189               	clrf	9	;volatile
   689  00F6                     l1044:
   690                           
   691                           ;main.c: 179:     PORTA = 0;
   692  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   693  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   694  00F8  0185               	clrf	5	;volatile
   695  00F9                     l1046:
   696                           
   697                           ;main.c: 180:     PORTB = 0;
   698  00F9  0186               	clrf	6	;volatile
   699  00FA                     l1048:
   700                           
   701                           ;main.c: 181:     PORTC = 0;
   702  00FA  0187               	clrf	7	;volatile
   703  00FB                     l1050:
   704                           
   705                           ;main.c: 182:     PORTD = 0;
   706  00FB  0188               	clrf	8	;volatile
   707  00FC                     l1052:
   708                           
   709                           ;main.c: 183:     PORTE = 0;
   710  00FC  0189               	clrf	9	;volatile
   711  00FD                     l1054:
   712                           
   713                           ;main.c: 186:     IOCB = 0x03;
   714  00FD  3003               	movlw	3
   715  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   716  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   717  0100  0096               	movwf	22	;volatile
   718  0101                     l1056:
   719                           
   720                           ;main.c: 187:     INTCONbits.RBIE = 1;
   721  0101  158B               	bsf	11,3	;volatile
   722  0102                     l1058:
   723                           
   724                           ;main.c: 188:     INTCONbits.T0IE = 1;
   725  0102  168B               	bsf	11,5	;volatile
   726  0103                     l1060:
   727                           
   728                           ;main.c: 189:     INTCONbits.GIE = 1;
   729  0103  178B               	bsf	11,7	;volatile
   730  0104                     l1062:
   731                           
   732                           ;main.c: 191:     OSCCON = 0b01100001;
   733  0104  3061               	movlw	97
   734  0105  008F               	movwf	15	;volatile
   735  0106                     l1064:
   736                           
   737                           ;main.c: 193:     OPTION_REGbits.T0CS = 0;
   738  0106  1281               	bcf	1,5	;volatile
   739  0107                     l1066:
   740                           
   741                           ;main.c: 194:     OPTION_REGbits.PSA = 0;
   742  0107  1181               	bcf	1,3	;volatile
   743  0108                     l1068:
   744                           
   745                           ;main.c: 195:     OPTION_REGbits.PS2 = 0;
   746  0108  1101               	bcf	1,2	;volatile
   747  0109                     l1070:
   748                           
   749                           ;main.c: 196:     OPTION_REGbits.PS1 = 0;
   750  0109  1081               	bcf	1,1	;volatile
   751  010A                     l1072:
   752                           
   753                           ;main.c: 197:     OPTION_REGbits.PS0 = 1;
   754  010A  1401               	bsf	1,0	;volatile
   755  010B                     l1074:
   756                           
   757                           ;main.c: 199:     TMR0 = 6;;
   758  010B  3006               	movlw	6
   759  010C  1283               	bcf	3,5	;RP0=0, select bank0
   760  010D  1303               	bcf	3,6	;RP1=0, select bank0
   761  010E  0081               	movwf	1	;volatile
   762  010F                     l1076:
   763                           
   764                           ;main.c: 201:     INTCONbits.T0IF = 0;
   765  010F  110B               	bcf	11,2	;volatile
   766  0110                     l1078:
   767                           
   768                           ;main.c: 203:     adc_config();
   769  0110  120A  118A  21D0  120A  118A  	fcall	_adc_config
   770  0115                     l1080:
   771                           
   772                           ;main.c: 204:     adc_isr_enable();
   773  0115  120A  118A  21DA  120A  118A  	fcall	_adc_isr_enable
   774  011A                     l107:
   775  011A  0008               	return
   776  011B                     __end_of_setup:
   777                           
   778                           	psect	text2
   779  01DA                     __ptext2:	
   780 ;; *************** function _adc_isr_enable *****************
   781 ;; Defined at:
   782 ;;		line 37 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		None
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_setup
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _adc_isr_enable
   812  01DA                     _adc_isr_enable:
   813  01DA                     l1028:	
   814                           ;incstack = 0
   815                           ; Regs used in _adc_isr_enable: []
   816                           
   817                           
   818                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 39:     PIE1bits.ADIE 
      +                          = 1;
   819  01DA  1683               	bsf	3,5	;RP0=1, select bank1
   820  01DB  1303               	bcf	3,6	;RP1=0, select bank1
   821  01DC  170C               	bsf	12,6	;volatile
   822  01DD                     l209:
   823  01DD  0008               	return
   824  01DE                     __end_of_adc_isr_enable:
   825                           
   826                           	psect	text3
   827  01D0                     __ptext3:	
   828 ;; *************** function _adc_config *****************
   829 ;; Defined at:
   830 ;;		line 11 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         0       0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_setup
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _adc_config
   860  01D0                     _adc_config:
   861  01D0                     l1018:	
   862                           ;incstack = 0
   863                           ; Regs used in _adc_config: [wreg]
   864                           
   865                           
   866                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 13:     ADCON0 = 0b100
      +                          00001;
   867  01D0  3081               	movlw	129
   868  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   869  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   870  01D3  009F               	movwf	31	;volatile
   871  01D4                     l1020:
   872                           
   873                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 15:     ADCON1bits.ADF
      +                          M = 0;
   874  01D4  1683               	bsf	3,5	;RP0=1, select bank1
   875  01D5  1303               	bcf	3,6	;RP1=0, select bank1
   876  01D6  139F               	bcf	31,7	;volatile
   877  01D7                     l1022:
   878                           
   879                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 16:     ADCON1bits.VCF
      +                          G1 = 0;
   880  01D7  129F               	bcf	31,5	;volatile
   881  01D8                     l1024:
   882                           
   883                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 17:     ADCON1bits.VCF
      +                          G0 = 0;
   884  01D8  121F               	bcf	31,4	;volatile
   885  01D9                     l200:
   886  01D9  0008               	return
   887  01DA                     __end_of_adc_config:
   888                           
   889                           	psect	text4
   890  0179                     __ptext4:	
   891 ;; *************** function _push_logic *****************
   892 ;; Defined at:
   893 ;;		line 143 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          1       0       0       0       0
   910 ;;      Totals:         1       0       0       0       0
   911 ;;Total ram usage:        1 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _push_logic
   923  0179                     _push_logic:
   924  0179                     l1084:	
   925                           ;incstack = 0
   926                           ; Regs used in _push_logic: [wreg+status,2+status,0]
   927                           
   928                           
   929                           ;main.c: 145:     if (200 != push_timer)
   930  0179  30C8               	movlw	200
   931  017A  0679               	xorwf	_push_timer,w
   932  017B  1903               	btfsc	3,2
   933  017C  297E               	goto	u161
   934  017D  297F               	goto	u160
   935  017E                     u161:
   936  017E  2980               	goto	l1088
   937  017F                     u160:
   938  017F  2996               	goto	l102
   939  0180                     l1088:
   940                           
   941                           ;main.c: 150:     push_timer = 0;
   942  0180  01F9               	clrf	_push_timer
   943  0181                     l1090:
   944                           
   945                           ;main.c: 152:     if (0x01 == portb_flags)
   946  0181  037A               	decf	_portb_flags,w
   947  0182  1D03               	btfss	3,2
   948  0183  2985               	goto	u171
   949  0184  2986               	goto	u170
   950  0185                     u171:
   951  0185  298C               	goto	l103
   952  0186                     u170:
   953  0186                     l1092:
   954                           
   955                           ;main.c: 153:     {;main.c: 154:         push_counter++;
   956  0186  3001               	movlw	1
   957  0187  00F3               	movwf	??_push_logic
   958  0188  0873               	movf	??_push_logic,w
   959  0189  1283               	bcf	3,5	;RP0=0, select bank0
   960  018A  1303               	bcf	3,6	;RP1=0, select bank0
   961  018B  07AB               	addwf	_push_counter,f
   962  018C                     l103:	
   963                           ;main.c: 155:     }
   964                           
   965                           
   966                           ;main.c: 157:     if (0x02 == portb_flags)
   967  018C  3002               	movlw	2
   968  018D  067A               	xorwf	_portb_flags,w
   969  018E  1D03               	btfss	3,2
   970  018F  2991               	goto	u181
   971  0190  2992               	goto	u180
   972  0191                     u181:
   973  0191  2996               	goto	l102
   974  0192                     u180:
   975  0192                     l1094:
   976                           
   977                           ;main.c: 158:     {;main.c: 159:         push_counter--;
   978  0192  3001               	movlw	1
   979  0193  1283               	bcf	3,5	;RP0=0, select bank0
   980  0194  1303               	bcf	3,6	;RP1=0, select bank0
   981  0195  02AB               	subwf	_push_counter,f
   982  0196                     l102:
   983  0196  0008               	return
   984  0197                     __end_of_push_logic:
   985                           
   986                           	psect	text5
   987  00B2                     __ptext5:	
   988 ;; *************** function _mux_logic *****************
   989 ;; Defined at:
   990 ;;		line 115 in file "main.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         0       2       0       0       0
  1006 ;;      Temps:          0       2       0       0       0
  1007 ;;      Totals:         0       4       0       0       0
  1008 ;;Total ram usage:        4 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    3
  1011 ;; This function calls:
  1012 ;;		_d7s_2display
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _mux_logic
  1020  00B2                     _mux_logic:
  1021  00B2                     l1174:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _mux_logic: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1024                           
  1025                           
  1026                           ;main.c: 117:     if (40 != mux_timer)
  1027  00B2  3028               	movlw	40
  1028  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1029  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1030  00B5  062A               	xorwf	_mux_timer,w
  1031  00B6  1903               	btfsc	3,2
  1032  00B7  28B9               	goto	u291
  1033  00B8  28BA               	goto	u290
  1034  00B9                     u291:
  1035  00B9  28BB               	goto	l1178
  1036  00BA                     u290:
  1037  00BA  28E7               	goto	l90
  1038  00BB                     l1178:
  1039                           
  1040                           ;main.c: 122:     mux_timer = 0;
  1041  00BB  01AA               	clrf	_mux_timer
  1042  00BC                     l1180:
  1043                           
  1044                           ;main.c: 124:     mux_flag = !mux_flag;
  1045  00BC  0828               	movf	_mux_flag,w
  1046  00BD  1903               	btfsc	3,2
  1047  00BE  28C0               	goto	u301
  1048  00BF  28C2               	goto	u300
  1049  00C0                     u301:
  1050  00C0  3001               	movlw	1
  1051  00C1  28C3               	goto	u310
  1052  00C2                     u300:
  1053  00C2  3000               	movlw	0
  1054  00C3                     u310:
  1055  00C3  00A4               	movwf	??_mux_logic
  1056  00C4  0824               	movf	??_mux_logic,w
  1057  00C5  00A8               	movwf	_mux_flag
  1058  00C6                     l1182:
  1059                           
  1060                           ;main.c: 126:     PORTE = mux_flag ? 1 : 2;
  1061  00C6  0828               	movf	_mux_flag,w
  1062  00C7  1D03               	btfss	3,2
  1063  00C8  28CA               	goto	u321
  1064  00C9  28CB               	goto	u320
  1065  00CA                     u321:
  1066  00CA  28D0               	goto	l1186
  1067  00CB                     u320:
  1068  00CB                     l1184:
  1069  00CB  3002               	movlw	2
  1070  00CC  00A6               	movwf	_mux_logic$232
  1071  00CD  3000               	movlw	0
  1072  00CE  00A7               	movwf	_mux_logic$232+1
  1073  00CF  28D4               	goto	l94
  1074  00D0                     l1186:
  1075  00D0  3001               	movlw	1
  1076  00D1  00A6               	movwf	_mux_logic$232
  1077  00D2  3000               	movlw	0
  1078  00D3  00A7               	movwf	_mux_logic$232+1
  1079  00D4                     l94:
  1080  00D4  0826               	movf	_mux_logic$232,w
  1081  00D5  0089               	movwf	9	;volatile
  1082  00D6                     l1188:
  1083                           
  1084                           ;main.c: 128:     d7s_2display(&PORTC, adc_data, mux_flag);
  1085  00D6  3007               	movlw	7
  1086  00D7  00A0               	movwf	d7s_2display@port
  1087  00D8  3000               	movlw	0
  1088  00D9  00A1               	movwf	d7s_2display@port+1
  1089  00DA  0829               	movf	_adc_data,w
  1090  00DB  00A4               	movwf	??_mux_logic
  1091  00DC  0824               	movf	??_mux_logic,w
  1092  00DD  00A2               	movwf	d7s_2display@data
  1093  00DE  0828               	movf	_mux_flag,w
  1094  00DF  00A5               	movwf	??_mux_logic+1
  1095  00E0  0825               	movf	??_mux_logic+1,w
  1096  00E1  00A3               	movwf	d7s_2display@sel
  1097  00E2  120A  118A  211B  120A  118A  	fcall	_d7s_2display
  1098  00E7                     l90:
  1099  00E7  0008               	return
  1100  00E8                     __end_of_mux_logic:
  1101                           
  1102                           	psect	text6
  1103  011B                     __ptext6:	
  1104 ;; *************** function _d7s_2display *****************
  1105 ;; Defined at:
  1106 ;;		line 97 in file "d7s.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1109 ;;		 -> PORTC(1), 
  1110 ;;  data            1    2[BANK0 ] unsigned char 
  1111 ;;  sel             1    3[BANK0 ] _Bool 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       4       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          2       0       0       0       0
  1126 ;;      Totals:         2       4       0       0       0
  1127 ;;Total ram usage:        6 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    2
  1130 ;; This function calls:
  1131 ;;		_d7s_bin2hex
  1132 ;; This function is called by:
  1133 ;;		_mux_logic
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _d7s_2display
  1139  011B                     _d7s_2display:
  1140  011B                     l1168:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _d7s_2display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1143                           
  1144                           
  1145                           ;d7s.c: 97: void d7s_2display(uint8_t* port, uint8_t data, _Bool sel);d7s.c: 98: {;d7s.c
      +                          : 99:     if (sel)
  1146  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1147  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1148  011D  0823               	movf	d7s_2display@sel,w
  1149  011E  1903               	btfsc	3,2
  1150  011F  2921               	goto	u271
  1151  0120  2922               	goto	u270
  1152  0121                     u271:
  1153  0121  2933               	goto	l1172
  1154  0122                     u270:
  1155  0122                     l1170:
  1156                           
  1157                           ;d7s.c: 100:     {;d7s.c: 101:         *port = d7s_bin2hex(data);
  1158  0122  0822               	movf	d7s_2display@data,w
  1159  0123  120A  118A  201B  120A  118A  	fcall	_d7s_bin2hex
  1160  0128  00F7               	movwf	??_d7s_2display
  1161  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1162  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1163  012B  0820               	movf	d7s_2display@port,w
  1164  012C  0084               	movwf	4
  1165  012D  1783               	bsf	3,7
  1166  012E  1C21               	btfss	d7s_2display@port+1,0
  1167  012F  1383               	bcf	3,7
  1168  0130  0877               	movf	??_d7s_2display,w
  1169  0131  0080               	movwf	0
  1170                           
  1171                           ;d7s.c: 102:     }
  1172  0132  294B               	goto	l242
  1173  0133                     l1172:
  1174                           
  1175                           ;d7s.c: 104:     {;d7s.c: 105:         *port = d7s_bin2hex(data >> 4);
  1176  0133  0822               	movf	d7s_2display@data,w
  1177  0134  00F7               	movwf	??_d7s_2display
  1178  0135  3004               	movlw	4
  1179  0136                     u285:
  1180  0136  1003               	clrc
  1181  0137  0CF7               	rrf	??_d7s_2display,f
  1182  0138  3EFF               	addlw	-1
  1183  0139  1D03               	skipz
  1184  013A  2936               	goto	u285
  1185  013B  0877               	movf	??_d7s_2display,w
  1186  013C  120A  118A  201B  120A  118A  	fcall	_d7s_bin2hex
  1187  0141  00F8               	movwf	??_d7s_2display+1
  1188  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0144  0820               	movf	d7s_2display@port,w
  1191  0145  0084               	movwf	4
  1192  0146  1783               	bsf	3,7
  1193  0147  1C21               	btfss	d7s_2display@port+1,0
  1194  0148  1383               	bcf	3,7
  1195  0149  0878               	movf	??_d7s_2display+1,w
  1196  014A  0080               	movwf	0
  1197  014B                     l242:
  1198  014B  0008               	return
  1199  014C                     __end_of_d7s_2display:
  1200                           
  1201                           	psect	text7
  1202  001B                     __ptext7:	
  1203 ;; *************** function _d7s_bin2hex *****************
  1204 ;; Defined at:
  1205 ;;		line 18 in file "d7s.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  num             1    wreg     unsigned char 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  num             1    5[COMMON] unsigned char 
  1210 ;;  hex             1    6[COMMON] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      unsigned char 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         2       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0
  1223 ;;      Totals:         4       0       0       0       0
  1224 ;;Total ram usage:        4 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_d7s_2display
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _d7s_bin2hex
  1236  001B                     _d7s_bin2hex:
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _d7s_bin2hex: [wreg-fsr0h+status,2+status,0]
  1240                           ;d7s_bin2hex@num stored from wreg
  1241  001B  00F5               	movwf	d7s_bin2hex@num
  1242  001C                     l960:
  1243                           
  1244                           ;d7s.c: 18: uint8_t d7s_bin2hex(uint8_t num);d7s.c: 19: {;d7s.c: 20:     num &= 0x0F;
  1245  001C  300F               	movlw	15
  1246  001D  00F3               	movwf	??_d7s_bin2hex
  1247  001E  0873               	movf	??_d7s_bin2hex,w
  1248  001F  05F5               	andwf	d7s_bin2hex@num,f
  1249  0020                     l962:
  1250                           
  1251                           ;d7s.c: 24:     switch (num)
  1252  0020  2876               	goto	l998
  1253  0021                     l964:
  1254                           
  1255                           ;d7s.c: 27:             hex = 0x7E;
  1256  0021  307E               	movlw	126
  1257  0022  00F3               	movwf	??_d7s_bin2hex
  1258  0023  0873               	movf	??_d7s_bin2hex,w
  1259  0024  00F6               	movwf	d7s_bin2hex@hex
  1260                           
  1261                           ;d7s.c: 28:             break;
  1262  0025  28B0               	goto	l1000
  1263  0026                     l966:
  1264                           
  1265                           ;d7s.c: 31:             hex = 0x30;
  1266  0026  3030               	movlw	48
  1267  0027  00F3               	movwf	??_d7s_bin2hex
  1268  0028  0873               	movf	??_d7s_bin2hex,w
  1269  0029  00F6               	movwf	d7s_bin2hex@hex
  1270                           
  1271                           ;d7s.c: 32:             break;
  1272  002A  28B0               	goto	l1000
  1273  002B                     l968:
  1274                           
  1275                           ;d7s.c: 35:             hex = 0x6D;
  1276  002B  306D               	movlw	109
  1277  002C  00F3               	movwf	??_d7s_bin2hex
  1278  002D  0873               	movf	??_d7s_bin2hex,w
  1279  002E  00F6               	movwf	d7s_bin2hex@hex
  1280                           
  1281                           ;d7s.c: 36:             break;
  1282  002F  28B0               	goto	l1000
  1283  0030                     l970:
  1284                           
  1285                           ;d7s.c: 39:             hex = 0x79;
  1286  0030  3079               	movlw	121
  1287  0031  00F3               	movwf	??_d7s_bin2hex
  1288  0032  0873               	movf	??_d7s_bin2hex,w
  1289  0033  00F6               	movwf	d7s_bin2hex@hex
  1290                           
  1291                           ;d7s.c: 40:             break;
  1292  0034  28B0               	goto	l1000
  1293  0035                     l972:
  1294                           
  1295                           ;d7s.c: 43:             hex = 0x33;
  1296  0035  3033               	movlw	51
  1297  0036  00F3               	movwf	??_d7s_bin2hex
  1298  0037  0873               	movf	??_d7s_bin2hex,w
  1299  0038  00F6               	movwf	d7s_bin2hex@hex
  1300                           
  1301                           ;d7s.c: 44:             break;
  1302  0039  28B0               	goto	l1000
  1303  003A                     l974:
  1304                           
  1305                           ;d7s.c: 47:             hex = 0x5B;
  1306  003A  305B               	movlw	91
  1307  003B  00F3               	movwf	??_d7s_bin2hex
  1308  003C  0873               	movf	??_d7s_bin2hex,w
  1309  003D  00F6               	movwf	d7s_bin2hex@hex
  1310                           
  1311                           ;d7s.c: 48:             break;
  1312  003E  28B0               	goto	l1000
  1313  003F                     l976:
  1314                           
  1315                           ;d7s.c: 51:             hex = 0x5F;
  1316  003F  305F               	movlw	95
  1317  0040  00F3               	movwf	??_d7s_bin2hex
  1318  0041  0873               	movf	??_d7s_bin2hex,w
  1319  0042  00F6               	movwf	d7s_bin2hex@hex
  1320                           
  1321                           ;d7s.c: 52:             break;
  1322  0043  28B0               	goto	l1000
  1323  0044                     l978:
  1324                           
  1325                           ;d7s.c: 55:             hex = 0x70;
  1326  0044  3070               	movlw	112
  1327  0045  00F3               	movwf	??_d7s_bin2hex
  1328  0046  0873               	movf	??_d7s_bin2hex,w
  1329  0047  00F6               	movwf	d7s_bin2hex@hex
  1330                           
  1331                           ;d7s.c: 56:             break;
  1332  0048  28B0               	goto	l1000
  1333  0049                     l980:
  1334                           
  1335                           ;d7s.c: 59:             hex = 0x7F;
  1336  0049  307F               	movlw	127
  1337  004A  00F3               	movwf	??_d7s_bin2hex
  1338  004B  0873               	movf	??_d7s_bin2hex,w
  1339  004C  00F6               	movwf	d7s_bin2hex@hex
  1340                           
  1341                           ;d7s.c: 60:             break;
  1342  004D  28B0               	goto	l1000
  1343  004E                     l982:
  1344                           
  1345                           ;d7s.c: 63:             hex = 0x7B;
  1346  004E  307B               	movlw	123
  1347  004F  00F3               	movwf	??_d7s_bin2hex
  1348  0050  0873               	movf	??_d7s_bin2hex,w
  1349  0051  00F6               	movwf	d7s_bin2hex@hex
  1350                           
  1351                           ;d7s.c: 64:             break;
  1352  0052  28B0               	goto	l1000
  1353  0053                     l984:
  1354                           
  1355                           ;d7s.c: 67:             hex = 0x77;
  1356  0053  3077               	movlw	119
  1357  0054  00F3               	movwf	??_d7s_bin2hex
  1358  0055  0873               	movf	??_d7s_bin2hex,w
  1359  0056  00F6               	movwf	d7s_bin2hex@hex
  1360                           
  1361                           ;d7s.c: 68:             break;
  1362  0057  28B0               	goto	l1000
  1363  0058                     l986:
  1364                           
  1365                           ;d7s.c: 71:             hex = 0x1F;
  1366  0058  301F               	movlw	31
  1367  0059  00F3               	movwf	??_d7s_bin2hex
  1368  005A  0873               	movf	??_d7s_bin2hex,w
  1369  005B  00F6               	movwf	d7s_bin2hex@hex
  1370                           
  1371                           ;d7s.c: 72:             break;
  1372  005C  28B0               	goto	l1000
  1373  005D                     l988:
  1374                           
  1375                           ;d7s.c: 75:             hex = 0x4E;
  1376  005D  304E               	movlw	78
  1377  005E  00F3               	movwf	??_d7s_bin2hex
  1378  005F  0873               	movf	??_d7s_bin2hex,w
  1379  0060  00F6               	movwf	d7s_bin2hex@hex
  1380                           
  1381                           ;d7s.c: 76:             break;
  1382  0061  28B0               	goto	l1000
  1383  0062                     l990:
  1384                           
  1385                           ;d7s.c: 79:             hex = 0x3D;
  1386  0062  303D               	movlw	61
  1387  0063  00F3               	movwf	??_d7s_bin2hex
  1388  0064  0873               	movf	??_d7s_bin2hex,w
  1389  0065  00F6               	movwf	d7s_bin2hex@hex
  1390                           
  1391                           ;d7s.c: 80:             break;
  1392  0066  28B0               	goto	l1000
  1393  0067                     l992:
  1394                           
  1395                           ;d7s.c: 83:             hex = 0x4F;
  1396  0067  304F               	movlw	79
  1397  0068  00F3               	movwf	??_d7s_bin2hex
  1398  0069  0873               	movf	??_d7s_bin2hex,w
  1399  006A  00F6               	movwf	d7s_bin2hex@hex
  1400                           
  1401                           ;d7s.c: 84:             break;
  1402  006B  28B0               	goto	l1000
  1403  006C                     l994:
  1404                           
  1405                           ;d7s.c: 87:             hex = 0x47;
  1406  006C  3047               	movlw	71
  1407  006D  00F3               	movwf	??_d7s_bin2hex
  1408  006E  0873               	movf	??_d7s_bin2hex,w
  1409  006F  00F6               	movwf	d7s_bin2hex@hex
  1410                           
  1411                           ;d7s.c: 88:             break;
  1412  0070  28B0               	goto	l1000
  1413  0071                     l996:
  1414                           
  1415                           ;d7s.c: 91:             hex = 0xFF;
  1416  0071  30FF               	movlw	255
  1417  0072  00F3               	movwf	??_d7s_bin2hex
  1418  0073  0873               	movf	??_d7s_bin2hex,w
  1419  0074  00F6               	movwf	d7s_bin2hex@hex
  1420                           
  1421                           ;d7s.c: 92:     }
  1422  0075  28B0               	goto	l1000
  1423  0076                     l998:
  1424  0076  0875               	movf	d7s_bin2hex@num,w
  1425  0077  00F3               	movwf	??_d7s_bin2hex
  1426  0078  01F4               	clrf	??_d7s_bin2hex+1
  1427                           
  1428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 1, Range of values is 0 to 0
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte            4     3 (average)
  1434                           ; direct_byte           11     8 (fixed)
  1435                           ; jumptable            260     6 (fixed)
  1436                           ;	Chosen strategy is simple_byte
  1437  0079  0874               	movf	??_d7s_bin2hex+1,w
  1438  007A  3A00               	xorlw	0	; case 0
  1439  007B  1903               	skipnz
  1440  007C  287E               	goto	l1218
  1441  007D  2871               	goto	l996
  1442  007E                     l1218:
  1443                           
  1444                           ; Switch size 1, requested type "simple"
  1445                           ; Number of cases is 16, Range of values is 0 to 15
  1446                           ; switch strategies available:
  1447                           ; Name         Instructions Cycles
  1448                           ; simple_byte           49    25 (average)
  1449                           ; direct_byte           56     8 (fixed)
  1450                           ; jumptable            260     6 (fixed)
  1451                           ;	Chosen strategy is simple_byte
  1452  007E  0873               	movf	??_d7s_bin2hex,w
  1453  007F  3A00               	xorlw	0	; case 0
  1454  0080  1903               	skipnz
  1455  0081  2821               	goto	l964
  1456  0082  3A01               	xorlw	1	; case 1
  1457  0083  1903               	skipnz
  1458  0084  2826               	goto	l966
  1459  0085  3A03               	xorlw	3	; case 2
  1460  0086  1903               	skipnz
  1461  0087  282B               	goto	l968
  1462  0088  3A01               	xorlw	1	; case 3
  1463  0089  1903               	skipnz
  1464  008A  2830               	goto	l970
  1465  008B  3A07               	xorlw	7	; case 4
  1466  008C  1903               	skipnz
  1467  008D  2835               	goto	l972
  1468  008E  3A01               	xorlw	1	; case 5
  1469  008F  1903               	skipnz
  1470  0090  283A               	goto	l974
  1471  0091  3A03               	xorlw	3	; case 6
  1472  0092  1903               	skipnz
  1473  0093  283F               	goto	l976
  1474  0094  3A01               	xorlw	1	; case 7
  1475  0095  1903               	skipnz
  1476  0096  2844               	goto	l978
  1477  0097  3A0F               	xorlw	15	; case 8
  1478  0098  1903               	skipnz
  1479  0099  2849               	goto	l980
  1480  009A  3A01               	xorlw	1	; case 9
  1481  009B  1903               	skipnz
  1482  009C  284E               	goto	l982
  1483  009D  3A03               	xorlw	3	; case 10
  1484  009E  1903               	skipnz
  1485  009F  2853               	goto	l984
  1486  00A0  3A01               	xorlw	1	; case 11
  1487  00A1  1903               	skipnz
  1488  00A2  2858               	goto	l986
  1489  00A3  3A07               	xorlw	7	; case 12
  1490  00A4  1903               	skipnz
  1491  00A5  285D               	goto	l988
  1492  00A6  3A01               	xorlw	1	; case 13
  1493  00A7  1903               	skipnz
  1494  00A8  2862               	goto	l990
  1495  00A9  3A03               	xorlw	3	; case 14
  1496  00AA  1903               	skipnz
  1497  00AB  2867               	goto	l992
  1498  00AC  3A01               	xorlw	1	; case 15
  1499  00AD  1903               	skipnz
  1500  00AE  286C               	goto	l994
  1501  00AF  2871               	goto	l996
  1502  00B0                     l1000:
  1503                           
  1504                           ;d7s.c: 94:     return hex;
  1505  00B0  0876               	movf	d7s_bin2hex@hex,w
  1506  00B1                     l237:
  1507  00B1  0008               	return
  1508  00B2                     __end_of_d7s_bin2hex:
  1509                           
  1510                           	psect	text8
  1511  01B3                     __ptext8:	
  1512 ;; *************** function _adc_logic *****************
  1513 ;; Defined at:
  1514 ;;		line 132 in file "main.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    2
  1535 ;; This function calls:
  1536 ;;		_adc_start
  1537 ;;		_adc_wait
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _adc_logic
  1545  01B3                     _adc_logic:
  1546  01B3                     l1098:	
  1547                           ;incstack = 0
  1548                           ; Regs used in _adc_logic: [status,2+status,0+pclath+cstack]
  1549                           
  1550                           
  1551                           ;main.c: 134:     if (ADCON0bits.GO)
  1552  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1553  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1554  01B5  1C9F               	btfss	31,1	;volatile
  1555  01B6  29B8               	goto	u191
  1556  01B7  29B9               	goto	u190
  1557  01B8                     u191:
  1558  01B8  29BA               	goto	l1102
  1559  01B9                     u190:
  1560  01B9  29C4               	goto	l98
  1561  01BA                     l1102:
  1562                           
  1563                           ;main.c: 139:     adc_wait();
  1564  01BA  120A  118A  21C5  120A  118A  	fcall	_adc_wait
  1565                           
  1566                           ;main.c: 140:     adc_start();
  1567  01BF  120A  118A  21DE  120A  118A  	fcall	_adc_start
  1568  01C4                     l98:
  1569  01C4  0008               	return
  1570  01C5                     __end_of_adc_logic:
  1571                           
  1572                           	psect	text9
  1573  01C5                     __ptext9:	
  1574 ;; *************** function _adc_wait *****************
  1575 ;; Defined at:
  1576 ;;		line 47 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		None
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0
  1593 ;;      Totals:         0       0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_adc_logic
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _adc_wait
  1606  01C5                     _adc_wait:
  1607  01C5                     l1014:	
  1608                           ;incstack = 0
  1609                           ; Regs used in _adc_wait: []
  1610                           
  1611  01C5  0000               	nop	;# 
  1612  01C6  0000               	nop	;# 
  1613  01C7  0000               	nop	;# 
  1614  01C8  0000               	nop	;# 
  1615  01C9  0000               	nop	;# 
  1616  01CA  0000               	nop	;# 
  1617  01CB  0000               	nop	;# 
  1618  01CC  0000               	nop	;# 
  1619  01CD  0000               	nop	;# 
  1620  01CE  0000               	nop	;# 
  1621  01CF                     l215:	
  1622                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 60:     return;
  1623                           
  1624  01CF  0008               	return
  1625  01D0                     __end_of_adc_wait:
  1626                           
  1627                           	psect	text10
  1628  01DE                     __ptext10:	
  1629 ;; *************** function _adc_start *****************
  1630 ;; Defined at:
  1631 ;;		line 22 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		None
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_adc_logic
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _adc_start
  1661  01DE                     _adc_start:
  1662  01DE                     l1016:	
  1663                           ;incstack = 0
  1664                           ; Regs used in _adc_start: []
  1665                           
  1666                           
  1667                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 24:     ADCON0bits.GO 
      +                          = 1;
  1668  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1669  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1670  01E0  149F               	bsf	31,1	;volatile
  1671  01E1                     l203:	
  1672                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 26:     return;
  1673                           
  1674  01E1  0008               	return
  1675  01E2                     __end_of_adc_start:
  1676                           
  1677                           	psect	text11
  1678  014C                     __ptext11:	
  1679 ;; *************** function _isr *****************
  1680 ;; Defined at:
  1681 ;;		line 93 in file "main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          3       0       0       0       0
  1698 ;;      Totals:         3       0       0       0       0
  1699 ;;Total ram usage:        3 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		Interrupt level 1
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _isr
  1710  014C                     _isr:
  1711  014C                     i1l1128:
  1712                           
  1713                           ;main.c: 95:     if (INTCONbits.RBIF)
  1714  014C  1C0B               	btfss	11,0	;volatile
  1715  014D  294F               	goto	u24_21
  1716  014E  2950               	goto	u24_20
  1717  014F                     u24_21:
  1718  014F  2957               	goto	i1l1134
  1719  0150                     u24_20:
  1720  0150                     i1l1130:
  1721                           
  1722                           ;main.c: 96:     {;main.c: 97:         INTCONbits.RBIF = 0;
  1723  0150  100B               	bcf	11,0	;volatile
  1724  0151                     i1l1132:
  1725                           
  1726                           ;main.c: 98:         portb_flags = PORTB;
  1727  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0153  0806               	movf	6,w	;volatile
  1730  0154  00F0               	movwf	??_isr
  1731  0155  0870               	movf	??_isr,w
  1732  0156  00FA               	movwf	_portb_flags
  1733  0157                     i1l1134:
  1734                           
  1735                           ;main.c: 101:     if (INTCONbits.T0IF)
  1736  0157  1D0B               	btfss	11,2	;volatile
  1737  0158  295A               	goto	u25_21
  1738  0159  295B               	goto	u25_20
  1739  015A                     u25_21:
  1740  015A  2968               	goto	i1l1144
  1741  015B                     u25_20:
  1742  015B                     i1l1136:
  1743                           
  1744                           ;main.c: 102:     {;main.c: 103:         INTCONbits.T0IF = 0;
  1745  015B  110B               	bcf	11,2	;volatile
  1746  015C                     i1l1138:
  1747                           
  1748                           ;main.c: 104:         TMR0 = 6;;
  1749  015C  3006               	movlw	6
  1750  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1751  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1752  015F  0081               	movwf	1	;volatile
  1753  0160                     i1l1140:
  1754                           
  1755                           ;main.c: 105:         push_timer++;
  1756  0160  3001               	movlw	1
  1757  0161  00F0               	movwf	??_isr
  1758  0162  0870               	movf	??_isr,w
  1759  0163  07F9               	addwf	_push_timer,f
  1760  0164                     i1l1142:
  1761                           
  1762                           ;main.c: 106:         mux_timer++;
  1763  0164  3001               	movlw	1
  1764  0165  00F0               	movwf	??_isr
  1765  0166  0870               	movf	??_isr,w
  1766  0167  07AA               	addwf	_mux_timer,f
  1767  0168                     i1l1144:
  1768                           
  1769                           ;main.c: 109:     if (PIR1bits.ADIF)
  1770  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1772  016A  1F0C               	btfss	12,6	;volatile
  1773  016B  296D               	goto	u26_21
  1774  016C  296E               	goto	u26_20
  1775  016D                     u26_21:
  1776  016D  2972               	goto	i1l86
  1777  016E                     u26_20:
  1778  016E                     i1l1146:
  1779                           
  1780                           ;main.c: 110:     {;main.c: 111:         adc_data = ADRESH;
  1781  016E  081E               	movf	30,w	;volatile
  1782  016F  00F0               	movwf	??_isr
  1783  0170  0870               	movf	??_isr,w
  1784  0171  00A9               	movwf	_adc_data
  1785  0172                     i1l86:
  1786  0172  0872               	movf	??_isr+2,w
  1787  0173  008A               	movwf	10
  1788  0174  0E71               	swapf	??_isr+1,w
  1789  0175  0083               	movwf	3
  1790  0176  0EFE               	swapf	btemp,f
  1791  0177  0E7E               	swapf	btemp,w
  1792  0178  0009               	retfie
  1793  0179                     __end_of_isr:
  1794  007E                     btemp	set	126	;btemp
  1795  007E                     wtemp0	set	126
  1796                           
  1797                           	psect	intentry
  1798  0004                     __pintentry:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _isr: [wreg+status,2+status,0]
  1801                           
  1802  0004                     interrupt_function:
  1803  007E                     saved_w	set	btemp
  1804  0004  00FE               	movwf	btemp
  1805  0005  0E03               	swapf	3,w
  1806  0006  00F1               	movwf	??_isr+1
  1807  0007  080A               	movf	10,w
  1808  0008  00F2               	movwf	??_isr+2
  1809  0009  120A  118A  294C   	ljmp	_isr
  1810                           
  1811                           	psect	config
  1812                           
  1813                           ;Config register CONFIG1 @ 0x2007
  1814                           ;	Oscillator Selection bits
  1815                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1816                           ;	Watchdog Timer Enable bit
  1817                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1818                           ;	Power-up Timer Enable bit
  1819                           ;	PWRTE = OFF, PWRT disabled
  1820                           ;	RE3/MCLR pin function select bit
  1821                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1822                           ;	Code Protection bit
  1823                           ;	CP = OFF, Program memory code protection is disabled
  1824                           ;	Data Code Protection bit
  1825                           ;	CPD = OFF, Data memory code protection is disabled
  1826                           ;	Brown Out Reset Selection bits
  1827                           ;	BOREN = OFF, BOR disabled
  1828                           ;	Internal External Switchover bit
  1829                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1830                           ;	Fail-Safe Clock Monitor Enabled bit
  1831                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1832                           ;	Low Voltage Programming Enable bit
  1833                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1834                           ;	In-Circuit Debugger Mode bit
  1835                           ;	DEBUG = 0x1, unprogrammed default
  1836  2007                     	org	8199
  1837  2007  20D4               	dw	8404
  1838                           
  1839                           ;Config register CONFIG2 @ 0x2008
  1840                           ;	Brown-out Reset Selection bit
  1841                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1842                           ;	Flash Program Memory Self Write Enable bits
  1843                           ;	WRT = OFF, Write protection off
  1844  2008                     	org	8200
  1845  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      8      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    d7s_2display@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _mux_logic->_d7s_2display
    _d7s_2display->_d7s_bin2hex

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mux_logic
    _mux_logic->_d7s_2display

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     525
                          _adc_logic
                          _mux_logic
                         _push_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                     _adc_isr_enable
 ---------------------------------------------------------------------------------
 (2) _adc_isr_enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _push_logic                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mux_logic                                            4     4      0     525
                                              4 BANK0      4     4      0
                       _d7s_2display
 ---------------------------------------------------------------------------------
 (2) _d7s_2display                                         6     2      4     488
                                              7 COMMON     2     2      0
                                              0 BANK0      4     0      4
                        _d7s_bin2hex
 ---------------------------------------------------------------------------------
 (3) _d7s_bin2hex                                          4     4      0      63
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_logic                                            0     0      0       0
                          _adc_start
                           _adc_wait
 ---------------------------------------------------------------------------------
 (2) _adc_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_logic
     _adc_start
     _adc_wait
   _mux_logic
     _d7s_2display
       _d7s_bin2hex
   _push_logic
   _setup
     _adc_config
     _adc_isr_enable

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb  4 19:25:52 2021

                     l90 00E7                       l75 019C                       l94 00D4  
                     l98 01C4                      l102 0196                      l103 018C  
                    l200 01D9                      l203 01E1                      l107 011A  
                    l215 01CF                      l209 01DD                      l242 014B  
                    l237 00B1                      l960 001C                      l970 0030  
                    l962 0020                      l980 0049                      l972 0035  
                    l964 0021                      l990 0062                      l982 004E  
                    l974 003A                      l966 0026                      l992 0067  
                    l984 0053                      l976 003F                      l968 002B  
                    l994 006C                      l986 0058                      l978 0044  
                    l996 0071                      l988 005D                      l998 0076  
                    u300 00C2                      u301 00C0                      u310 00C3  
                    u320 00CB                      u160 017F                      u321 00CA  
                    u161 017E                      u170 0186                      u171 0185  
                    u180 0192                      u181 0191                      u190 01B9  
                    u270 0122                      u191 01B8                      u271 0121  
                    u290 00BA                      u291 00B9                      u285 0136  
                    _isr 014C                      fsr0 0004                      indf 0000  
                   l1000 00B0                     l1020 01D4                     l1014 01C5  
                   l1102 01BA                     l1022 01D7                     l1030 00E8  
                   l1016 01DE                     l1024 01D8                     l1040 00F4  
                   l1032 00EC                     l1018 01D0                     l1050 00FB  
                   l1042 00F5                     l1034 00ED                     l1028 01DA  
                   l1060 0103                     l1052 00FC                     l1044 00F6  
                   l1036 00F1                     l1070 0109                     l1062 0104  
                   l1054 00FD                     l1046 00F9                     l1038 00F3  
                   l1080 0115                     l1072 010A                     l1064 0106  
                   l1056 0101                     l1048 00FA                     l1218 007E  
                   l1170 0122                     l1090 0181                     l1074 010B  
                   l1066 0107                     l1058 0102                     l1172 0133  
                   l1180 00BC                     l1092 0186                     l1084 0179  
                   l1076 010F                     l1068 0108                     l1182 00C6  
                   l1174 00B2                     l1094 0192                     l1078 0110  
                   l1190 0197                     l1168 011B                     l1184 00CB  
                   l1088 0180                     l1192 01A1                     l1098 01B3  
                   l1186 00D0                     l1178 00BB                     l1194 01A6  
                   l1188 00D6                     l1196 01AB             _push_counter 002B  
                   ?_isr 0070                     _IOCB 0096           ??_d7s_2display 0077  
                   i1l86 0172                     _TMR0 0001                     _main 0197  
                   btemp 007E                     start 000C            ??_d7s_bin2hex 0073  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  u24_20 0150                    u24_21 014F                    u25_20 015B  
                  u25_21 015A                    u26_20 016E                    u26_21 016D  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 00E8                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01B3                   ??_main 0079      __end_of_d7s_bin2hex 00B2  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1130 0150                   i1l1140 0160  
                 i1l1132 0151                   i1l1142 0164                   i1l1134 0157  
                 i1l1136 015B                   i1l1144 0168                   i1l1128 014C  
                 i1l1146 016E                   i1l1138 015C         __end_of_adc_wait 01D0  
                 _OSCCON 008F     __end_of_d7s_2display 014C  __size_of_adc_isr_enable 0004  
                 saved_w 007E  __end_of__initialization 0017       __size_of_adc_logic 0012  
     __size_of_adc_start 0004           __pcstackCOMMON 0070              _d7s_bin2hex 001B  
             _adc_config 01D0            __end_of_setup 011B          d7s_2display@sel 0023  
         _OPTION_REGbits 0081                  ??_setup 0073               __pbssBANK0 0028  
             __pmaintext 0197               __pintentry 0004                ?_adc_wait 0070  
      __end_of_adc_logic 01C5        __end_of_adc_start 01E2       __size_of_mux_logic 0036  
  __size_of_d7s_2display 0031              ?_adc_config 0070                  __ptext1 00E8  
                __ptext2 01DA                  __ptext3 01D0                  __ptext4 0179  
                __ptext5 00B2                  __ptext6 011B                  __ptext7 001B  
                __ptext8 01B3                  __ptext9 01C5               ??_adc_wait 0073  
         _adc_isr_enable 01DA             __size_of_isr 002D     end_of_initialization 0017  
           _d7s_2display 011B        __end_of_mux_logic 00E8   __end_of_adc_isr_enable 01DE  
    __size_of_adc_config 000A               _push_logic 0179               _push_timer 0079  
           ?_d7s_bin2hex 0070          ?_adc_isr_enable 0070      start_initialization 000F  
            __end_of_isr 0179         d7s_2display@data 0022         d7s_2display@port 0020  
      __size_of_adc_wait 000B              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020                _adc_logic 01B3                _adc_start 01DE  
            ?_push_logic 0070             ??_adc_config 0073               ?_adc_logic 0070  
             ?_adc_start 0070           __size_of_setup 0033       __end_of_adc_config 01DA  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
   __size_of_d7s_bin2hex 0097                _mux_logic 00B2                _mux_timer 002A  
    __size_of_push_logic 001E               _ADCON0bits 001F               _ADCON1bits 009F  
       ??_adc_isr_enable 0073               ?_mux_logic 0070                 _adc_data 0029  
               _adc_wait 01C5                 __ptext10 01DE                 __ptext11 014C  
            ??_adc_logic 0073              ??_adc_start 0073            __size_of_main 001C  
         d7s_bin2hex@hex 0076                 _mux_flag 0028           d7s_bin2hex@num 0075  
             _INTCONbits 000B             ??_push_logic 0073                 intlevel1 0000  
          _mux_logic$232 0026              ??_mux_logic 0024       __end_of_push_logic 0197  
          ?_d7s_2display 0020              _portb_flags 007A  
