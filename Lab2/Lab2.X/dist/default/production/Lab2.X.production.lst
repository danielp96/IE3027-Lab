

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb  4 15:45:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  001F                     _ADCON0	set	31
   289  0009                     _PORTE	set	9
   290  0005                     _PORTA	set	5
   291  001F                     _ADCON0bits	set	31
   292  001E                     _ADRESH	set	30
   293  000C                     _PIR1bits	set	12
   294  0001                     _TMR0	set	1
   295  0006                     _PORTB	set	6
   296  000B                     _INTCONbits	set	11
   297  0007                     _PORTC	set	7
   298  0008                     _PORTD	set	8
   299  008C                     _PIE1bits	set	140
   300  009F                     _ADCON1bits	set	159
   301  0081                     _OPTION_REGbits	set	129
   302  008F                     _OSCCON	set	143
   303  0096                     _IOCB	set	150
   304  0089                     _TRISE	set	137
   305  0088                     _TRISD	set	136
   306  0087                     _TRISC	set	135
   307  0086                     _TRISB	set	134
   308  0085                     _TRISA	set	133
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   322  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   323  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   324  0014                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  0014                     __end_of__initialization:
   328  0014  0183               	clrf	3
   329  0015  120A  118A  2892   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssCOMMON
   332  0070                     __pbssCOMMON:
   333  0070                     _adc_data:
   334  0070                     	ds	1
   335  0071                     _mux_timer:
   336  0071                     	ds	1
   337  0072                     _push_timer:
   338  0072                     	ds	1
   339  0073                     _portb_flags:
   340  0073                     	ds	1
   341  0074                     _push_counter:
   342  0074                     	ds	1
   343                           
   344                           	psect	cstackCOMMON
   345  0075                     __pcstackCOMMON:
   346  0075                     ?_setup:
   347  0075                     ?_push_logic:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0075                     ?_adc_logic:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0075                     ?_adc_wait:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0075                     ?_adc_start:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0075                     ?_adc_config:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0075                     ?_adc_isr_enable:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0075                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0075                     ?_isr:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0075                     ??_isr:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 1 bytes @ 0x0
   376  0075                     	ds	3
   377  0078                     ??_setup:
   378  0078                     ??_push_logic:	
   379                           ; 1 bytes @ 0x3
   380                           
   381  0078                     ??_adc_logic:	
   382                           ; 1 bytes @ 0x3
   383                           
   384  0078                     ??_adc_wait:	
   385                           ; 1 bytes @ 0x3
   386                           
   387  0078                     ??_adc_start:	
   388                           ; 1 bytes @ 0x3
   389                           
   390  0078                     ??_adc_config:	
   391                           ; 1 bytes @ 0x3
   392                           
   393  0078                     ??_adc_isr_enable:	
   394                           ; 1 bytes @ 0x3
   395                           
   396                           
   397                           ; 1 bytes @ 0x3
   398  0078                     	ds	1
   399  0079                     ??_main:
   400                           
   401                           	psect	maintext
   402  0092                     __pmaintext:	
   403                           ; 1 bytes @ 0x4
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 71 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : B00/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels required when called:    3
   429 ;; This function calls:
   430 ;;		_adc_logic
   431 ;;		_push_logic
   432 ;;		_setup
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0092                     _main:
   441  0092                     l801:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;main.c: 73:     setup();
   447  0092  120A  118A  2018  120A  118A  	fcall	_setup
   448  0097                     l69:	
   449                           ;main.c: 74:     while(1)
   450                           
   451                           
   452                           ;main.c: 75:     {;main.c: 79:         push_logic();
   453  0097  120A  118A  2078  120A  118A  	fcall	_push_logic
   454  009C                     l803:
   455                           
   456                           ;main.c: 80:         adc_logic();
   457  009C  120A  118A  20AB  120A  118A  	fcall	_adc_logic
   458                           
   459                           ;main.c: 82:         PORTD = push_counter;
   460  00A1  0874               	movf	_push_counter,w
   461  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   462  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   463  00A4  0088               	movwf	8	;volatile
   464                           
   465                           ;main.c: 85:         PORTC = adc_data;
   466  00A5  0870               	movf	_adc_data,w
   467  00A6  0087               	movwf	7	;volatile
   468  00A7  2897               	goto	l69
   469  00A8  120A  118A  280C   	ljmp	start
   470  00AB                     __end_of_main:
   471                           
   472                           	psect	text1
   473  0018                     __ptext1:	
   474 ;; *************** function _setup *****************
   475 ;; Defined at:
   476 ;;		line 147 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    2
   497 ;; This function calls:
   498 ;;		_adc_config
   499 ;;		_adc_isr_enable
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _setup
   507  0018                     _setup:
   508  0018                     l727:	
   509                           ;incstack = 0
   510                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;main.c: 149:     ANSEL = 0x01;
   514  0018  3001               	movlw	1
   515  0019  1683               	bsf	3,5	;RP0=1, select bank3
   516  001A  1703               	bsf	3,6	;RP1=1, select bank3
   517  001B  0088               	movwf	8	;volatile
   518  001C                     l729:
   519                           
   520                           ;main.c: 150:     ANSELH = 0x00;
   521  001C  0189               	clrf	9	;volatile
   522  001D                     l731:
   523                           
   524                           ;main.c: 152:     TRISA = 0x01;
   525  001D  3001               	movlw	1
   526  001E  1683               	bsf	3,5	;RP0=1, select bank1
   527  001F  1303               	bcf	3,6	;RP1=0, select bank1
   528  0020  0085               	movwf	5	;volatile
   529  0021                     l733:
   530                           
   531                           ;main.c: 153:     TRISB = 0x03;
   532  0021  3003               	movlw	3
   533  0022  0086               	movwf	6	;volatile
   534  0023                     l735:
   535                           
   536                           ;main.c: 154:     TRISC = 0x00;
   537  0023  0187               	clrf	7	;volatile
   538  0024                     l737:
   539                           
   540                           ;main.c: 155:     TRISD = 0x00;
   541  0024  0188               	clrf	8	;volatile
   542  0025                     l739:
   543                           
   544                           ;main.c: 156:     TRISE = 0x00;
   545  0025  0189               	clrf	9	;volatile
   546  0026                     l741:
   547                           
   548                           ;main.c: 158:     PORTA = 0;
   549  0026  1283               	bcf	3,5	;RP0=0, select bank0
   550  0027  1303               	bcf	3,6	;RP1=0, select bank0
   551  0028  0185               	clrf	5	;volatile
   552  0029                     l743:
   553                           
   554                           ;main.c: 159:     PORTB = 0;
   555  0029  0186               	clrf	6	;volatile
   556  002A                     l745:
   557                           
   558                           ;main.c: 160:     PORTC = 0;
   559  002A  0187               	clrf	7	;volatile
   560  002B                     l747:
   561                           
   562                           ;main.c: 161:     PORTD = 0;
   563  002B  0188               	clrf	8	;volatile
   564  002C                     l749:
   565                           
   566                           ;main.c: 162:     PORTE = 0;
   567  002C  0189               	clrf	9	;volatile
   568  002D                     l751:
   569                           
   570                           ;main.c: 165:     IOCB = 0x03;
   571  002D  3003               	movlw	3
   572  002E  1683               	bsf	3,5	;RP0=1, select bank1
   573  002F  1303               	bcf	3,6	;RP1=0, select bank1
   574  0030  0096               	movwf	22	;volatile
   575  0031                     l753:
   576                           
   577                           ;main.c: 166:     INTCONbits.RBIE = 1;
   578  0031  158B               	bsf	11,3	;volatile
   579  0032                     l755:
   580                           
   581                           ;main.c: 167:     INTCONbits.T0IE = 1;
   582  0032  168B               	bsf	11,5	;volatile
   583  0033                     l757:
   584                           
   585                           ;main.c: 168:     INTCONbits.GIE = 1;
   586  0033  178B               	bsf	11,7	;volatile
   587  0034                     l759:
   588                           
   589                           ;main.c: 170:     OSCCON = 0b01100001;
   590  0034  3061               	movlw	97
   591  0035  008F               	movwf	15	;volatile
   592  0036                     l761:
   593                           
   594                           ;main.c: 172:     OPTION_REGbits.T0CS = 0;
   595  0036  1281               	bcf	1,5	;volatile
   596  0037                     l763:
   597                           
   598                           ;main.c: 173:     OPTION_REGbits.PSA = 0;
   599  0037  1181               	bcf	1,3	;volatile
   600  0038                     l765:
   601                           
   602                           ;main.c: 174:     OPTION_REGbits.PS2 = 0;
   603  0038  1101               	bcf	1,2	;volatile
   604  0039                     l767:
   605                           
   606                           ;main.c: 175:     OPTION_REGbits.PS1 = 0;
   607  0039  1081               	bcf	1,1	;volatile
   608  003A                     l769:
   609                           
   610                           ;main.c: 176:     OPTION_REGbits.PS0 = 1;
   611  003A  1401               	bsf	1,0	;volatile
   612  003B                     l771:
   613                           
   614                           ;main.c: 178:     TMR0 = 6;;
   615  003B  3006               	movlw	6
   616  003C  1283               	bcf	3,5	;RP0=0, select bank0
   617  003D  1303               	bcf	3,6	;RP1=0, select bank0
   618  003E  0081               	movwf	1	;volatile
   619  003F                     l773:
   620                           
   621                           ;main.c: 180:     INTCONbits.T0IF = 0;
   622  003F  110B               	bcf	11,2	;volatile
   623  0040                     l775:
   624                           
   625                           ;main.c: 182:     adc_config();
   626  0040  120A  118A  20C8  120A  118A  	fcall	_adc_config
   627  0045                     l777:
   628                           
   629                           ;main.c: 183:     adc_isr_enable();
   630  0045  120A  118A  20D2  120A  118A  	fcall	_adc_isr_enable
   631  004A                     l93:
   632  004A  0008               	return
   633  004B                     __end_of_setup:
   634                           
   635                           	psect	text2
   636  00D2                     __ptext2:	
   637 ;; *************** function _adc_isr_enable *****************
   638 ;; Defined at:
   639 ;;		line 37 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		None
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_setup
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _adc_isr_enable
   669  00D2                     _adc_isr_enable:
   670  00D2                     l725:	
   671                           ;incstack = 0
   672                           ; Regs used in _adc_isr_enable: []
   673                           
   674                           
   675                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 39:     PIE1bits.ADIE 
      +                          = 1;
   676  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   677  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   678  00D4  170C               	bsf	12,6	;volatile
   679  00D5                     l195:
   680  00D5  0008               	return
   681  00D6                     __end_of_adc_isr_enable:
   682                           
   683                           	psect	text3
   684  00C8                     __ptext3:	
   685 ;; *************** function _adc_config *****************
   686 ;; Defined at:
   687 ;;		line 11 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_setup
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _adc_config
   717  00C8                     _adc_config:
   718  00C8                     l715:	
   719                           ;incstack = 0
   720                           ; Regs used in _adc_config: [wreg]
   721                           
   722                           
   723                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 13:     ADCON0 = 0b100
      +                          00001;
   724  00C8  3081               	movlw	129
   725  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   726  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   727  00CB  009F               	movwf	31	;volatile
   728  00CC                     l717:
   729                           
   730                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 15:     ADCON1bits.ADF
      +                          M = 0;
   731  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   732  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   733  00CE  139F               	bcf	31,7	;volatile
   734  00CF                     l719:
   735                           
   736                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 16:     ADCON1bits.VCF
      +                          G1 = 0;
   737  00CF  129F               	bcf	31,5	;volatile
   738  00D0                     l721:
   739                           
   740                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 17:     ADCON1bits.VCF
      +                          G0 = 0;
   741  00D0  121F               	bcf	31,4	;volatile
   742  00D1                     l186:
   743  00D1  0008               	return
   744  00D2                     __end_of_adc_config:
   745                           
   746                           	psect	text4
   747  0078                     __ptext4:	
   748 ;; *************** function _push_logic *****************
   749 ;; Defined at:
   750 ;;		line 122 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0
   766 ;;      Temps:          1       0       0       0       0
   767 ;;      Totals:         1       0       0       0       0
   768 ;;Total ram usage:        1 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; Hardware stack levels required when called:    1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _push_logic
   780  0078                     _push_logic:
   781  0078                     l781:	
   782                           ;incstack = 0
   783                           ; Regs used in _push_logic: [wreg+status,2+status,0]
   784                           
   785                           
   786                           ;main.c: 124:     if (200 != push_timer)
   787  0078  30C8               	movlw	200
   788  0079  0672               	xorwf	_push_timer,w
   789  007A  1903               	btfsc	3,2
   790  007B  287D               	goto	u11
   791  007C  287E               	goto	u10
   792  007D                     u11:
   793  007D  287F               	goto	l785
   794  007E                     u10:
   795  007E  2891               	goto	l88
   796  007F                     l785:
   797                           
   798                           ;main.c: 129:     push_timer = 0;
   799  007F  01F2               	clrf	_push_timer
   800  0080                     l787:
   801                           
   802                           ;main.c: 131:     if (0x01 == portb_flags)
   803  0080  0373               	decf	_portb_flags,w
   804  0081  1D03               	btfss	3,2
   805  0082  2884               	goto	u21
   806  0083  2885               	goto	u20
   807  0084                     u21:
   808  0084  2889               	goto	l89
   809  0085                     u20:
   810  0085                     l789:
   811                           
   812                           ;main.c: 132:     {;main.c: 133:         push_counter++;
   813  0085  3001               	movlw	1
   814  0086  00F8               	movwf	??_push_logic
   815  0087  0878               	movf	??_push_logic,w
   816  0088  07F4               	addwf	_push_counter,f
   817  0089                     l89:	
   818                           ;main.c: 134:     }
   819                           
   820                           
   821                           ;main.c: 136:     if (0x02 == portb_flags)
   822  0089  3002               	movlw	2
   823  008A  0673               	xorwf	_portb_flags,w
   824  008B  1D03               	btfss	3,2
   825  008C  288E               	goto	u31
   826  008D  288F               	goto	u30
   827  008E                     u31:
   828  008E  2891               	goto	l88
   829  008F                     u30:
   830  008F                     l791:
   831                           
   832                           ;main.c: 137:     {;main.c: 138:         push_counter--;
   833  008F  3001               	movlw	1
   834  0090  02F4               	subwf	_push_counter,f
   835  0091                     l88:
   836  0091  0008               	return
   837  0092                     __end_of_push_logic:
   838                           
   839                           	psect	text5
   840  00AB                     __ptext5:	
   841 ;; *************** function _adc_logic *****************
   842 ;; Defined at:
   843 ;;		line 111 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		status,2, status,0, pclath, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0
   860 ;;      Totals:         0       0       0       0       0
   861 ;;Total ram usage:        0 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    2
   864 ;; This function calls:
   865 ;;		_adc_start
   866 ;;		_adc_wait
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _adc_logic
   874  00AB                     _adc_logic:
   875  00AB                     l795:	
   876                           ;incstack = 0
   877                           ; Regs used in _adc_logic: [status,2+status,0+pclath+cstack]
   878                           
   879                           
   880                           ;main.c: 113:     if (ADCON0bits.GO)
   881  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   882  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   883  00AD  1C9F               	btfss	31,1	;volatile
   884  00AE  28B0               	goto	u41
   885  00AF  28B1               	goto	u40
   886  00B0                     u41:
   887  00B0  28B2               	goto	l799
   888  00B1                     u40:
   889  00B1  28BC               	goto	l84
   890  00B2                     l799:
   891                           
   892                           ;main.c: 118:     adc_wait();
   893  00B2  120A  118A  20BD  120A  118A  	fcall	_adc_wait
   894                           
   895                           ;main.c: 119:     adc_start();
   896  00B7  120A  118A  20D6  120A  118A  	fcall	_adc_start
   897  00BC                     l84:
   898  00BC  0008               	return
   899  00BD                     __end_of_adc_logic:
   900                           
   901                           	psect	text6
   902  00BD                     __ptext6:	
   903 ;; *************** function _adc_wait *****************
   904 ;; Defined at:
   905 ;;		line 47 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		None
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_adc_logic
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _adc_wait
   935  00BD                     _adc_wait:
   936  00BD                     l711:	
   937                           ;incstack = 0
   938                           ; Regs used in _adc_wait: []
   939                           
   940  00BD  0000               	nop	;# 
   941  00BE  0000               	nop	;# 
   942  00BF  0000               	nop	;# 
   943  00C0  0000               	nop	;# 
   944  00C1  0000               	nop	;# 
   945  00C2  0000               	nop	;# 
   946  00C3  0000               	nop	;# 
   947  00C4  0000               	nop	;# 
   948  00C5  0000               	nop	;# 
   949  00C6  0000               	nop	;# 
   950  00C7                     l201:	
   951                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 60:     return;
   952                           
   953  00C7  0008               	return
   954  00C8                     __end_of_adc_wait:
   955                           
   956                           	psect	text7
   957  00D6                     __ptext7:	
   958 ;; *************** function _adc_start *****************
   959 ;; Defined at:
   960 ;;		line 22 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		None
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_adc_logic
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _adc_start
   990  00D6                     _adc_start:
   991  00D6                     l713:	
   992                           ;incstack = 0
   993                           ; Regs used in _adc_start: []
   994                           
   995                           
   996                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 24:     ADCON0bits.GO 
      +                          = 1;
   997  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   998  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   999  00D8  149F               	bsf	31,1	;volatile
  1000  00D9                     l189:	
  1001                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 26:     return;
  1002                           
  1003  00D9  0008               	return
  1004  00DA                     __end_of_adc_start:
  1005                           
  1006                           	psect	text8
  1007  004B                     __ptext8:	
  1008 ;; *************** function _isr *****************
  1009 ;; Defined at:
  1010 ;;		line 89 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0
  1026 ;;      Temps:          3       0       0       0       0
  1027 ;;      Totals:         3       0       0       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		Interrupt level 1
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           
  1038                           ;psect for function _isr
  1039  004B                     _isr:
  1040  004B                     i1l805:
  1041                           
  1042                           ;main.c: 91:     if (INTCONbits.RBIF)
  1043  004B  1C0B               	btfss	11,0	;volatile
  1044  004C  284E               	goto	u5_21
  1045  004D  284F               	goto	u5_20
  1046  004E                     u5_21:
  1047  004E  2856               	goto	i1l811
  1048  004F                     u5_20:
  1049  004F                     i1l807:
  1050                           
  1051                           ;main.c: 92:     {;main.c: 93:         INTCONbits.RBIF = 0;
  1052  004F  100B               	bcf	11,0	;volatile
  1053  0050                     i1l809:
  1054                           
  1055                           ;main.c: 94:         portb_flags = PORTB;
  1056  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0052  0806               	movf	6,w	;volatile
  1059  0053  00F5               	movwf	??_isr
  1060  0054  0875               	movf	??_isr,w
  1061  0055  00F3               	movwf	_portb_flags
  1062  0056                     i1l811:
  1063                           
  1064                           ;main.c: 97:     if (INTCONbits.T0IF)
  1065  0056  1D0B               	btfss	11,2	;volatile
  1066  0057  2859               	goto	u6_21
  1067  0058  285A               	goto	u6_20
  1068  0059                     u6_21:
  1069  0059  2867               	goto	i1l821
  1070  005A                     u6_20:
  1071  005A                     i1l813:
  1072                           
  1073                           ;main.c: 98:     {;main.c: 99:         INTCONbits.T0IF = 0;
  1074  005A  110B               	bcf	11,2	;volatile
  1075  005B                     i1l815:
  1076                           
  1077                           ;main.c: 100:         TMR0 = 6;;
  1078  005B  3006               	movlw	6
  1079  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1080  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1081  005E  0081               	movwf	1	;volatile
  1082  005F                     i1l817:
  1083                           
  1084                           ;main.c: 101:         push_timer++;
  1085  005F  3001               	movlw	1
  1086  0060  00F5               	movwf	??_isr
  1087  0061  0875               	movf	??_isr,w
  1088  0062  07F2               	addwf	_push_timer,f
  1089  0063                     i1l819:
  1090                           
  1091                           ;main.c: 102:         mux_timer++;
  1092  0063  3001               	movlw	1
  1093  0064  00F5               	movwf	??_isr
  1094  0065  0875               	movf	??_isr,w
  1095  0066  07F1               	addwf	_mux_timer,f
  1096  0067                     i1l821:
  1097                           
  1098                           ;main.c: 105:     if (PIR1bits.ADIF)
  1099  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0069  1F0C               	btfss	12,6	;volatile
  1102  006A  286C               	goto	u7_21
  1103  006B  286D               	goto	u7_20
  1104  006C                     u7_21:
  1105  006C  2871               	goto	i1l80
  1106  006D                     u7_20:
  1107  006D                     i1l823:
  1108                           
  1109                           ;main.c: 106:     {;main.c: 107:         adc_data = ADRESH;
  1110  006D  081E               	movf	30,w	;volatile
  1111  006E  00F5               	movwf	??_isr
  1112  006F  0875               	movf	??_isr,w
  1113  0070  00F0               	movwf	_adc_data
  1114  0071                     i1l80:
  1115  0071  0877               	movf	??_isr+2,w
  1116  0072  008A               	movwf	10
  1117  0073  0E76               	swapf	??_isr+1,w
  1118  0074  0083               	movwf	3
  1119  0075  0EFE               	swapf	btemp,f
  1120  0076  0E7E               	swapf	btemp,w
  1121  0077  0009               	retfie
  1122  0078                     __end_of_isr:
  1123  007E                     btemp	set	126	;btemp
  1124  007E                     wtemp0	set	126
  1125                           
  1126                           	psect	intentry
  1127  0004                     __pintentry:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _isr: [wreg+status,2+status,0]
  1130                           
  1131  0004                     interrupt_function:
  1132  007E                     saved_w	set	btemp
  1133  0004  00FE               	movwf	btemp
  1134  0005  0E03               	swapf	3,w
  1135  0006  00F6               	movwf	??_isr+1
  1136  0007  080A               	movf	10,w
  1137  0008  00F7               	movwf	??_isr+2
  1138  0009  120A  118A  284B   	ljmp	_isr
  1139                           
  1140                           	psect	config
  1141                           
  1142                           ;Config register CONFIG1 @ 0x2007
  1143                           ;	Oscillator Selection bits
  1144                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1145                           ;	Watchdog Timer Enable bit
  1146                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1147                           ;	Power-up Timer Enable bit
  1148                           ;	PWRTE = OFF, PWRT disabled
  1149                           ;	RE3/MCLR pin function select bit
  1150                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1151                           ;	Code Protection bit
  1152                           ;	CP = OFF, Program memory code protection is disabled
  1153                           ;	Data Code Protection bit
  1154                           ;	CPD = OFF, Data memory code protection is disabled
  1155                           ;	Brown Out Reset Selection bits
  1156                           ;	BOREN = OFF, BOR disabled
  1157                           ;	Internal External Switchover bit
  1158                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1159                           ;	Fail-Safe Clock Monitor Enabled bit
  1160                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1161                           ;	Low Voltage Programming Enable bit
  1162                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1163                           ;	In-Circuit Debugger Mode bit
  1164                           ;	DEBUG = 0x1, unprogrammed default
  1165  2007                     	org	8199
  1166  2007  20D4               	dw	8404
  1167                           
  1168                           ;Config register CONFIG2 @ 0x2008
  1169                           ;	Brown-out Reset Selection bit
  1170                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1171                           ;	Flash Program Memory Self Write Enable bits
  1172                           ;	WRT = OFF, Write protection off
  1173  2008                     	org	8200
  1174  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_push_logic

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _adc_logic
                         _push_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                     _adc_isr_enable
 ---------------------------------------------------------------------------------
 (2) _adc_isr_enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _push_logic                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_logic                                            0     0      0       0
                          _adc_start
                           _adc_wait
 ---------------------------------------------------------------------------------
 (2) _adc_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_logic
     _adc_start
     _adc_wait
   _push_logic
   _setup
     _adc_config
     _adc_isr_enable

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb  4 15:45:32 2021

                     l84 00BC                       l93 004A                       l69 0097  
                     l88 0091                       l89 0089                       u10 007E  
                     u11 007D                       u20 0085                       u21 0084  
                     u30 008F                       u31 008E                       u40 00B1  
                     u41 00B0                      l201 00C7                      l186 00D1  
                    l195 00D5                      l189 00D9                      l711 00BD  
                    l713 00D6                      l721 00D0                      l801 0092  
                    l715 00C8                      l731 001D                      l803 009C  
                    l717 00CC                      l725 00D2                      l741 0026  
                    l733 0021                      l719 00CF                      l751 002D  
                    l743 0029                      l735 0023                      l727 0018  
                    l761 0036                      l753 0031                      l745 002A  
                    l737 0024                      l729 001C                      l771 003B  
                    l763 0037                      l755 0032                      l747 002B  
                    l739 0025                      l781 0078                      l773 003F  
                    l765 0038                      l757 0033                      l749 002C  
                    l791 008F                      l775 0040                      l767 0039  
                    l759 0034                      l785 007F                      l777 0045  
                    l769 003A                      l795 00AB                      l787 0080  
                    l789 0085                      l799 00B2                      _isr 004B  
           _push_counter 0074                     ?_isr 0075                     _IOCB 0096  
                   i1l80 0071                     _TMR0 0001                     u5_20 004F  
                   u5_21 004E                     u6_20 005A                     u6_21 0059  
                   u7_20 006D                     u7_21 006C                     _main 0092  
                   btemp 007E                     start 000C                    ??_isr 0075  
                  ?_main 0075                    _ANSEL 0188                    i1l811 0056  
                  i1l813 005A                    i1l821 0067                    i1l805 004B  
                  i1l823 006D                    i1l815 005B                    i1l807 004F  
                  i1l817 005F                    i1l809 0050                    i1l819 0063  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0018                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00AB                   ??_main 0079                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0075                   _ANSELH 0189  
       __end_of_adc_wait 00C8                   _OSCCON 008F  __size_of_adc_isr_enable 0004  
                 saved_w 007E  __end_of__initialization 0014       __size_of_adc_logic 0012  
     __size_of_adc_start 0004           __pcstackCOMMON 0075               _adc_config 00C8  
          __end_of_setup 004B           _OPTION_REGbits 0081                  ??_setup 0078  
             __pmaintext 0092               __pintentry 0004                ?_adc_wait 0075  
      __end_of_adc_logic 00BD        __end_of_adc_start 00DA              ?_adc_config 0075  
                __ptext1 0018                  __ptext2 00D2                  __ptext3 00C8  
                __ptext4 0078                  __ptext5 00AB                  __ptext6 00BD  
                __ptext7 00D6                  __ptext8 004B               ??_adc_wait 0078  
         _adc_isr_enable 00D2             __size_of_isr 002D     end_of_initialization 0014  
 __end_of_adc_isr_enable 00D6      __size_of_adc_config 000A               _push_logic 0078  
             _push_timer 0072          ?_adc_isr_enable 0075      start_initialization 000F  
            __end_of_isr 0078        __size_of_adc_wait 000B              __pbssCOMMON 0070  
              ___latbits 0002                _adc_logic 00AB                _adc_start 00D6  
            ?_push_logic 0075             ??_adc_config 0078               ?_adc_logic 0075  
             ?_adc_start 0075           __size_of_setup 0033       __end_of_adc_config 00D2  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
              _mux_timer 0071      __size_of_push_logic 001A               _ADCON0bits 001F  
             _ADCON1bits 009F         ??_adc_isr_enable 0078                 _adc_data 0070  
               _adc_wait 00BD              ??_adc_logic 0078              ??_adc_start 0078  
          __size_of_main 0019               _INTCONbits 000B             ??_push_logic 0078  
               intlevel1 0000       __end_of_push_logic 0092              _portb_flags 0073  
