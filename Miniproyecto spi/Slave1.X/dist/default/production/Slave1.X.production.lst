

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 21:48:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0014                     _SSPCON	set	20
   367  001F                     _ADCON0	set	31
   368  000B                     _INTCONbits	set	11
   369  0009                     _PORTE	set	9
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  0005                     _PORTA	set	5
   373  001F                     _ADCON0bits	set	31
   374  0013                     _SSPBUF	set	19
   375  001E                     _ADRESH	set	30
   376  000C                     _PIR1bits	set	12
   377  0006                     _PORTB	set	6
   378  0094                     _SSPSTAT	set	148
   379  008C                     _PIE1bits	set	140
   380  009F                     _ADCON1bits	set	159
   381  0081                     _OPTION_REGbits	set	129
   382  008F                     _OSCCON	set	143
   383  0096                     _IOCB	set	150
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0011                     __end_of__initialization:
   407  0011  0183               	clrf	3
   408  0012  120A  118A  287F   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0077                     __pbssCOMMON:
   412  0077                     _trash:
   413  0077                     	ds	1
   414  0078                     _adc_data:
   415  0078                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_setup:
   420  0070                     ?_adc_logic:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_adc_wait:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_adc_start:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_adc_config:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_adc_isr_enable:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_isr:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_isr:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	3
   447  0073                     ??_adc_logic:
   448  0073                     ??_adc_wait:	
   449                           ; 1 bytes @ 0x3
   450                           
   451  0073                     ??_adc_start:	
   452                           ; 1 bytes @ 0x3
   453                           
   454  0073                     ??_adc_config:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     ??_adc_isr_enable:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     ?_spi_init:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0073                     spi_init@sDataSample:	
   464                           ; 1 bytes @ 0x3
   465                           
   466                           
   467                           ; 1 bytes @ 0x3
   468  0073                     	ds	1
   469  0074                     spi_init@sClockIdle:
   470                           
   471                           ; 1 bytes @ 0x4
   472  0074                     	ds	1
   473  0075                     spi_init@sTransmitEdge:
   474                           
   475                           ; 1 bytes @ 0x5
   476  0075                     	ds	1
   477  0076                     ??_spi_init:
   478  0076                     spi_init@sType:	
   479                           ; 1 bytes @ 0x6
   480                           
   481                           
   482                           ; 1 bytes @ 0x6
   483  0076                     	ds	1
   484  0077                     ??_setup:
   485  0077                     ??_main:	
   486                           ; 1 bytes @ 0x7
   487                           
   488                           
   489                           	psect	maintext
   490  007F                     __pmaintext:	
   491                           ; 1 bytes @ 0x7
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 67 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels required when called:    3
   517 ;; This function calls:
   518 ;;		_adc_logic
   519 ;;		_setup
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  007F                     _main:
   528  007F                     l896:	
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;main.c: 69:     setup();
   534  007F  120A  118A  2015  120A  118A  	fcall	_setup
   535  0084                     l898:
   536                           
   537                           ;main.c: 71:     {;main.c: 72:         adc_logic();
   538  0084  120A  118A  2091  120A  118A  	fcall	_adc_logic
   539                           
   540                           ;main.c: 74:         PORTB = adc_data;
   541  0089  0878               	movf	_adc_data,w
   542  008A  1283               	bcf	3,5	;RP0=0, select bank0
   543  008B  1303               	bcf	3,6	;RP1=0, select bank0
   544  008C  0086               	movwf	6	;volatile
   545  008D  2884               	goto	l898
   546  008E  120A  118A  280C   	ljmp	start
   547  0091                     __end_of_main:
   548                           
   549                           	psect	text1
   550  0015                     __ptext1:	
   551 ;; *************** function _setup *****************
   552 ;; Defined at:
   553 ;;		line 110 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    2
   574 ;; This function calls:
   575 ;;		_adc_config
   576 ;;		_adc_isr_enable
   577 ;;		_spi_init
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _setup
   585  0015                     _setup:
   586  0015                     l844:	
   587                           ;incstack = 0
   588                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   589                           
   590                           
   591                           ;main.c: 112:     ANSEL = 0x01;
   592  0015  3001               	movlw	1
   593  0016  1683               	bsf	3,5	;RP0=1, select bank3
   594  0017  1703               	bsf	3,6	;RP1=1, select bank3
   595  0018  0088               	movwf	8	;volatile
   596  0019                     l846:
   597                           
   598                           ;main.c: 113:     ANSELH = 0x00;
   599  0019  0189               	clrf	9	;volatile
   600  001A                     l848:
   601                           
   602                           ;main.c: 115:     TRISA = 0x21;
   603  001A  3021               	movlw	33
   604  001B  1683               	bsf	3,5	;RP0=1, select bank1
   605  001C  1303               	bcf	3,6	;RP1=0, select bank1
   606  001D  0085               	movwf	5	;volatile
   607                           
   608                           ;main.c: 116:     TRISB = 0x00;
   609  001E  0186               	clrf	6	;volatile
   610  001F                     l850:
   611                           
   612                           ;main.c: 117:     TRISC = 0x18;
   613  001F  3018               	movlw	24
   614  0020  0087               	movwf	7	;volatile
   615  0021                     l852:
   616                           
   617                           ;main.c: 118:     TRISD = 0x00;
   618  0021  0188               	clrf	8	;volatile
   619  0022                     l854:
   620                           
   621                           ;main.c: 119:     TRISE = 0x00;
   622  0022  0189               	clrf	9	;volatile
   623  0023                     l856:
   624                           
   625                           ;main.c: 121:     PORTA = 0;
   626  0023  1283               	bcf	3,5	;RP0=0, select bank0
   627  0024  1303               	bcf	3,6	;RP1=0, select bank0
   628  0025  0185               	clrf	5	;volatile
   629  0026                     l858:
   630                           
   631                           ;main.c: 122:     PORTB = 0;
   632  0026  0186               	clrf	6	;volatile
   633  0027                     l860:
   634                           
   635                           ;main.c: 123:     PORTC = 0;
   636  0027  0187               	clrf	7	;volatile
   637  0028                     l862:
   638                           
   639                           ;main.c: 124:     PORTD = 0;
   640  0028  0188               	clrf	8	;volatile
   641  0029                     l864:
   642                           
   643                           ;main.c: 125:     PORTE = 0;
   644  0029  0189               	clrf	9	;volatile
   645  002A                     l866:
   646                           
   647                           ;main.c: 128:     IOCB = 0x00;
   648  002A  1683               	bsf	3,5	;RP0=1, select bank1
   649  002B  1303               	bcf	3,6	;RP1=0, select bank1
   650  002C  0196               	clrf	22	;volatile
   651  002D                     l868:
   652                           
   653                           ;main.c: 129:     INTCONbits.RBIE = 0;
   654  002D  118B               	bcf	11,3	;volatile
   655  002E                     l870:
   656                           
   657                           ;main.c: 130:     INTCONbits.T0IE = 0;
   658  002E  128B               	bcf	11,5	;volatile
   659  002F                     l872:
   660                           
   661                           ;main.c: 131:     INTCONbits.PEIE = 1;
   662  002F  170B               	bsf	11,6	;volatile
   663  0030                     l874:
   664                           
   665                           ;main.c: 132:     INTCONbits.GIE = 1;
   666  0030  178B               	bsf	11,7	;volatile
   667  0031                     l876:
   668                           
   669                           ;main.c: 134:     OSCCON = 0b01100001;
   670  0031  3061               	movlw	97
   671  0032  008F               	movwf	15	;volatile
   672  0033                     l878:
   673                           
   674                           ;main.c: 136:     OPTION_REGbits.T0CS = 0;
   675  0033  1281               	bcf	1,5	;volatile
   676  0034                     l880:
   677                           
   678                           ;main.c: 137:     OPTION_REGbits.PSA = 0;
   679  0034  1181               	bcf	1,3	;volatile
   680  0035                     l882:
   681                           
   682                           ;main.c: 138:     OPTION_REGbits.PS2 = 0;
   683  0035  1101               	bcf	1,2	;volatile
   684  0036                     l884:
   685                           
   686                           ;main.c: 139:     OPTION_REGbits.PS1 = 0;
   687  0036  1081               	bcf	1,1	;volatile
   688  0037                     l886:
   689                           
   690                           ;main.c: 140:     OPTION_REGbits.PS0 = 1;
   691  0037  1401               	bsf	1,0	;volatile
   692  0038                     l888:
   693                           
   694                           ;main.c: 142:     adc_config();
   695  0038  120A  118A  20AE  120A  118A  	fcall	_adc_config
   696  003D                     l890:
   697                           
   698                           ;main.c: 143:     adc_isr_enable();
   699  003D  120A  118A  20B8  120A  118A  	fcall	_adc_isr_enable
   700  0042                     l892:
   701                           
   702                           ;main.c: 145:     spi_init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   703  0042  01F3               	clrf	spi_init@sDataSample
   704  0043  01F4               	clrf	spi_init@sClockIdle
   705  0044  01F5               	clrf	spi_init@sTransmitEdge
   706  0045  3024               	movlw	36
   707  0046  120A  118A  2069  120A  118A  	fcall	_spi_init
   708  004B                     l80:
   709  004B  0008               	return
   710  004C                     __end_of_setup:
   711                           
   712                           	psect	text2
   713  0069                     __ptext2:	
   714 ;; *************** function _spi_init *****************
   715 ;; Defined at:
   716 ;;		line 12 in file "spi.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  sType           1    wreg     enum E1264
   719 ;;  sDataSample     1    3[COMMON] enum E1272
   720 ;;  sClockIdle      1    4[COMMON] enum E1276
   721 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  sType           1    6[COMMON] enum E1264
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         3       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         4       0       0       0       0
   737 ;;Total ram usage:        4 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_setup
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _spi_init
   749  0069                     _spi_init:
   750                           
   751                           ;incstack = 0
   752                           ; Regs used in _spi_init: [wreg+status,2+status,0]
   753                           ;spi_init@sType stored from wreg
   754  0069  00F6               	movwf	spi_init@sType
   755  006A                     l834:
   756                           
   757                           ;spi.c: 12: void spi_init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   758  006A  1683               	bsf	3,5	;RP0=1, select bank1
   759  006B  1303               	bcf	3,6	;RP1=0, select bank1
   760  006C  1287               	bcf	7,5	;volatile
   761                           
   762                           ;spi.c: 15:     if(sType & 0b00000100)
   763  006D  1D76               	btfss	spi_init@sType,2
   764  006E  2870               	goto	u51
   765  006F  2871               	goto	u50
   766  0070                     u51:
   767  0070  2875               	goto	l840
   768  0071                     u50:
   769  0071                     l836:
   770                           
   771                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   772  0071  0875               	movf	spi_init@sTransmitEdge,w
   773  0072  0094               	movwf	20	;volatile
   774  0073                     l838:
   775                           
   776                           ;spi.c: 18:         TRISC3 = 1;
   777  0073  1587               	bsf	7,3	;volatile
   778                           
   779                           ;spi.c: 19:     }
   780  0074  2879               	goto	l206
   781  0075                     l840:
   782                           
   783                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   784  0075  0873               	movf	spi_init@sDataSample,w
   785  0076  0475               	iorwf	spi_init@sTransmitEdge,w
   786  0077  0094               	movwf	20	;volatile
   787  0078                     l842:
   788                           
   789                           ;spi.c: 23:         TRISC3 = 0;
   790  0078  1187               	bcf	7,3	;volatile
   791  0079                     l206:	
   792                           ;spi.c: 24:     }
   793                           
   794                           
   795                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   796  0079  0876               	movf	spi_init@sType,w
   797  007A  0474               	iorwf	spi_init@sClockIdle,w
   798  007B  1283               	bcf	3,5	;RP0=0, select bank0
   799  007C  1303               	bcf	3,6	;RP1=0, select bank0
   800  007D  0094               	movwf	20	;volatile
   801  007E                     l207:
   802  007E  0008               	return
   803  007F                     __end_of_spi_init:
   804                           
   805                           	psect	text3
   806  00B8                     __ptext3:	
   807 ;; *************** function _adc_isr_enable *****************
   808 ;; Defined at:
   809 ;;		line 40 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		None
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_setup
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _adc_isr_enable
   839  00B8                     _adc_isr_enable:
   840  00B8                     l748:	
   841                           ;incstack = 0
   842                           ; Regs used in _adc_isr_enable: []
   843                           
   844                           
   845                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 42:     INTCONbits.PEI
      +                          E = 1;
   846  00B8  170B               	bsf	11,6	;volatile
   847                           
   848                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 43:     PIE1bits.ADIE 
      +                          = 1;
   849  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   850  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   851  00BB  170C               	bsf	12,6	;volatile
   852  00BC                     l184:
   853  00BC  0008               	return
   854  00BD                     __end_of_adc_isr_enable:
   855                           
   856                           	psect	text4
   857  00AE                     __ptext4:	
   858 ;; *************** function _adc_config *****************
   859 ;; Defined at:
   860 ;;		line 11 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_setup
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _adc_config
   890  00AE                     _adc_config:
   891  00AE                     l738:	
   892                           ;incstack = 0
   893                           ; Regs used in _adc_config: [wreg]
   894                           
   895                           
   896                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 13:     ADCON0 = 0b100
      +                          00001;
   897  00AE  3081               	movlw	129
   898  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   899  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   900  00B1  009F               	movwf	31	;volatile
   901  00B2                     l740:
   902                           
   903                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 15:     ADCON1bits.ADF
      +                          M = 0;
   904  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   905  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   906  00B4  139F               	bcf	31,7	;volatile
   907  00B5                     l742:
   908                           
   909                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 16:     ADCON1bits.VCF
      +                          G1 = 0;
   910  00B5  129F               	bcf	31,5	;volatile
   911  00B6                     l744:
   912                           
   913                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 17:     ADCON1bits.VCF
      +                          G0 = 0;
   914  00B6  121F               	bcf	31,4	;volatile
   915  00B7                     l175:
   916  00B7  0008               	return
   917  00B8                     __end_of_adc_config:
   918                           
   919                           	psect	text5
   920  0091                     __ptext5:	
   921 ;; *************** function _adc_logic *****************
   922 ;; Defined at:
   923 ;;		line 96 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		_adc_start
   946 ;;		_adc_wait
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _adc_logic
   954  0091                     _adc_logic:
   955  0091                     l812:	
   956                           ;incstack = 0
   957                           ; Regs used in _adc_logic: [status,2+status,0+pclath+cstack]
   958                           
   959                           
   960                           ;main.c: 98:     if (ADCON0bits.GO)
   961  0091  1283               	bcf	3,5	;RP0=0, select bank0
   962  0092  1303               	bcf	3,6	;RP1=0, select bank0
   963  0093  1C9F               	btfss	31,1	;volatile
   964  0094  2896               	goto	u21
   965  0095  2897               	goto	u20
   966  0096                     u21:
   967  0096  2898               	goto	l816
   968  0097                     u20:
   969  0097  28A2               	goto	l77
   970  0098                     l816:
   971                           
   972                           ;main.c: 103:     adc_wait();
   973  0098  120A  118A  20A3  120A  118A  	fcall	_adc_wait
   974                           
   975                           ;main.c: 104:     adc_start();
   976  009D  120A  118A  20BD  120A  118A  	fcall	_adc_start
   977  00A2                     l77:
   978  00A2  0008               	return
   979  00A3                     __end_of_adc_logic:
   980                           
   981                           	psect	text6
   982  00A3                     __ptext6:	
   983 ;; *************** function _adc_wait *****************
   984 ;; Defined at:
   985 ;;		line 51 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		None
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_adc_logic
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _adc_wait
  1015  00A3                     _adc_wait:
  1016  00A3                     l734:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _adc_wait: []
  1019                           
  1020  00A3  0000               	nop	;# 
  1021  00A4  0000               	nop	;# 
  1022  00A5  0000               	nop	;# 
  1023  00A6  0000               	nop	;# 
  1024  00A7  0000               	nop	;# 
  1025  00A8  0000               	nop	;# 
  1026  00A9  0000               	nop	;# 
  1027  00AA  0000               	nop	;# 
  1028  00AB  0000               	nop	;# 
  1029  00AC  0000               	nop	;# 
  1030  00AD                     l190:	
  1031                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 64:     return;
  1032                           
  1033  00AD  0008               	return
  1034  00AE                     __end_of_adc_wait:
  1035                           
  1036                           	psect	text7
  1037  00BD                     __ptext7:	
  1038 ;; *************** function _adc_start *****************
  1039 ;; Defined at:
  1040 ;;		line 22 in file "/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		None
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_adc_logic
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _adc_start
  1070  00BD                     _adc_start:
  1071  00BD                     l736:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _adc_start: []
  1074                           
  1075                           
  1076                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 24:     ADCON0bits.GO 
      +                          = 1;
  1077  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1078  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1079  00BF  149F               	bsf	31,1	;volatile
  1080  00C0                     l178:	
  1081                           ;/home/daniel/UVG/Ciclo7/Digital 2/Laboratorios/libs/adc.X/adc.c: 26:     return;
  1082                           
  1083  00C0  0008               	return
  1084  00C1                     __end_of_adc_start:
  1085                           
  1086                           	psect	text8
  1087  004C                     __ptext8:	
  1088 ;; *************** function _isr *****************
  1089 ;; Defined at:
  1090 ;;		line 79 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          3       0       0       0       0
  1107 ;;      Totals:         3       0       0       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		Interrupt level 1
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _isr
  1119  004C                     _isr:
  1120  004C                     i1l822:
  1121                           
  1122                           ;main.c: 81:     if (PIR1bits.ADIF)
  1123  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1124  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1125  004E  1F0C               	btfss	12,6	;volatile
  1126  004F  2851               	goto	u3_21
  1127  0050  2852               	goto	u3_20
  1128  0051                     u3_21:
  1129  0051  2857               	goto	i1l828
  1130  0052                     u3_20:
  1131  0052                     i1l824:
  1132                           
  1133                           ;main.c: 82:     {;main.c: 83:         PIR1bits.ADIF = 0;
  1134  0052  130C               	bcf	12,6	;volatile
  1135  0053                     i1l826:
  1136                           
  1137                           ;main.c: 85:         adc_data = ADRESH;
  1138  0053  081E               	movf	30,w	;volatile
  1139  0054  00F0               	movwf	??_isr
  1140  0055  0870               	movf	??_isr,w
  1141  0056  00F8               	movwf	_adc_data
  1142  0057                     i1l828:
  1143                           
  1144                           ;main.c: 88:     if (PIR1bits.SSPIF)
  1145  0057  1D8C               	btfss	12,3	;volatile
  1146  0058  285A               	goto	u4_21
  1147  0059  285B               	goto	u4_20
  1148  005A                     u4_21:
  1149  005A  2862               	goto	i1l73
  1150  005B                     u4_20:
  1151  005B                     i1l830:
  1152                           
  1153                           ;main.c: 89:     {;main.c: 90:         trash = SSPBUF;
  1154  005B  0813               	movf	19,w	;volatile
  1155  005C  00F0               	movwf	??_isr
  1156  005D  0870               	movf	??_isr,w
  1157  005E  00F7               	movwf	_trash
  1158                           
  1159                           ;main.c: 91:         SSPBUF = adc_data;
  1160  005F  0878               	movf	_adc_data,w
  1161  0060  0093               	movwf	19	;volatile
  1162  0061                     i1l832:
  1163                           
  1164                           ;main.c: 92:         PIR1bits.SSPIF = 0;
  1165  0061  118C               	bcf	12,3	;volatile
  1166  0062                     i1l73:
  1167  0062  0872               	movf	??_isr+2,w
  1168  0063  008A               	movwf	10
  1169  0064  0E71               	swapf	??_isr+1,w
  1170  0065  0083               	movwf	3
  1171  0066  0EFE               	swapf	btemp,f
  1172  0067  0E7E               	swapf	btemp,w
  1173  0068  0009               	retfie
  1174  0069                     __end_of_isr:
  1175  007E                     btemp	set	126	;btemp
  1176  007E                     wtemp0	set	126
  1177                           
  1178                           	psect	intentry
  1179  0004                     __pintentry:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _isr: [wreg]
  1182                           
  1183  0004                     interrupt_function:
  1184  007E                     saved_w	set	btemp
  1185  0004  00FE               	movwf	btemp
  1186  0005  0E03               	swapf	3,w
  1187  0006  00F1               	movwf	??_isr+1
  1188  0007  080A               	movf	10,w
  1189  0008  00F2               	movwf	??_isr+2
  1190  0009  120A  118A  284C   	ljmp	_isr
  1191                           
  1192                           	psect	config
  1193                           
  1194                           ;Config register CONFIG1 @ 0x2007
  1195                           ;	Oscillator Selection bits
  1196                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1197                           ;	Watchdog Timer Enable bit
  1198                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1199                           ;	Power-up Timer Enable bit
  1200                           ;	PWRTE = OFF, PWRT disabled
  1201                           ;	RE3/MCLR pin function select bit
  1202                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1203                           ;	Code Protection bit
  1204                           ;	CP = OFF, Program memory code protection is disabled
  1205                           ;	Data Code Protection bit
  1206                           ;	CPD = OFF, Data memory code protection is disabled
  1207                           ;	Brown Out Reset Selection bits
  1208                           ;	BOREN = OFF, BOR disabled
  1209                           ;	Internal External Switchover bit
  1210                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1211                           ;	Fail-Safe Clock Monitor Enabled bit
  1212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1213                           ;	Low Voltage Programming Enable bit
  1214                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1215                           ;	In-Circuit Debugger Mode bit
  1216                           ;	DEBUG = 0x1, unprogrammed default
  1217  2007                     	org	8199
  1218  2007  20D4               	dw	8404
  1219                           
  1220                           ;Config register CONFIG2 @ 0x2008
  1221                           ;	Brown-out Reset Selection bit
  1222                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1223                           ;	Flash Program Memory Self Write Enable bits
  1224                           ;	WRT = OFF, Write protection off
  1225  2008                     	org	8200
  1226  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spi_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                          _adc_logic
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                         _adc_config
                     _adc_isr_enable
                           _spi_init
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _adc_isr_enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_logic                                            0     0      0       0
                          _adc_start
                           _adc_wait
 ---------------------------------------------------------------------------------
 (2) _adc_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_logic
     _adc_start
     _adc_wait
   _setup
     _adc_config
     _adc_isr_enable
     _spi_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 21:48:53 2021

                     l80 004B                       l77 00A2                       u20 0097  
                     u21 0096                       u50 0071                       u51 0070  
                    l206 0079                      l207 007E                      l190 00AD  
                    l175 00B7                      l184 00BC                      l178 00C0  
                    l812 0091                      l740 00B2                      l734 00A3  
                    l742 00B5                      l736 00BD                      l816 0098  
                    l744 00B6                      l840 0075                      l738 00AE  
                    l842 0078                      l834 006A                      l850 001F  
                    l748 00B8                      l836 0071                      l860 0027  
                    l852 0021                      l844 0015                      l838 0073  
                    l870 002E                      l862 0028                      l854 0022  
                    l846 0019                      l880 0034                      l872 002F  
                    l864 0029                      l856 0023                      l848 001A  
                    l890 003D                      l882 0035                      l874 0030  
                    l866 002A                      l858 0026                      l892 0042  
                    l884 0036                      l876 0031                      l868 002D  
                    l886 0037                      l878 0033                      l888 0038  
                    l896 007F                      l898 0084                      _isr 004C  
                   ?_isr 0070                     _IOCB 0096                     i1l73 0062  
                   u3_20 0052                     u3_21 0051                     u4_20 005B  
                   u4_21 005A                     _main 007F                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l830 005B                    i1l822 004C  
                  i1l832 0061                    i1l824 0052                    i1l826 0053  
                  i1l828 0057                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 0015  
          spi_init@sType 0076                    _trash 0077                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0091                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_wait 00AE                   _OSCCON 008F                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPBUF 0013                   _SSPCON 0014  
__size_of_adc_isr_enable 0005                   saved_w 007E         __end_of_spi_init 007F  
__end_of__initialization 0011       __size_of_adc_logic 0012       __size_of_adc_start 0004  
         __pcstackCOMMON 0070               _adc_config 00AE            __end_of_setup 004C  
         _OPTION_REGbits 0081                  ??_setup 0077               __pmaintext 007F  
             __pintentry 0004                ?_adc_wait 0070        __end_of_adc_logic 00A3  
      __end_of_adc_start 00C1                  _SSPSTAT 0094       spi_init@sClockIdle 0074  
            ?_adc_config 0070                ?_spi_init 0073                  __ptext1 0015  
                __ptext2 0069                  __ptext3 00B8                  __ptext4 00AE  
                __ptext5 0091                  __ptext6 00A3                  __ptext7 00BD  
                __ptext8 004C               ??_adc_wait 0073           _adc_isr_enable 00B8  
           __size_of_isr 001D     end_of_initialization 0011               ??_spi_init 0076  
 __end_of_adc_isr_enable 00BD      __size_of_adc_config 000A          ?_adc_isr_enable 0070  
    start_initialization 000F              __end_of_isr 0069        __size_of_adc_wait 000B  
            __pbssCOMMON 0077                ___latbits 0002                _adc_logic 0091  
              _adc_start 00BD             ??_adc_config 0073        __size_of_spi_init 0016  
             ?_adc_logic 0070               ?_adc_start 0070           __size_of_setup 0037  
     __end_of_adc_config 00B8        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
    spi_init@sDataSample 0073         ??_adc_isr_enable 0073                 _adc_data 0078  
               _adc_wait 00A3    spi_init@sTransmitEdge 0075              ??_adc_logic 0073  
            ??_adc_start 0073            __size_of_main 0012                 _spi_init 0069  
             _INTCONbits 000B                 intlevel1 0000  
