Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v2.31/pic/dat/en_msgs.txt -cn \
  -h+dist/default/production/Master.X.production.sym \
  --cmf=dist/default/production/Master.X.production.cmf -z -Q16F887 \
  -o/tmp/xcXdOGNel --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Master.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k /tmp/xcXcAIDDI.o \
  dist/default/production/Master.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXcAIDDI.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production/Master.X.production.o
                cinit                                 F        F       1D        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text19                              439      439       35      872       0
                text18                              58C      58C        6      872       0
                text17                              4FD      4FD       1A      872       0
                text16                              4C6      4C6       1D      872       0
                text15                              4E3      4E3       1A      872       0
                text14                              49D      49D       29      872       0
                text13                              191      191       83        8       0
                text12                              2CE      2CE       4E        8       0
                text11                              46E      46E       2F      872       0
                text10                              586      586        6      872       0
                text9                               567      567        F      872       0
                text8                               277      277       57        8       0
                text7                               517      517       16      872       0
                text6                               31C      31C       4A        8       0
                text5                               52D      52D       15      872       0
                text4                               366      366       46        8       0
                text3                               3AC      3AC       3C        8       0
                text2                               555      555       12      872       0
                text1                                2C       2C      165        8       0
                maintext                            214      214       63        8       0
                cstackBANK0                          20       20       19       20       1
                cstackCOMMON                         70       70        8       70       1
                clrtext                             57E      57E        8      872       0
                inittext                            542      542       13      872       0
                dataBANK0                            4D       4D        8       20       1
                bssBANK0                             39       39       14       20       1
                bssCOMMON                            78       78        3       70       1
                strings                             400      400       39      800       0
                idataBANK0                          576      576        8      872       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       1D         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text19                              439      439       35         0
                text18                              58C      58C        6         0
                text17                              4FD      4FD       1A         0
                text16                              4C6      4C6       1D         0
                text15                              4E3      4E3       1A         0
                text14                              49D      49D       29         0
                text13                              191      191       83         0
                text12                              2CE      2CE       4E         0
                text11                              46E      46E       2F         0
                text10                              586      586        6         0
                text9                               567      567        F         0
                text8                               277      277       57         0
                text7                               517      517       16         0
                text6                               31C      31C       4A         0
                text5                               52D      52D       15         0
                text4                               366      366       46         0
                text3                               3AC      3AC       3C         0
                text2                               555      555       12         0
                text1                                2C       2C      165         0
                maintext                            214      214       63         0
                clrtext                             57E      57E        8         0
                inittext                            542      542       13         0
                idataBANK0                          576      576        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             400      400       39         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20       19         1
                dataBANK0                            4D       4D        8         1
                bssBANK0                             39       39       14         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                strings                        000400  000039  000439       800       0  STRING      2
                cstackBANK0                    000020  000035  000055        20       1  BANK0       1
                reset_vec                      000000  000003  000003         0       0  CODE        2
                text19                         000439  000159  000592       872       0  CODE        2
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                intentry                       000004  0003E4  0003E8         8       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0055-006F             1B           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         03E8-03FF             18
                         0592-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         03E8-03FF             18
                         0592-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         03E8-03FF             18
                         0592-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0055-006F             1B           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         03E8-03FF             18
                         0592-1FFF           1A6E
        STRING           0003-0003              1           2
                         03E8-03FF             18
                         0592-1FFF            100

                                  Symbol Table

?___lwdiv                      cstackCOMMON 0073
?___lwmod                      cstackBANK0  0023
?_sprintf                      cstackBANK0  0029
_ANSEL                         (abs)        0188
_ANSELH                        (abs)        0189
_INTCONbits                    (abs)        000B
_IOCB                          (abs)        0096
_OPTION_REGbits                (abs)        0081
_OSCCON                        (abs)        008F
_PIE1bits                      (abs)        008C
_PIR1bits                      (abs)        000C
_PORTA                         (abs)        0005
_PORTB                         (abs)        0006
_PORTC                         (abs)        0007
_PORTD                         (abs)        0008
_PORTE                         (abs)        0009
_PORTEbits                     (abs)        0009
_RCSTAbits                     (abs)        0018
_SPBRG                         (abs)        0099
_SPBRGH                        (abs)        009A
_SSPBUF                        (abs)        0013
_SSPCON                        (abs)        0014
_SSPSTAT                       (abs)        0094
_SSPSTATbits                   (abs)        0094
_TMR0                          (abs)        0001
_TRISA                         (abs)        0085
_TRISB                         (abs)        0086
_TRISC                         (abs)        0087
_TRISC3                        (abs)        043B
_TRISC5                        (abs)        043D
_TRISD                         (abs)        0088
_TRISE                         (abs)        0089
_TXREG                         (abs)        0019
_TXSTAbits                     (abs)        0098
__Habs1                        abs1         0000
__Hbank0                       bank0        0000
__Hbank1                       bank1        0000
__Hbank2                       bank2        0000
__Hbank3                       bank3        0000
__HbssBANK0                    bssBANK0     0000
__HbssCOMMON                   bssCOMMON    0000
__Hcinit                       cinit        002C
__Hclrtext                     clrtext      0000
__Hcode                        code         0000
__Hcommon                      common       0000
__Hconfig                      config       2009
__HcstackBANK0                 cstackBANK0  0000
__HcstackCOMMON                cstackCOMMON 0000
__HdataBANK0                   dataBANK0    0000
__Heeprom_data                 eeprom_data  0000
__Hend_init                    end_init     000F
__Hfunctab                     functab      0000
__HidataBANK0                  idataBANK0   0000
__Hinit                        init         000C
__Hinittext                    inittext     0000
__Hintentry                    intentry     000C
__Hmaintext                    maintext     0000
__Hpowerup                     powerup      0000
__Hram                         ram          0000
__Hreset_vec                   reset_vec    0003
__Hsfr0                        sfr0         0000
__Hsfr1                        sfr1         0000
__Hsfr2                        sfr2         0000
__Hsfr3                        sfr3         0000
__Hspace_0                     (abs)        0592
__Hspace_1                     (abs)        007B
__Hspace_2                     (abs)        0000
__Hspace_3                     (abs)        0000
__Hspace_4                     (abs)        4010
__Hstack                       stack        0000
__Hstrings                     strings      0000
__Htext                        text         0000
__Labs1                        abs1         0000
__Lbank0                       bank0        0000
__Lbank1                       bank1        0000
__Lbank2                       bank2        0000
__Lbank3                       bank3        0000
__LbssBANK0                    bssBANK0     0000
__LbssCOMMON                   bssCOMMON    0000
__Lcinit                       cinit        000F
__Lclrtext                     clrtext      0000
__Lcode                        code         0000
__Lcommon                      common       0000
__Lconfig                      config       0000
__LcstackBANK0                 cstackBANK0  0000
__LcstackCOMMON                cstackCOMMON 0000
__LdataBANK0                   dataBANK0    0000
__Leeprom_data                 eeprom_data  0000
__Lend_init                    end_init     000C
__Lfunctab                     functab      0000
__LidataBANK0                  idataBANK0   0000
__Linit                        init         000C
__Linittext                    inittext     0000
__Lintentry                    intentry     0004
__Lmaintext                    maintext     0000
__Lpowerup                     powerup      0000
__Lram                         ram          0000
__Lreset_vec                   reset_vec    0000
__Lsfr0                        sfr0         0000
__Lsfr1                        sfr1         0000
__Lsfr2                        sfr2         0000
__Lsfr3                        sfr3         0000
__Lspace_0                     (abs)        0000
__Lspace_1                     (abs)        0000
__Lspace_2                     (abs)        0000
__Lspace_3                     (abs)        0000
__Lspace_4                     (abs)        0000
__Lstack                       stack        0000
__Lstrings                     strings      0000
__Ltext                        text         0000
__S0                           (abs)        0592
__S1                           (abs)        007B
__S2                           (abs)        0000
__S3                           (abs)        0000
___bmul                        text5        052D
___bmul@multiplicand           cstackCOMMON 0073
___bmul@multiplier             cstackCOMMON 0076
___bmul@product                cstackCOMMON 0075
___int_sp                      stack        0000
___latbits                     (abs)        0002
___lwdiv                       text4        0366
___lwdiv@counter               cstackBANK0  0020
___lwdiv@dividend              cstackCOMMON 0075
___lwdiv@divisor               cstackCOMMON 0073
___lwdiv@quotient              cstackBANK0  0021
___lwmod                       text3        03AC
___lwmod@counter               cstackBANK0  0028
___lwmod@dividend              cstackBANK0  0025
___lwmod@divisor               cstackBANK0  0023
___sp                          stack        0000
___stackhi                     (abs)        0000
___stacklo                     (abs)        0000
__end_of___bmul                text5        0542
__end_of___lwdiv               text4        03AC
__end_of___lwmod               text3        03E8
__end_of__initialization       cinit        0028
__end_of__stringtab            strings      0406
__end_of_display               text13       0214
__end_of_dpowers               strings      0410
__end_of_eusart_enable_tx_isr  text10       058C
__end_of_eusart_init_tx        text9        0576
__end_of_isdigit               text2        0567
__end_of_isr                   text19       046E
__end_of_lcd_cmd               text17       0517
__end_of_lcd_init              text8        02CE
__end_of_lcd_move_cursor       text16       04E3
__end_of_lcd_port              text18       0592
__end_of_lcd_write_char        text15       04FD
__end_of_lcd_write_string      text14       04C6
__end_of_main                  maintext     0277
__end_of_prepare_uart_data     text12       031C
__end_of_set_next_slave        text11       049D
__end_of_setup                 text6        0366
__end_of_spi_init              text7        052D
__end_of_sprintf               text1        0191
__initialization               cinit        000F
__pbssBANK0                    bssBANK0     0039
__pbssCOMMON                   bssCOMMON    0078
__pcstackBANK0                 cstackBANK0  0020
__pcstackCOMMON                cstackCOMMON 0070
__pdataBANK0                   dataBANK0    004D
__pidataBANK0                  idataBANK0   0576
__pintentry                    intentry     0004
__pmaintext                    maintext     0214
__pstrings                     strings      0400
__ptext1                       text1        002C
__ptext10                      text10       0586
__ptext11                      text11       046E
__ptext12                      text12       02CE
__ptext13                      text13       0191
__ptext14                      text14       049D
__ptext15                      text15       04E3
__ptext16                      text16       04C6
__ptext17                      text17       04FD
__ptext18                      text18       058C
__ptext19                      text19       0439
__ptext2                       text2        0555
__ptext3                       text3        03AC
__ptext4                       text4        0366
__ptext5                       text5        052D
__ptext6                       text6        031C
__ptext7                       text7        0517
__ptext8                       text8        0277
__ptext9                       text9        0567
__size_of___bmul               (abs)        0000
__size_of___lwdiv              (abs)        0000
__size_of___lwmod              (abs)        0000
__size_of_display              (abs)        0000
__size_of_eusart_enable_tx_isr (abs)        0000
__size_of_eusart_init_tx       (abs)        0000
__size_of_isdigit              (abs)        0000
__size_of_isr                  (abs)        0000
__size_of_lcd_cmd              (abs)        0000
__size_of_lcd_init             (abs)        0000
__size_of_lcd_move_cursor      (abs)        0000
__size_of_lcd_port             (abs)        0000
__size_of_lcd_write_char       (abs)        0000
__size_of_lcd_write_string     (abs)        0000
__size_of_main                 (abs)        0000
__size_of_prepare_uart_data    (abs)        0000
__size_of_set_next_slave       (abs)        0000
__size_of_setup                (abs)        0000
__size_of_spi_init             (abs)        0000
__size_of_sprintf              (abs)        0000
__stringbase                   strings      0405
__stringtab                    strings      0400
_display                       text13       0191
_dpowers                       strings      0406
_eusart_enable_tx_isr          text10       0586
_eusart_init_tx                text9        0567
_isdigit                       text2        0555
_isdigit$1092                  cstackCOMMON 0073
_isr                           text19       0439
_lcd_cmd                       text17       04FD
_lcd_init                      text8        0277
_lcd_move_cursor               text16       04C6
_lcd_port                      text18       058C
_lcd_write_char                text15       04E3
_lcd_write_string              text14       049D
_main                          maintext     0214
_next_slave                    bssBANK0     0039
_next_uart                     bssBANK0     003A
_pot_data                      dataBANK0    0054
_prepare_uart_data             text12       02CE
_push_data                     dataBANK0    0053
_set_next_slave                text11       046E
_setup                         text6        031C
_slave_num                     dataBANK0    0050
_spi_data                      bssCOMMON    007A
_spi_init                      text7        0517
_sprintf                       text1        002C
_str_pos                       bssCOMMON    0078
_str_pot_a                     bssBANK0     003B
_str_pot_b                     bssBANK0     0042
_str_pot_c                     bssBANK0     0048
_temp_data                     dataBANK0    0052
_uart_data                     bssCOMMON    0079
_uart_num                      dataBANK0    0051
btemp                          (abs)        007E
clear_ram0                     clrtext      057E
display@header_str             cstackBANK0  0024
end_of_initialization          cinit        0028
init_fetch0                    inittext     0542
init_ram0                      inittext     0546
interrupt_function             intentry     0004
intlevel0                      functab      0000
intlevel1                      functab      0000
intlevel2                      functab      0000
intlevel3                      functab      0000
intlevel4                      functab      0000
intlevel5                      functab      0000
isdigit@c                      cstackCOMMON 0074
lcd_cmd@cmd                    cstackCOMMON 0076
lcd_move_cursor@col            cstackCOMMON 0077
lcd_move_cursor@row            cstackBANK0  0020
lcd_port@a                     cstackCOMMON 0073
lcd_write_char@data            cstackCOMMON 0076
lcd_write_string@a             cstackBANK0  0022
lcd_write_string@i             cstackBANK0  0020
reset_vec                      reset_vec    0000
saved_w                        (abs)        007E
spi_init@sClockIdle            cstackCOMMON 0074
spi_init@sDataSample           cstackCOMMON 0073
spi_init@sTransmitEdge         cstackCOMMON 0075
spi_init@sType                 cstackCOMMON 0076
sprintf@ap                     cstackBANK0  002F
sprintf@c                      cstackBANK0  0035
sprintf@f                      cstackBANK0  0029
sprintf@flag                   cstackBANK0  0030
sprintf@prec                   cstackBANK0  0034
sprintf@sp                     cstackBANK0  0033
sprintf@val                    cstackBANK0  0031
start                          init         000C
start_initialization           cinit        000F
wtemp0                         (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 99 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_display
		_prepare_uart_data
		_set_next_slave
		_setup
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 505 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> str_pot_c(5), str_pot_b(6), str_pot_a(7), 
  f               1    9[BANK0 ] PTR const unsigned char 
		 -> STR_3(7), STR_2(7), STR_1(7), 
 Auto vars:     Size  Location     Type
  sp              1   19[BANK0 ] PTR unsigned char 
		 -> str_pot_c(5), str_pot_b(6), str_pot_a(7), 
  tmpval          4    0        struct .
  val             2   17[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   21[BANK0 ] unsigned char 
  prec            1   20[BANK0 ] char 
  flag            1   16[BANK0 ] unsigned char 
  ap              1   15[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    9[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___bmul
		___lwdiv
		___lwmod
		_isdigit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       3       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    6[COMMON] unsigned char 
  product         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 252 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_eusart_enable_tx_isr
		_eusart_init_tx
		_lcd_cmd
		_lcd_init
		_spi_init
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spi_init *****************
 Defined at:
		line 12 in file "spi.c"
 Parameters:    Size  Location     Type
  sType           1    wreg     enum E1264
  sDataSample     1    3[COMMON] enum E1272
  sClockIdle      1    4[COMMON] enum E1276
  sTransmitEdg    1    5[COMMON] enum E1280
 Auto vars:     Size  Location     Type
  sType           1    6[COMMON] enum E1264
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 8 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcd_cmd
		_lcd_port
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _eusart_init_tx *****************
 Defined at:
		line 14 in file "eusart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _eusart_enable_tx_isr *****************
 Defined at:
		line 27 in file "eusart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _set_next_slave *****************
 Defined at:
		line 193 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _prepare_uart_data *****************
 Defined at:
		line 154 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _display *****************
 Defined at:
		line 224 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  header_str      1    4[BANK0 ] PTR unsigned char 
		 -> STR_4(17), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_lcd_move_cursor
		_lcd_write_char
		_lcd_write_string
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_write_string *****************
 Defined at:
		line 85 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_6(3), STR_5(3), STR_4(17), 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] PTR unsigned char 
		 -> STR_6(3), STR_5(3), STR_4(17), 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcd_write_char
 This function is called by:
		_display
 This function uses a non-reentrant model


 *************** function _lcd_write_char *****************
 Defined at:
		line 75 in file "lcd.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_port
 This function is called by:
		_display
		_lcd_write_string
 This function uses a non-reentrant model


 *************** function _lcd_move_cursor *****************
 Defined at:
		line 63 in file "lcd.c"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  col             1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       1       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcd_cmd
 This function is called by:
		_display
 This function uses a non-reentrant model


 *************** function _lcd_cmd *****************
 Defined at:
		line 46 in file "lcd.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_port
 This function is called by:
		_setup
		_lcd_init
		_lcd_move_cursor
 This function uses a non-reentrant model


 *************** function _lcd_port *****************
 Defined at:
		line 28 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_init
		_lcd_cmd
		_lcd_write_char
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 132 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
eusart.c
		_eusart_enable_tx_isr		CODE           	0586	0000	6
		_eusart_init_tx		CODE           	0567	0000	15

eusart.c estimated size: 21

/opt/microchip/xc8/v2.31/pic/sources/c90/common/isdigit.c
		_isdigit       		CODE           	0555	0000	18

/opt/microchip/xc8/v2.31/pic/sources/c90/common/isdigit.c estimated size: 18

/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwmod.c
		___lwmod       		CODE           	03AC	0000	60

/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwmod.c estimated size: 60

/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c
		_sprintf       		CODE           	002C	0000	357

/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c estimated size: 357

spi.c
		_spi_init      		CODE           	0517	0000	22

spi.c estimated size: 22

shared
		__stringtab    		STRING         	0400	0000	6
		_dpowers       		STRING         	0406	0000	10
		__initialization		CODE           	000F	0000	25

shared estimated size: 41

lcd.c
		_lcd_write_char		CODE           	04E3	0000	26
		_lcd_cmd       		CODE           	04FD	0000	26
		_lcd_move_cursor		CODE           	04C6	0000	29
		_lcd_port      		CODE           	058C	0000	6
		_lcd_write_string		CODE           	049D	0000	41
		_lcd_init      		CODE           	0277	0000	87

lcd.c estimated size: 215

/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwdiv.c
		___lwdiv       		CODE           	0366	0000	70

/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwdiv.c estimated size: 70

main.c
		_set_next_slave		CODE           	046E	0000	47
		_display       		CODE           	0191	0000	131
		_prepare_uart_data		CODE           	02CE	0000	78
		_main          		CODE           	0214	0000	99
		_isr           		CODE           	0439	0000	53
		_setup         		CODE           	031C	0000	74

main.c estimated size: 482

/opt/microchip/xc8/v2.31/pic/sources/c90/common/Umul8.c
		___bmul        		CODE           	052D	0000	21

/opt/microchip/xc8/v2.31/pic/sources/c90/common/Umul8.c estimated size: 21

