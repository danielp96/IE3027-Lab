

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar  5 19:16:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=4
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=6
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=5
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=5
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=5
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462                           
   463                           	psect	idataBANK0
   464  0576                     __pidataBANK0:
   465                           
   466                           ;initializer for _strc
   467  0576  3448               	retlw	low (_str_pot_c| 0)
   468                           
   469                           ;initializer for _strb
   470  0577  3442               	retlw	low (_str_pot_b| 0)
   471                           
   472                           ;initializer for _stra
   473  0578  343B               	retlw	low (_str_pot_a| 0)
   474                           
   475                           ;initializer for _slave_num
   476  0579  3401               	retlw	1
   477                           
   478                           ;initializer for _uart_num
   479  057A  3401               	retlw	1
   480                           
   481                           ;initializer for _temp_data
   482  057B  3409               	retlw	9
   483                           
   484                           ;initializer for _push_data
   485  057C  3407               	retlw	7
   486                           
   487                           ;initializer for _pot_data
   488  057D  3403               	retlw	3
   489                           
   490                           	psect	strings
   491  0400                     __pstrings:
   492  0400                     stringtab:
   493  0400                     __stringtab:
   494  0400                     stringcode:	
   495                           ;	String table - string pointers are 1 byte each
   496                           
   497  0400                     stringdir:
   498  0400  3004               	movlw	high stringdir
   499  0401  008A               	movwf	10
   500  0402  0804               	movf	4,w
   501  0403  0A84               	incf	4,f
   502  0404  0782               	addwf	2,f
   503  0405                     __stringbase:
   504  0405  3400               	retlw	0
   505  0406                     __end_of__stringtab:
   506  0406                     _dpowers:
   507  0406  3401               	retlw	1
   508  0407  3400               	retlw	0
   509  0408  340A               	retlw	10
   510  0409  3400               	retlw	0
   511  040A  3464               	retlw	100
   512  040B  3400               	retlw	0
   513  040C  34E8               	retlw	232
   514  040D  3403               	retlw	3
   515  040E  3410               	retlw	16
   516  040F  3427               	retlw	39
   517  0410                     __end_of_dpowers:
   518  0014                     _SSPCON	set	20
   519  0018                     _RCSTAbits	set	24
   520  0009                     _PORTEbits	set	9
   521  0001                     _TMR0	set	1
   522  000B                     _INTCONbits	set	11
   523  0009                     _PORTE	set	9
   524  0008                     _PORTD	set	8
   525  0007                     _PORTC	set	7
   526  0005                     _PORTA	set	5
   527  0019                     _TXREG	set	25
   528  0006                     _PORTB	set	6
   529  0013                     _SSPBUF	set	19
   530  000C                     _PIR1bits	set	12
   531  0094                     _SSPSTAT	set	148
   532  0098                     _TXSTAbits	set	152
   533  0099                     _SPBRG	set	153
   534  009A                     _SPBRGH	set	154
   535  0081                     _OPTION_REGbits	set	129
   536  008F                     _OSCCON	set	143
   537  0096                     _IOCB	set	150
   538  0089                     _TRISE	set	137
   539  0088                     _TRISD	set	136
   540  0087                     _TRISC	set	135
   541  0086                     _TRISB	set	134
   542  0085                     _TRISA	set	133
   543  0094                     _SSPSTATbits	set	148
   544  008C                     _PIE1bits	set	140
   545  043B                     _TRISC3	set	1083
   546  043D                     _TRISC5	set	1085
   547  0189                     _ANSELH	set	393
   548  0188                     _ANSEL	set	392
   549  0410                     STR_4:
   550  0410  3420               	retlw	32	;' '
   551  0411  3420               	retlw	32	;' '
   552  0412  3453               	retlw	83	;'S'
   553  0413  3431               	retlw	49	;'1'
   554  0414  343A               	retlw	58	;':'
   555  0415  3420               	retlw	32	;' '
   556  0416  3420               	retlw	32	;' '
   557  0417  3453               	retlw	83	;'S'
   558  0418  3432               	retlw	50	;'2'
   559  0419  343A               	retlw	58	;':'
   560  041A  3420               	retlw	32	;' '
   561  041B  3420               	retlw	32	;' '
   562  041C  3453               	retlw	83	;'S'
   563  041D  3433               	retlw	51	;'3'
   564  041E  343A               	retlw	58	;':'
   565  041F  3420               	retlw	32	;' '
   566  0420  3400               	retlw	0
   567  0421                     STR_1:
   568  0421  3441               	retlw	65	;'A'
   569  0422  3425               	retlw	37	;'%'
   570  0423  342E               	retlw	46	;'.'
   571  0424  3433               	retlw	51	;'3'
   572  0425  3469               	retlw	105	;'i'
   573  0426  343A               	retlw	58	;':'
   574  0427  3400               	retlw	0
   575  0428                     STR_2:
   576  0428  3442               	retlw	66	;'B'
   577  0429  3425               	retlw	37	;'%'
   578  042A  342E               	retlw	46	;'.'
   579  042B  3433               	retlw	51	;'3'
   580  042C  3469               	retlw	105	;'i'
   581  042D  343A               	retlw	58	;':'
   582  042E  3400               	retlw	0
   583  042F                     STR_3:
   584  042F  3443               	retlw	67	;'C'
   585  0430  3425               	retlw	37	;'%'
   586  0431  342E               	retlw	46	;'.'
   587  0432  3433               	retlw	51	;'3'
   588  0433  3469               	retlw	105	;'i'
   589  0434  343A               	retlw	58	;':'
   590  0435  3400               	retlw	0
   591  0436                     STR_5:
   592  0436  3420               	retlw	32	;' '
   593  0437  3420               	retlw	32	;' '
   594  0438  3400               	retlw	0
   595  0436                     
   596                           	psect	cinit
   597  000F                     start_initialization:	
   598                           ; #config settings
   599                           
   600  000F                     __initialization:
   601                           
   602                           ; Initialize objects allocated to BANK0
   603  000F  1383               	bcf	3,7	;select IRP bank0
   604  0010  3055               	movlw	low (__pdataBANK0+8)
   605  0011  00FD               	movwf	btemp+-1
   606  0012  3005               	movlw	high __pidataBANK0
   607  0013  00FE               	movwf	btemp
   608  0014  3076               	movlw	low __pidataBANK0
   609  0015  00FF               	movwf	btemp+1
   610  0016  304D               	movlw	low __pdataBANK0
   611  0017  0084               	movwf	4
   612  0018  120A  118A  2546  120A  118A  	fcall	init_ram0
   613                           
   614                           ; Clear objects allocated to BANK0
   615  001D  3039               	movlw	low __pbssBANK0
   616  001E  0084               	movwf	4
   617  001F  304D               	movlw	low (__pbssBANK0+20)
   618  0020  120A  118A  257E  120A  118A  	fcall	clear_ram0
   619                           
   620                           ; Clear objects allocated to COMMON
   621  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   622  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   623  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   624  0028                     end_of_initialization:	
   625                           ;End of C runtime variable initialization code
   626                           
   627  0028                     __end_of__initialization:
   628  0028  0183               	clrf	3
   629  0029  120A  118A  2A14   	ljmp	_main	;jump to C main() function
   630                           
   631                           	psect	bssCOMMON
   632  0078                     __pbssCOMMON:
   633  0078                     _str_pos:
   634  0078                     	ds	1
   635  0079                     _uart_data:
   636  0079                     	ds	1
   637  007A                     _spi_data:
   638  007A                     	ds	1
   639                           
   640                           	psect	bssBANK0
   641  0039                     __pbssBANK0:
   642  0039                     _next_slave:
   643  0039                     	ds	1
   644  003A                     _next_uart:
   645  003A                     	ds	1
   646  003B                     _str_pot_a:
   647  003B                     	ds	7
   648  0042                     _str_pot_b:
   649  0042                     	ds	6
   650  0048                     _str_pot_c:
   651  0048                     	ds	5
   652                           
   653                           	psect	dataBANK0
   654  004D                     __pdataBANK0:
   655  004D                     _strc:
   656  004D                     	ds	1
   657  004E                     _strb:
   658  004E                     	ds	1
   659  004F                     _stra:
   660  004F                     	ds	1
   661  0050                     _slave_num:
   662  0050                     	ds	1
   663  0051                     _uart_num:
   664  0051                     	ds	1
   665  0052                     _temp_data:
   666  0052                     	ds	1
   667  0053                     _push_data:
   668  0053                     	ds	1
   669  0054                     _pot_data:
   670  0054                     	ds	1
   671                           
   672                           	psect	inittext
   673  0542                     init_fetch0:	
   674                           ;	Called with low address in FSR and high address in W
   675                           
   676  0542  087E               	movf	btemp,w
   677  0543  008A               	movwf	10
   678  0544  087F               	movf	btemp+1,w
   679  0545  0082               	movwf	2
   680  0546                     init_ram0:	
   681                           ;Called with:
   682                           ;	high address of idata address in btemp 
   683                           ;	low address of idata address in btemp+1 
   684                           ;	low address of data in FSR
   685                           ;	high address + 1 of data in btemp-1
   686                           
   687  0546  120A  118A  2542  120A  118A  	fcall	init_fetch0
   688  054B  0080               	movwf	0
   689  054C  0A84               	incf	4,f
   690  054D  0804               	movf	4,w
   691  054E  067D               	xorwf	btemp+-1,w
   692  054F  1903               	btfsc	3,2
   693  0550  3400               	retlw	0
   694  0551  0AFF               	incf	btemp+1,f
   695  0552  1903               	btfsc	3,2
   696  0553  0AFE               	incf	btemp,f
   697  0554  2D46               	goto	init_ram0
   698                           
   699                           	psect	clrtext
   700  057E                     clear_ram0:	
   701                           ;	Called with FSR containing the base address, and
   702                           ;	W with the last address+1
   703                           
   704  057E  0064               	clrwdt	;clear the watchdog before getting into this loop
   705  057F                     clrloop0:
   706  057F  0180               	clrf	0	;clear RAM location pointed to by FSR
   707  0580  0A84               	incf	4,f	;increment pointer
   708  0581  0604               	xorwf	4,w	;XOR with final address
   709  0582  1903               	btfsc	3,2	;have we reached the end yet?
   710  0583  3400               	retlw	0	;all done for this memory range, return
   711  0584  0604               	xorwf	4,w	;XOR again to restore value
   712  0585  2D7F               	goto	clrloop0	;do the next byte
   713                           
   714                           	psect	cstackCOMMON
   715  0070                     __pcstackCOMMON:
   716  0070                     ?_isdigit:
   717  0070                     ?_setup:	
   718                           ; 1 bit 
   719                           
   720  0070                     ?_set_next_slave:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_prepare_uart_data:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_display:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_lcd_write_string:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_lcd_write_char:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_lcd_init:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_lcd_cmd:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_eusart_init_tx:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_eusart_enable_tx_isr:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_lcd_port:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_main:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_isr:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ??_isr:	
   757                           ; 1 bytes @ 0x0
   758                           
   759                           
   760                           ; 1 bytes @ 0x0
   761  0070                     	ds	3
   762  0073                     ??_set_next_slave:
   763  0073                     ??_prepare_uart_data:	
   764                           ; 1 bytes @ 0x3
   765                           
   766  0073                     ??_eusart_init_tx:	
   767                           ; 1 bytes @ 0x3
   768                           
   769  0073                     ??_eusart_enable_tx_isr:	
   770                           ; 1 bytes @ 0x3
   771                           
   772  0073                     ?_spi_init:	
   773                           ; 1 bytes @ 0x3
   774                           
   775  0073                     ??_lcd_port:	
   776                           ; 1 bytes @ 0x3
   777                           
   778  0073                     ??_isdigit:	
   779                           ; 1 bytes @ 0x3
   780                           
   781  0073                     ?___bmul:	
   782                           ; 1 bytes @ 0x3
   783                           
   784  0073                     ?___lwdiv:	
   785                           ; 1 bytes @ 0x3
   786                           
   787  0073                     lcd_port@a:	
   788                           ; 2 bytes @ 0x3
   789                           
   790  0073                     spi_init@sDataSample:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     ___bmul@multiplicand:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0073                     _isdigit$1092:	
   797                           ; 1 bytes @ 0x3
   798                           
   799  0073                     ___lwdiv@divisor:	
   800                           ; 1 bytes @ 0x3
   801                           
   802                           
   803                           ; 2 bytes @ 0x3
   804  0073                     	ds	1
   805  0074                     ??_lcd_write_char:
   806  0074                     ??_lcd_cmd:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ??___bmul:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     spi_init@sClockIdle:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     isdigit@c:	
   816                           ; 1 bytes @ 0x4
   817                           
   818                           
   819                           ; 1 bytes @ 0x4
   820  0074                     	ds	1
   821  0075                     spi_init@sTransmitEdge:
   822  0075                     ___bmul@product:	
   823                           ; 1 bytes @ 0x5
   824                           
   825  0075                     ___lwdiv@dividend:	
   826                           ; 1 bytes @ 0x5
   827                           
   828                           
   829                           ; 2 bytes @ 0x5
   830  0075                     	ds	1
   831  0076                     ??_spi_init:
   832  0076                     lcd_cmd@cmd:	
   833                           ; 1 bytes @ 0x6
   834                           
   835  0076                     lcd_write_char@data:	
   836                           ; 1 bytes @ 0x6
   837                           
   838  0076                     spi_init@sType:	
   839                           ; 1 bytes @ 0x6
   840                           
   841  0076                     ___bmul@multiplier:	
   842                           ; 1 bytes @ 0x6
   843                           
   844                           
   845                           ; 1 bytes @ 0x6
   846  0076                     	ds	1
   847  0077                     ??_setup:
   848  0077                     ?_lcd_move_cursor:	
   849                           ; 1 bytes @ 0x7
   850                           
   851  0077                     ??_lcd_write_string:	
   852                           ; 1 bytes @ 0x7
   853                           
   854  0077                     ??___lwdiv:	
   855                           ; 1 bytes @ 0x7
   856                           
   857  0077                     lcd_move_cursor@col:	
   858                           ; 1 bytes @ 0x7
   859                           
   860                           
   861                           ; 1 bytes @ 0x7
   862  0077                     	ds	1
   863  0078                     ??_lcd_move_cursor:
   864                           
   865                           	psect	cstackBANK0
   866  0020                     __pcstackBANK0:	
   867                           ; 1 bytes @ 0x8
   868                           
   869  0020                     ??_lcd_init:
   870  0020                     lcd_move_cursor@row:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     ___lwdiv@counter:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     lcd_write_string@i:	
   877                           ; 1 bytes @ 0x0
   878                           
   879                           
   880                           ; 2 bytes @ 0x0
   881  0020                     	ds	1
   882  0021                     ___lwdiv@quotient:
   883                           
   884                           ; 2 bytes @ 0x1
   885  0021                     	ds	1
   886  0022                     lcd_write_string@a:
   887                           
   888                           ; 1 bytes @ 0x2
   889  0022                     	ds	1
   890  0023                     ??_display:
   891  0023                     ?___lwmod:	
   892                           ; 1 bytes @ 0x3
   893                           
   894  0023                     ___lwmod@divisor:	
   895                           ; 2 bytes @ 0x3
   896                           
   897                           
   898                           ; 2 bytes @ 0x3
   899  0023                     	ds	1
   900  0024                     display@header_str:
   901                           
   902                           ; 1 bytes @ 0x4
   903  0024                     	ds	1
   904  0025                     ___lwmod@dividend:
   905                           
   906                           ; 2 bytes @ 0x5
   907  0025                     	ds	2
   908  0027                     ??___lwmod:
   909                           
   910                           ; 1 bytes @ 0x7
   911  0027                     	ds	1
   912  0028                     ___lwmod@counter:
   913                           
   914                           ; 1 bytes @ 0x8
   915  0028                     	ds	1
   916  0029                     ?_sprintf:
   917  0029                     sprintf@f:	
   918                           ; 2 bytes @ 0x9
   919                           
   920                           
   921                           ; 1 bytes @ 0x9
   922  0029                     	ds	3
   923  002C                     ??_sprintf:
   924                           
   925                           ; 1 bytes @ 0xC
   926  002C                     	ds	3
   927  002F                     sprintf@ap:
   928                           
   929                           ; 1 bytes @ 0xF
   930  002F                     	ds	1
   931  0030                     sprintf@flag:
   932                           
   933                           ; 1 bytes @ 0x10
   934  0030                     	ds	1
   935  0031                     sprintf@val:
   936                           
   937                           ; 2 bytes @ 0x11
   938  0031                     	ds	2
   939  0033                     sprintf@sp:
   940                           
   941                           ; 1 bytes @ 0x13
   942  0033                     	ds	1
   943  0034                     sprintf@prec:
   944                           
   945                           ; 1 bytes @ 0x14
   946  0034                     	ds	1
   947  0035                     sprintf@c:
   948                           
   949                           ; 1 bytes @ 0x15
   950  0035                     	ds	1
   951  0036                     ??_main:
   952                           
   953                           ; 1 bytes @ 0x16
   954  0036                     	ds	3
   955                           
   956                           	psect	maintext
   957  0214                     __pmaintext:	
   958 ;;
   959 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   960 ;;
   961 ;; *************** function _main *****************
   962 ;; Defined at:
   963 ;;		line 99 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : B00/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0
   979 ;;      Temps:          0       3       0       0       0
   980 ;;      Totals:         0       3       0       0       0
   981 ;;Total ram usage:        3 bytes
   982 ;; Hardware stack levels required when called:    5
   983 ;; This function calls:
   984 ;;		_display
   985 ;;		_prepare_uart_data
   986 ;;		_set_next_slave
   987 ;;		_setup
   988 ;;		_sprintf
   989 ;; This function is called by:
   990 ;;		Startup code after reset
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           
   995                           ;psect for function _main
   996  0214                     _main:
   997  0214                     l2084:	
   998                           ;incstack = 0
   999                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1000                           
  1001                           
  1002                           ;main.c: 101:     setup();
  1003  0214  120A  118A  231C  120A  118A  	fcall	_setup
  1004  0219                     l107:	
  1005                           ;main.c: 102:     while(1)
  1006                           
  1007                           
  1008                           ;main.c: 103:     {;main.c: 105:         set_next_slave();
  1009  0219  120A  118A  246E  120A  118A  	fcall	_set_next_slave
  1010  021E                     l2086:
  1011                           
  1012                           ;main.c: 109:         if (PIR1bits.SSPIF)
  1013  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1014  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0220  1D8C               	btfss	12,3	;volatile
  1016  0221  2A23               	goto	u1141
  1017  0222  2A24               	goto	u1140
  1018  0223                     u1141:
  1019  0223  2A27               	goto	l2092
  1020  0224                     u1140:
  1021  0224                     l2088:
  1022                           
  1023                           ;main.c: 110:         {;main.c: 111:             SSPBUF = 0xAA;
  1024  0224  30AA               	movlw	170
  1025  0225  0093               	movwf	19	;volatile
  1026  0226                     l2090:
  1027                           
  1028                           ;main.c: 112:             PIR1bits.SSPIF = 0;
  1029  0226  118C               	bcf	12,3	;volatile
  1030  0227                     l2092:
  1031                           
  1032                           ;main.c: 116:         prepare_uart_data();
  1033  0227  120A  118A  22CE  120A  118A  	fcall	_prepare_uart_data
  1034  022C                     l2094:
  1035                           
  1036                           ;main.c: 118:         if (next_slave)
  1037  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1038  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1039  022E  0839               	movf	_next_slave,w
  1040  022F  1903               	btfsc	3,2
  1041  0230  2A32               	goto	u1151
  1042  0231  2A33               	goto	u1150
  1043  0232                     u1151:
  1044  0232  2A6A               	goto	l2098
  1045  0233                     u1150:
  1046  0233                     l2096:
  1047                           
  1048                           ;main.c: 119:         {;main.c: 120:             sprintf(stra, "A%.3i:", pot_data);
  1049  0233  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1050  0234  00B6               	movwf	??_main
  1051  0235  0836               	movf	??_main,w
  1052  0236  00A9               	movwf	sprintf@f
  1053  0237  0854               	movf	_pot_data,w
  1054  0238  00B7               	movwf	??_main+1
  1055  0239  01B8               	clrf	??_main+2
  1056  023A  0837               	movf	??_main+1,w
  1057  023B  00AA               	movwf	?_sprintf+1
  1058  023C  0838               	movf	??_main+2,w
  1059  023D  00AB               	movwf	?_sprintf+2
  1060  023E  303B               	movlw	(low (_str_pot_a| 0))& (0+255)
  1061  023F  120A  118A  202C  120A  118A  	fcall	_sprintf
  1062                           
  1063                           ;main.c: 121:             sprintf(strb, "B%.3i:", push_data);
  1064  0244  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1065  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0247  00B6               	movwf	??_main
  1068  0248  0836               	movf	??_main,w
  1069  0249  00A9               	movwf	sprintf@f
  1070  024A  0853               	movf	_push_data,w
  1071  024B  00B7               	movwf	??_main+1
  1072  024C  01B8               	clrf	??_main+2
  1073  024D  0837               	movf	??_main+1,w
  1074  024E  00AA               	movwf	?_sprintf+1
  1075  024F  0838               	movf	??_main+2,w
  1076  0250  00AB               	movwf	?_sprintf+2
  1077  0251  3042               	movlw	(low (_str_pot_b| 0))& (0+255)
  1078  0252  120A  118A  202C  120A  118A  	fcall	_sprintf
  1079                           
  1080                           ;main.c: 122:             sprintf(strc, "C%.3i:", temp_data);
  1081  0257  302A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1082  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1084  025A  00B6               	movwf	??_main
  1085  025B  0836               	movf	??_main,w
  1086  025C  00A9               	movwf	sprintf@f
  1087  025D  0852               	movf	_temp_data,w
  1088  025E  00B7               	movwf	??_main+1
  1089  025F  01B8               	clrf	??_main+2
  1090  0260  0837               	movf	??_main+1,w
  1091  0261  00AA               	movwf	?_sprintf+1
  1092  0262  0838               	movf	??_main+2,w
  1093  0263  00AB               	movwf	?_sprintf+2
  1094  0264  3048               	movlw	(low (_str_pot_c| 0))& (0+255)
  1095  0265  120A  118A  202C  120A  118A  	fcall	_sprintf
  1096  026A                     l2098:
  1097                           
  1098                           ;main.c: 125:         display();
  1099  026A  120A  118A  2191  120A  118A  	fcall	_display
  1100  026F                     l2100:
  1101                           
  1102                           ;main.c: 127:         PORTB = slave_num;
  1103  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0271  0850               	movf	_slave_num,w
  1106  0272  0086               	movwf	6	;volatile
  1107  0273  2A19               	goto	l107
  1108  0274  120A  118A  280C   	ljmp	start
  1109  0277                     __end_of_main:
  1110                           
  1111                           	psect	text1
  1112  002C                     __ptext1:	
  1113 ;; *************** function _sprintf *****************
  1114 ;; Defined at:
  1115 ;;		line 505 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  sp              1    wreg     PTR unsigned char 
  1118 ;;		 -> str_pot_c(5), str_pot_b(6), str_pot_a(7), 
  1119 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1120 ;;		 -> STR_3(7), STR_2(7), STR_1(7), 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1123 ;;		 -> str_pot_c(5), str_pot_b(6), str_pot_a(7), 
  1124 ;;  tmpval          4    0        struct .
  1125 ;;  val             2   17[BANK0 ] unsigned int 
  1126 ;;  cp              2    0        PTR const unsigned char 
  1127 ;;  len             2    0        unsigned int 
  1128 ;;  c               1   21[BANK0 ] unsigned char 
  1129 ;;  prec            1   20[BANK0 ] char 
  1130 ;;  flag            1   16[BANK0 ] unsigned char 
  1131 ;;  ap              1   15[BANK0 ] PTR void [1]
  1132 ;;		 -> ?_sprintf(2), 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    9[BANK0 ] int 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       3       0       0       0
  1143 ;;      Locals:         0       7       0       0       0
  1144 ;;      Temps:          0       3       0       0       0
  1145 ;;      Totals:         0      13       0       0       0
  1146 ;;Total ram usage:       13 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    2
  1149 ;; This function calls:
  1150 ;;		___bmul
  1151 ;;		___lwdiv
  1152 ;;		___lwmod
  1153 ;;		_isdigit
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _sprintf
  1161  002C                     _sprintf:
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1165                           ;sprintf@sp stored from wreg
  1166  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1167  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1168  002E  00B3               	movwf	sprintf@sp
  1169  002F                     l1958:
  1170                           
  1171                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 505: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 506: {;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 507:  va_list ap;;/opt/microchip/xc8/
      +                          v2.31/pic/sources/c90/common/doprnt.c: 512:  char c;;/opt/microchip/xc8/v2.31/pic/source
      +                          s/c90/common/doprnt.c: 521:  signed char prec;;/opt/microchip/xc8/v2.31/pic/sources/c90/
      +                          common/doprnt.c: 525:  unsigned char flag;;/opt/microchip/xc8/v2.31/pic/sources/c90/comm
      +                          on/doprnt.c: 543:  } tmpval;
  1172  002F  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1173  0030  00AC               	movwf	??_sprintf
  1174  0031  082C               	movf	??_sprintf,w
  1175  0032  00AF               	movwf	sprintf@ap
  1176                           
  1177                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  1178  0033  297A               	goto	l2036
  1179  0034                     l1960:
  1180                           
  1181                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 555:   if(c != '%')
  1182  0034  3025               	movlw	37
  1183  0035  0635               	xorwf	sprintf@c,w
  1184  0036  1903               	btfsc	3,2
  1185  0037  2839               	goto	u1011
  1186  0038  283A               	goto	u1010
  1187  0039                     u1011:
  1188  0039  2846               	goto	l1966
  1189  003A                     u1010:
  1190  003A                     l1962:
  1191                           
  1192                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 557:   {;/opt/microchip/xc8/v
      +                          2.31/pic/sources/c90/common/doprnt.c: 558:    ((*sp++ = (c)));
  1193  003A  0835               	movf	sprintf@c,w
  1194  003B  00AC               	movwf	??_sprintf
  1195  003C  0833               	movf	sprintf@sp,w
  1196  003D  0084               	movwf	4
  1197  003E  082C               	movf	??_sprintf,w
  1198  003F  1383               	bcf	3,7	;select IRP bank0
  1199  0040  0080               	movwf	0
  1200  0041                     l1964:
  1201  0041  3001               	movlw	1
  1202  0042  00AC               	movwf	??_sprintf
  1203  0043  082C               	movf	??_sprintf,w
  1204  0044  07B3               	addwf	sprintf@sp,f
  1205                           
  1206                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 559:    continue;
  1207  0045  297A               	goto	l2036
  1208  0046                     l1966:
  1209                           
  1210                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 565:   flag = 0;
  1211  0046  01B0               	clrf	sprintf@flag
  1212  0047                     l1968:
  1213                           
  1214                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 628:   if(*f == '.') {
  1215  0047  0829               	movf	sprintf@f,w
  1216  0048  0084               	movwf	4
  1217  0049  120A  118A  2400  120A  118A  	fcall	stringdir
  1218  004E  3A2E               	xorlw	46
  1219  004F  1D03               	skipz
  1220  0050  2852               	goto	u1021
  1221  0051  2853               	goto	u1020
  1222  0052                     u1021:
  1223  0052  288A               	goto	l1982
  1224  0053                     u1020:
  1225  0053                     l1970:
  1226                           
  1227                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 630:    f++;
  1228  0053  3001               	movlw	1
  1229  0054  00AC               	movwf	??_sprintf
  1230  0055  082C               	movf	??_sprintf,w
  1231  0056  07A9               	addwf	sprintf@f,f
  1232  0057                     l1972:
  1233                           
  1234                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 644:    {;/opt/microchip/xc8/
      +                          v2.31/pic/sources/c90/common/doprnt.c: 645:     prec = 0;
  1235  0057  01B4               	clrf	sprintf@prec
  1236                           
  1237                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 646:     while(isdigit((unsig
      +                          ned)*f)) {
  1238  0058  2879               	goto	l1980
  1239  0059                     l1974:
  1240                           
  1241                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 647:      prec *= 10;
  1242  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1243  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1244  005B  0834               	movf	sprintf@prec,w
  1245  005C  00AC               	movwf	??_sprintf
  1246  005D  082C               	movf	??_sprintf,w
  1247  005E  00F3               	movwf	___bmul@multiplicand
  1248  005F  300A               	movlw	10
  1249  0060  120A  118A  252D  120A  118A  	fcall	___bmul
  1250  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0067  00AD               	movwf	??_sprintf+1
  1253  0068  082D               	movf	??_sprintf+1,w
  1254  0069  00B4               	movwf	sprintf@prec
  1255  006A                     l1976:
  1256                           
  1257                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 648:         prec += *f++ - '
      +                          0';
  1258  006A  0829               	movf	sprintf@f,w
  1259  006B  0084               	movwf	4
  1260  006C  120A  118A  2400  120A  118A  	fcall	stringdir
  1261  0071  3ED0               	addlw	-48
  1262  0072  00AC               	movwf	??_sprintf
  1263  0073  082C               	movf	??_sprintf,w
  1264  0074  07B4               	addwf	sprintf@prec,f
  1265  0075                     l1978:
  1266  0075  3001               	movlw	1
  1267  0076  00AC               	movwf	??_sprintf
  1268  0077  082C               	movf	??_sprintf,w
  1269  0078  07A9               	addwf	sprintf@f,f
  1270  0079                     l1980:
  1271                           
  1272                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 646:     while(isdigit((unsig
      +                          ned)*f)) {
  1273  0079  0829               	movf	sprintf@f,w
  1274  007A  0084               	movwf	4
  1275  007B  120A  118A  2400  120A  118A  	fcall	stringdir
  1276  0080  120A  118A  2555  120A  118A  	fcall	_isdigit
  1277  0085  1803               	btfsc	3,0
  1278  0086  2888               	goto	u1031
  1279  0087  2889               	goto	u1030
  1280  0088                     u1031:
  1281  0088  2859               	goto	l1974
  1282  0089                     u1030:
  1283  0089  288B               	goto	l1986
  1284  008A                     l1982:
  1285                           
  1286                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 652:    prec = 0;
  1287  008A  01B4               	clrf	sprintf@prec
  1288  008B                     l1986:
  1289  008B  3001               	movlw	1
  1290  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1291  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1292  008E  07A9               	addwf	sprintf@f,f
  1293  008F  30FF               	movlw	-1
  1294  0090  0729               	addwf	sprintf@f,w
  1295  0091  0084               	movwf	4
  1296  0092  120A  118A  2400  120A  118A  	fcall	stringdir
  1297  0097  00B5               	movwf	sprintf@c
  1298  0098  00AC               	movwf	??_sprintf
  1299  0099  01AD               	clrf	??_sprintf+1
  1300                           
  1301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1302                           ; Switch size 1, requested type "simple"
  1303                           ; Number of cases is 1, Range of values is 0 to 0
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte            4     3 (average)
  1307                           ; direct_byte           11     8 (fixed)
  1308                           ; jumptable            260     6 (fixed)
  1309                           ;	Chosen strategy is simple_byte
  1310  009A  082D               	movf	??_sprintf+1,w
  1311  009B  3A00               	xorlw	0	; case 0
  1312  009C  1903               	skipnz
  1313  009D  289F               	goto	l2162
  1314  009E  297A               	goto	l2036
  1315  009F                     l2162:
  1316                           
  1317                           ; Switch size 1, requested type "simple"
  1318                           ; Number of cases is 3, Range of values is 0 to 105
  1319                           ; switch strategies available:
  1320                           ; Name         Instructions Cycles
  1321                           ; simple_byte           10     6 (average)
  1322                           ; jumptable            260     6 (fixed)
  1323                           ;	Chosen strategy is simple_byte
  1324  009F  082C               	movf	??_sprintf,w
  1325  00A0  3A00               	xorlw	0	; case 0
  1326  00A1  1903               	skipnz
  1327  00A2  298C               	goto	l2038
  1328  00A3  3A64               	xorlw	100	; case 100
  1329  00A4  1903               	skipnz
  1330  00A5  28AA               	goto	l1988
  1331  00A6  3A0D               	xorlw	13	; case 105
  1332  00A7  1903               	skipnz
  1333  00A8  28AA               	goto	l1988
  1334  00A9  297A               	goto	l2036
  1335  00AA                     l1988:
  1336                           
  1337                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1279:   {;/opt/microchip/xc8/
      +                          v2.31/pic/sources/c90/common/doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((
      +                          *(int **)ap), (int)0));
  1338  00AA  082F               	movf	sprintf@ap,w
  1339  00AB  0084               	movwf	4
  1340  00AC  1383               	bcf	3,7	;select IRP bank0
  1341  00AD  0800               	movf	0,w
  1342  00AE  00B1               	movwf	sprintf@val
  1343  00AF  0A84               	incf	4,f
  1344  00B0  0800               	movf	0,w
  1345  00B1  00B2               	movwf	sprintf@val+1
  1346  00B2                     l1990:
  1347  00B2  3002               	movlw	2
  1348  00B3  00AC               	movwf	??_sprintf
  1349  00B4  082C               	movf	??_sprintf,w
  1350  00B5  07AF               	addwf	sprintf@ap,f
  1351  00B6                     l1992:
  1352                           
  1353                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1287:    if((int)val < 0) {
  1354  00B6  1FB2               	btfss	sprintf@val+1,7
  1355  00B7  28B9               	goto	u1041
  1356  00B8  28BA               	goto	u1040
  1357  00B9                     u1041:
  1358  00B9  28C3               	goto	l1998
  1359  00BA                     u1040:
  1360  00BA                     l1994:
  1361                           
  1362                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1288:     flag |= 0x03;
  1363  00BA  3003               	movlw	3
  1364  00BB  00AC               	movwf	??_sprintf
  1365  00BC  082C               	movf	??_sprintf,w
  1366  00BD  04B0               	iorwf	sprintf@flag,f
  1367  00BE                     l1996:
  1368                           
  1369                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1289:     val = -val;
  1370  00BE  09B1               	comf	sprintf@val,f
  1371  00BF  09B2               	comf	sprintf@val+1,f
  1372  00C0  0AB1               	incf	sprintf@val,f
  1373  00C1  1903               	skipnz
  1374  00C2  0AB2               	incf	sprintf@val+1,f
  1375  00C3                     l1998:
  1376                           
  1377                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1292:   };/opt/microchip/xc8/
      +                          v2.31/pic/sources/c90/common/doprnt.c: 1316:   if(prec == 0 && val == 0)
  1378  00C3  0834               	movf	sprintf@prec,w
  1379  00C4  1D03               	btfss	3,2
  1380  00C5  28C7               	goto	u1051
  1381  00C6  28C8               	goto	u1050
  1382  00C7                     u1051:
  1383  00C7  28D2               	goto	l2004
  1384  00C8                     u1050:
  1385  00C8                     l2000:
  1386  00C8  0831               	movf	sprintf@val,w
  1387  00C9  0432               	iorwf	sprintf@val+1,w
  1388  00CA  1D03               	btfss	3,2
  1389  00CB  28CD               	goto	u1061
  1390  00CC  28CE               	goto	u1060
  1391  00CD                     u1061:
  1392  00CD  28D2               	goto	l2004
  1393  00CE                     u1060:
  1394  00CE                     l2002:
  1395                           
  1396                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1317:    prec++;
  1397  00CE  3001               	movlw	1
  1398  00CF  00AC               	movwf	??_sprintf
  1399  00D0  082C               	movf	??_sprintf,w
  1400  00D1  07B4               	addwf	sprintf@prec,f
  1401  00D2                     l2004:
  1402                           
  1403                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1331:    for(c = 1 ; c != siz
      +                          eof dpowers/sizeof dpowers[0] ; c++)
  1404  00D2  01B5               	clrf	sprintf@c
  1405  00D3  0AB5               	incf	sprintf@c,f
  1406  00D4                     l2008:
  1407                           
  1408                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1332:     if(val < dpowers[c]
      +                          )
  1409  00D4  0835               	movf	sprintf@c,w
  1410  00D5  00AC               	movwf	??_sprintf
  1411  00D6  072C               	addwf	??_sprintf,w
  1412  00D7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1413  00D8  0084               	movwf	4
  1414  00D9  120A  118A  2400  120A  118A  	fcall	stringdir
  1415  00DE  00AD               	movwf	??_sprintf+1
  1416  00DF  120A  118A  2400  120A  118A  	fcall	stringdir
  1417  00E4  00AE               	movwf	??_sprintf+2
  1418  00E5  082E               	movf	??_sprintf+2,w
  1419  00E6  0232               	subwf	sprintf@val+1,w
  1420  00E7  1D03               	skipz
  1421  00E8  28EB               	goto	u1075
  1422  00E9  082D               	movf	??_sprintf+1,w
  1423  00EA  0231               	subwf	sprintf@val,w
  1424  00EB                     u1075:
  1425  00EB  1803               	skipnc
  1426  00EC  28EE               	goto	u1071
  1427  00ED  28EF               	goto	u1070
  1428  00EE                     u1071:
  1429  00EE  28F0               	goto	l2012
  1430  00EF                     u1070:
  1431  00EF  28FA               	goto	l2014
  1432  00F0                     l2012:
  1433  00F0  3001               	movlw	1
  1434  00F1  00AC               	movwf	??_sprintf
  1435  00F2  082C               	movf	??_sprintf,w
  1436  00F3  07B5               	addwf	sprintf@c,f
  1437  00F4  3005               	movlw	5
  1438  00F5  0635               	xorwf	sprintf@c,w
  1439  00F6  1D03               	btfss	3,2
  1440  00F7  28F9               	goto	u1081
  1441  00F8  28FA               	goto	u1080
  1442  00F9                     u1081:
  1443  00F9  28D4               	goto	l2008
  1444  00FA                     u1080:
  1445  00FA                     l2014:
  1446                           
  1447                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1365:   if(c < prec)
  1448  00FA  0834               	movf	sprintf@prec,w
  1449  00FB  00AC               	movwf	??_sprintf
  1450  00FC  01AD               	clrf	??_sprintf+1
  1451  00FD  1BAC               	btfsc	??_sprintf,7
  1452  00FE  03AD               	decf	??_sprintf+1,f
  1453  00FF  082D               	movf	??_sprintf+1,w
  1454  0100  3A80               	xorlw	128
  1455  0101  3C80               	sublw	128
  1456  0102  1D03               	skipz
  1457  0103  2906               	goto	u1095
  1458  0104  082C               	movf	??_sprintf,w
  1459  0105  0235               	subwf	sprintf@c,w
  1460  0106                     u1095:
  1461  0106  1803               	skipnc
  1462  0107  2909               	goto	u1091
  1463  0108  290A               	goto	u1090
  1464  0109                     u1091:
  1465  0109  290B               	goto	l2018
  1466  010A                     u1090:
  1467  010A                     l2016:
  1468  010A  2925               	goto	l2022
  1469  010B                     l2018:
  1470  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1471  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1472  010D  0834               	movf	sprintf@prec,w
  1473  010E  00AC               	movwf	??_sprintf
  1474  010F  01AD               	clrf	??_sprintf+1
  1475  0110  1BAC               	btfsc	??_sprintf,7
  1476  0111  03AD               	decf	??_sprintf+1,f
  1477  0112  082D               	movf	??_sprintf+1,w
  1478  0113  3A80               	xorlw	128
  1479  0114  00AE               	movwf	??_sprintf+2
  1480  0115  3080               	movlw	128
  1481  0116  022E               	subwf	??_sprintf+2,w
  1482  0117  1D03               	skipz
  1483  0118  291B               	goto	u1105
  1484  0119  0835               	movf	sprintf@c,w
  1485  011A  022C               	subwf	??_sprintf,w
  1486  011B                     u1105:
  1487  011B  1803               	skipnc
  1488  011C  291E               	goto	u1101
  1489  011D  291F               	goto	u1100
  1490  011E                     u1101:
  1491  011E  2925               	goto	l2022
  1492  011F                     u1100:
  1493  011F                     l2020:
  1494                           
  1495                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1368:    prec = c;
  1496  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0121  0835               	movf	sprintf@c,w
  1499  0122  00AC               	movwf	??_sprintf
  1500  0123  082C               	movf	??_sprintf,w
  1501  0124  00B4               	movwf	sprintf@prec
  1502  0125                     l2022:
  1503                           
  1504                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1448:   {;/opt/microchip/xc8/
      +                          v2.31/pic/sources/c90/common/doprnt.c: 1464:    if(flag & 0x03)
  1505  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0127  0830               	movf	sprintf@flag,w
  1508  0128  3903               	andlw	3
  1509  0129  1903               	btfsc	3,2
  1510  012A  292C               	goto	u1111
  1511  012B  292D               	goto	u1110
  1512  012C                     u1111:
  1513  012C  2971               	goto	l2034
  1514  012D                     u1110:
  1515  012D                     l2024:
  1516                           
  1517                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1465:     ((*sp++ = ('-')));
  1518  012D  302D               	movlw	45
  1519  012E  00AC               	movwf	??_sprintf
  1520  012F  0833               	movf	sprintf@sp,w
  1521  0130  0084               	movwf	4
  1522  0131  082C               	movf	??_sprintf,w
  1523  0132  1383               	bcf	3,7	;select IRP bank0
  1524  0133  0080               	movwf	0
  1525  0134                     l2026:
  1526  0134  3001               	movlw	1
  1527  0135  00AC               	movwf	??_sprintf
  1528  0136  082C               	movf	??_sprintf,w
  1529  0137  07B3               	addwf	sprintf@sp,f
  1530  0138  2971               	goto	l2034
  1531  0139                     l2028:
  1532                           
  1533                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1504:    {;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c90/common/doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec
      +                          ]) % 10 + '0';
  1534  0139  300A               	movlw	10
  1535  013A  00A3               	movwf	___lwmod@divisor
  1536  013B  3000               	movlw	0
  1537  013C  00A4               	movwf	___lwmod@divisor+1
  1538  013D  0834               	movf	sprintf@prec,w
  1539  013E  00AC               	movwf	??_sprintf
  1540  013F  072C               	addwf	??_sprintf,w
  1541  0140  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1542  0141  0084               	movwf	4
  1543  0142  120A  118A  2400  120A  118A  	fcall	stringdir
  1544  0147  00F3               	movwf	___lwdiv@divisor
  1545  0148  120A  118A  2400  120A  118A  	fcall	stringdir
  1546  014D  00F4               	movwf	___lwdiv@divisor+1
  1547  014E  0832               	movf	sprintf@val+1,w
  1548  014F  00F6               	movwf	___lwdiv@dividend+1
  1549  0150  0831               	movf	sprintf@val,w
  1550  0151  00F5               	movwf	___lwdiv@dividend
  1551  0152  120A  118A  2366  120A  118A  	fcall	___lwdiv
  1552  0157  0874               	movf	?___lwdiv+1,w
  1553  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1555  015A  00A6               	movwf	___lwmod@dividend+1
  1556  015B  0873               	movf	?___lwdiv,w
  1557  015C  00A5               	movwf	___lwmod@dividend
  1558  015D  120A  118A  23AC  120A  118A  	fcall	___lwmod
  1559  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0164  0823               	movf	?___lwmod,w
  1562  0165  3E30               	addlw	48
  1563  0166  00AD               	movwf	??_sprintf+1
  1564  0167  082D               	movf	??_sprintf+1,w
  1565  0168  00B5               	movwf	sprintf@c
  1566  0169                     l2030:
  1567                           
  1568                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1549:    };/opt/microchip/xc8
      +                          /v2.31/pic/sources/c90/common/doprnt.c: 1550:    ((*sp++ = (c)));
  1569  0169  0835               	movf	sprintf@c,w
  1570  016A  00AC               	movwf	??_sprintf
  1571  016B  0833               	movf	sprintf@sp,w
  1572  016C  0084               	movwf	4
  1573  016D  082C               	movf	??_sprintf,w
  1574  016E  1383               	bcf	3,7	;select IRP bank0
  1575  016F  0080               	movwf	0
  1576  0170  2934               	goto	l2026
  1577  0171                     l2034:
  1578                           
  1579                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  1580  0171  30FF               	movlw	255
  1581  0172  00AC               	movwf	??_sprintf
  1582  0173  082C               	movf	??_sprintf,w
  1583  0174  07B4               	addwf	sprintf@prec,f
  1584  0175  0A34               	incf	sprintf@prec,w
  1585  0176  1D03               	btfss	3,2
  1586  0177  2979               	goto	u1121
  1587  0178  297A               	goto	u1120
  1588  0179                     u1121:
  1589  0179  2939               	goto	l2028
  1590  017A                     u1120:
  1591  017A                     l2036:
  1592                           
  1593                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  1594  017A  3001               	movlw	1
  1595  017B  07A9               	addwf	sprintf@f,f
  1596  017C  30FF               	movlw	-1
  1597  017D  0729               	addwf	sprintf@f,w
  1598  017E  0084               	movwf	4
  1599  017F  120A  118A  2400  120A  118A  	fcall	stringdir
  1600  0184  00AC               	movwf	??_sprintf
  1601  0185  082C               	movf	??_sprintf,w
  1602  0186  00B5               	movwf	sprintf@c
  1603  0187  0835               	movf	sprintf@c,w
  1604  0188  1D03               	btfss	3,2
  1605  0189  298B               	goto	u1131
  1606  018A  298C               	goto	u1130
  1607  018B                     u1131:
  1608  018B  2834               	goto	l1960
  1609  018C                     u1130:
  1610  018C                     l2038:
  1611                           
  1612                           ;/opt/microchip/xc8/v2.31/pic/sources/c90/common/doprnt.c: 1564:  *sp = 0;
  1613  018C  0833               	movf	sprintf@sp,w
  1614  018D  0084               	movwf	4
  1615  018E  1383               	bcf	3,7	;select IRP bank0
  1616  018F  0180               	clrf	0
  1617  0190                     l371:
  1618  0190  0008               	return
  1619  0191                     __end_of_sprintf:
  1620                           
  1621                           	psect	text2
  1622  0555                     __ptext2:	
  1623 ;; *************** function _isdigit *****************
  1624 ;; Defined at:
  1625 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/isdigit.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  c               1    wreg     unsigned char 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  c               1    4[COMMON] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;		None               void
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0
  1642 ;;      Totals:         2       0       0       0       0
  1643 ;;Total ram usage:        2 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_sprintf
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _isdigit
  1655  0555                     _isdigit:
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1659                           ;isdigit@c stored from wreg
  1660  0555  00F4               	movwf	isdigit@c
  1661  0556                     l1420:
  1662  0556  01F3               	clrf	_isdigit$1092
  1663  0557                     l1422:
  1664  0557  303A               	movlw	58
  1665  0558  0274               	subwf	isdigit@c,w
  1666  0559  1803               	skipnc
  1667  055A  2D5C               	goto	u501
  1668  055B  2D5D               	goto	u500
  1669  055C                     u501:
  1670  055C  2D65               	goto	l1428
  1671  055D                     u500:
  1672  055D                     l1424:
  1673  055D  3030               	movlw	48
  1674  055E  0274               	subwf	isdigit@c,w
  1675  055F  1C03               	skipc
  1676  0560  2D62               	goto	u511
  1677  0561  2D63               	goto	u510
  1678  0562                     u511:
  1679  0562  2D65               	goto	l1428
  1680  0563                     u510:
  1681  0563                     l1426:
  1682  0563  01F3               	clrf	_isdigit$1092
  1683  0564  0AF3               	incf	_isdigit$1092,f
  1684  0565                     l1428:
  1685  0565  0C73               	rrf	_isdigit$1092,w
  1686  0566                     l828:
  1687  0566  0008               	return
  1688  0567                     __end_of_isdigit:
  1689                           
  1690                           	psect	text3
  1691  03AC                     __ptext3:	
  1692 ;; *************** function ___lwmod *****************
  1693 ;; Defined at:
  1694 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwmod.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  divisor         2    3[BANK0 ] unsigned int 
  1697 ;;  dividend        2    5[BANK0 ] unsigned int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  counter         1    8[BANK0 ] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2    3[BANK0 ] unsigned int 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       4       0       0       0
  1710 ;;      Locals:         0       1       0       0       0
  1711 ;;      Temps:          0       1       0       0       0
  1712 ;;      Totals:         0       6       0       0       0
  1713 ;;Total ram usage:        6 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    1
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_sprintf
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function ___lwmod
  1725  03AC                     ___lwmod:
  1726  03AC                     l1472:	
  1727                           ;incstack = 0
  1728                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1729                           
  1730  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1731  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1732  03AE  0823               	movf	___lwmod@divisor,w
  1733  03AF  0424               	iorwf	___lwmod@divisor+1,w
  1734  03B0  1903               	btfsc	3,2
  1735  03B1  2BB3               	goto	u611
  1736  03B2  2BB4               	goto	u610
  1737  03B3                     u611:
  1738  03B3  2BE3               	goto	l1490
  1739  03B4                     u610:
  1740  03B4                     l1474:
  1741  03B4  01A8               	clrf	___lwmod@counter
  1742  03B5  0AA8               	incf	___lwmod@counter,f
  1743  03B6  2BC2               	goto	l1480
  1744  03B7                     l1476:
  1745  03B7  3001               	movlw	1
  1746  03B8                     u625:
  1747  03B8  1003               	clrc
  1748  03B9  0DA3               	rlf	___lwmod@divisor,f
  1749  03BA  0DA4               	rlf	___lwmod@divisor+1,f
  1750  03BB  3EFF               	addlw	-1
  1751  03BC  1D03               	skipz
  1752  03BD  2BB8               	goto	u625
  1753  03BE                     l1478:
  1754  03BE  3001               	movlw	1
  1755  03BF  00A7               	movwf	??___lwmod
  1756  03C0  0827               	movf	??___lwmod,w
  1757  03C1  07A8               	addwf	___lwmod@counter,f
  1758  03C2                     l1480:
  1759  03C2  1FA4               	btfss	___lwmod@divisor+1,7
  1760  03C3  2BC5               	goto	u631
  1761  03C4  2BC6               	goto	u630
  1762  03C5                     u631:
  1763  03C5  2BB7               	goto	l1476
  1764  03C6                     u630:
  1765  03C6                     l1482:
  1766  03C6  0824               	movf	___lwmod@divisor+1,w
  1767  03C7  0226               	subwf	___lwmod@dividend+1,w
  1768  03C8  1D03               	skipz
  1769  03C9  2BCC               	goto	u645
  1770  03CA  0823               	movf	___lwmod@divisor,w
  1771  03CB  0225               	subwf	___lwmod@dividend,w
  1772  03CC                     u645:
  1773  03CC  1C03               	skipc
  1774  03CD  2BCF               	goto	u641
  1775  03CE  2BD0               	goto	u640
  1776  03CF                     u641:
  1777  03CF  2BD6               	goto	l1486
  1778  03D0                     u640:
  1779  03D0                     l1484:
  1780  03D0  0823               	movf	___lwmod@divisor,w
  1781  03D1  02A5               	subwf	___lwmod@dividend,f
  1782  03D2  0824               	movf	___lwmod@divisor+1,w
  1783  03D3  1C03               	skipc
  1784  03D4  03A6               	decf	___lwmod@dividend+1,f
  1785  03D5  02A6               	subwf	___lwmod@dividend+1,f
  1786  03D6                     l1486:
  1787  03D6  3001               	movlw	1
  1788  03D7                     u655:
  1789  03D7  1003               	clrc
  1790  03D8  0CA4               	rrf	___lwmod@divisor+1,f
  1791  03D9  0CA3               	rrf	___lwmod@divisor,f
  1792  03DA  3EFF               	addlw	-1
  1793  03DB  1D03               	skipz
  1794  03DC  2BD7               	goto	u655
  1795  03DD                     l1488:
  1796  03DD  3001               	movlw	1
  1797  03DE  02A8               	subwf	___lwmod@counter,f
  1798  03DF  1D03               	btfss	3,2
  1799  03E0  2BE2               	goto	u661
  1800  03E1  2BE3               	goto	u660
  1801  03E2                     u661:
  1802  03E2  2BC6               	goto	l1482
  1803  03E3                     u660:
  1804  03E3                     l1490:
  1805  03E3  0826               	movf	___lwmod@dividend+1,w
  1806  03E4  00A4               	movwf	?___lwmod+1
  1807  03E5  0825               	movf	___lwmod@dividend,w
  1808  03E6  00A3               	movwf	?___lwmod
  1809  03E7                     l657:
  1810  03E7  0008               	return
  1811  03E8                     __end_of___lwmod:
  1812                           
  1813                           	psect	text4
  1814  0366                     __ptext4:	
  1815 ;; *************** function ___lwdiv *****************
  1816 ;; Defined at:
  1817 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/lwdiv.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  divisor         2    3[COMMON] unsigned int 
  1820 ;;  dividend        2    5[COMMON] unsigned int 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  quotient        2    1[BANK0 ] unsigned int 
  1823 ;;  counter         1    0[BANK0 ] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2    3[COMMON] unsigned int 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1833 ;;      Params:         4       0       0       0       0
  1834 ;;      Locals:         0       3       0       0       0
  1835 ;;      Temps:          1       0       0       0       0
  1836 ;;      Totals:         5       3       0       0       0
  1837 ;;Total ram usage:        8 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_sprintf
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function ___lwdiv
  1849  0366                     ___lwdiv:
  1850  0366                     l1878:	
  1851                           ;incstack = 0
  1852                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1853                           
  1854  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0368  01A1               	clrf	___lwdiv@quotient
  1857  0369  01A2               	clrf	___lwdiv@quotient+1
  1858  036A                     l1880:
  1859  036A  0873               	movf	___lwdiv@divisor,w
  1860  036B  0474               	iorwf	___lwdiv@divisor+1,w
  1861  036C  1903               	btfsc	3,2
  1862  036D  2B6F               	goto	u941
  1863  036E  2B70               	goto	u940
  1864  036F                     u941:
  1865  036F  2BA7               	goto	l1900
  1866  0370                     u940:
  1867  0370                     l1882:
  1868  0370  01A0               	clrf	___lwdiv@counter
  1869  0371  0AA0               	incf	___lwdiv@counter,f
  1870  0372  2B7E               	goto	l1888
  1871  0373                     l1884:
  1872  0373  3001               	movlw	1
  1873  0374                     u955:
  1874  0374  1003               	clrc
  1875  0375  0DF3               	rlf	___lwdiv@divisor,f
  1876  0376  0DF4               	rlf	___lwdiv@divisor+1,f
  1877  0377  3EFF               	addlw	-1
  1878  0378  1D03               	skipz
  1879  0379  2B74               	goto	u955
  1880  037A                     l1886:
  1881  037A  3001               	movlw	1
  1882  037B  00F7               	movwf	??___lwdiv
  1883  037C  0877               	movf	??___lwdiv,w
  1884  037D  07A0               	addwf	___lwdiv@counter,f
  1885  037E                     l1888:
  1886  037E  1FF4               	btfss	___lwdiv@divisor+1,7
  1887  037F  2B81               	goto	u961
  1888  0380  2B82               	goto	u960
  1889  0381                     u961:
  1890  0381  2B73               	goto	l1884
  1891  0382                     u960:
  1892  0382                     l1890:
  1893  0382  3001               	movlw	1
  1894  0383                     u975:
  1895  0383  1003               	clrc
  1896  0384  0DA1               	rlf	___lwdiv@quotient,f
  1897  0385  0DA2               	rlf	___lwdiv@quotient+1,f
  1898  0386  3EFF               	addlw	-1
  1899  0387  1D03               	skipz
  1900  0388  2B83               	goto	u975
  1901  0389  0874               	movf	___lwdiv@divisor+1,w
  1902  038A  0276               	subwf	___lwdiv@dividend+1,w
  1903  038B  1D03               	skipz
  1904  038C  2B8F               	goto	u985
  1905  038D  0873               	movf	___lwdiv@divisor,w
  1906  038E  0275               	subwf	___lwdiv@dividend,w
  1907  038F                     u985:
  1908  038F  1C03               	skipc
  1909  0390  2B92               	goto	u981
  1910  0391  2B93               	goto	u980
  1911  0392                     u981:
  1912  0392  2B9A               	goto	l1896
  1913  0393                     u980:
  1914  0393                     l1892:
  1915  0393  0873               	movf	___lwdiv@divisor,w
  1916  0394  02F5               	subwf	___lwdiv@dividend,f
  1917  0395  0874               	movf	___lwdiv@divisor+1,w
  1918  0396  1C03               	skipc
  1919  0397  03F6               	decf	___lwdiv@dividend+1,f
  1920  0398  02F6               	subwf	___lwdiv@dividend+1,f
  1921  0399                     l1894:
  1922  0399  1421               	bsf	___lwdiv@quotient,0
  1923  039A                     l1896:
  1924  039A  3001               	movlw	1
  1925  039B                     u995:
  1926  039B  1003               	clrc
  1927  039C  0CF4               	rrf	___lwdiv@divisor+1,f
  1928  039D  0CF3               	rrf	___lwdiv@divisor,f
  1929  039E  3EFF               	addlw	-1
  1930  039F  1D03               	skipz
  1931  03A0  2B9B               	goto	u995
  1932  03A1                     l1898:
  1933  03A1  3001               	movlw	1
  1934  03A2  02A0               	subwf	___lwdiv@counter,f
  1935  03A3  1D03               	btfss	3,2
  1936  03A4  2BA6               	goto	u1001
  1937  03A5  2BA7               	goto	u1000
  1938  03A6                     u1001:
  1939  03A6  2B82               	goto	l1890
  1940  03A7                     u1000:
  1941  03A7                     l1900:
  1942  03A7  0822               	movf	___lwdiv@quotient+1,w
  1943  03A8  00F4               	movwf	?___lwdiv+1
  1944  03A9  0821               	movf	___lwdiv@quotient,w
  1945  03AA  00F3               	movwf	?___lwdiv
  1946  03AB                     l647:
  1947  03AB  0008               	return
  1948  03AC                     __end_of___lwdiv:
  1949                           
  1950                           	psect	text5
  1951  052D                     __ptext5:	
  1952 ;; *************** function ___bmul *****************
  1953 ;; Defined at:
  1954 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/Umul8.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  multiplier      1    wreg     unsigned char 
  1957 ;;  multiplicand    1    3[COMMON] unsigned char 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  multiplier      1    6[COMMON] unsigned char 
  1960 ;;  product         1    5[COMMON] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      unsigned char 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         1       0       0       0       0
  1971 ;;      Locals:         2       0       0       0       0
  1972 ;;      Temps:          1       0       0       0       0
  1973 ;;      Totals:         4       0       0       0       0
  1974 ;;Total ram usage:        4 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_sprintf
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function ___bmul
  1986  052D                     ___bmul:
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1990                           ;___bmul@multiplier stored from wreg
  1991  052D  00F6               	movwf	___bmul@multiplier
  1992  052E                     l1432:
  1993  052E  01F5               	clrf	___bmul@product
  1994  052F                     l1434:
  1995  052F  1C76               	btfss	___bmul@multiplier,0
  1996  0530  2D32               	goto	u521
  1997  0531  2D33               	goto	u520
  1998  0532                     u521:
  1999  0532  2D37               	goto	l1438
  2000  0533                     u520:
  2001  0533                     l1436:
  2002  0533  0873               	movf	___bmul@multiplicand,w
  2003  0534  00F4               	movwf	??___bmul
  2004  0535  0874               	movf	??___bmul,w
  2005  0536  07F5               	addwf	___bmul@product,f
  2006  0537                     l1438:
  2007  0537  1003               	clrc
  2008  0538  0DF3               	rlf	___bmul@multiplicand,f
  2009  0539                     l1440:
  2010  0539  1003               	clrc
  2011  053A  0CF6               	rrf	___bmul@multiplier,f
  2012  053B  0876               	movf	___bmul@multiplier,w
  2013  053C  1D03               	btfss	3,2
  2014  053D  2D3F               	goto	u531
  2015  053E  2D40               	goto	u530
  2016  053F                     u531:
  2017  053F  2D2F               	goto	l1434
  2018  0540                     u530:
  2019  0540                     l1442:
  2020  0540  0875               	movf	___bmul@product,w
  2021  0541                     l401:
  2022  0541  0008               	return
  2023  0542                     __end_of___bmul:
  2024                           
  2025                           	psect	text6
  2026  031C                     __ptext6:	
  2027 ;; *************** function _setup *****************
  2028 ;; Defined at:
  2029 ;;		line 252 in file "main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    4
  2050 ;; This function calls:
  2051 ;;		_eusart_enable_tx_isr
  2052 ;;		_eusart_init_tx
  2053 ;;		_lcd_cmd
  2054 ;;		_lcd_init
  2055 ;;		_spi_init
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _setup
  2063  031C                     _setup:
  2064  031C                     l1904:	
  2065                           ;incstack = 0
  2066                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2067                           
  2068                           
  2069                           ;main.c: 254:     ANSEL = 0x03;
  2070  031C  3003               	movlw	3
  2071  031D  1683               	bsf	3,5	;RP0=1, select bank3
  2072  031E  1703               	bsf	3,6	;RP1=1, select bank3
  2073  031F  0088               	movwf	8	;volatile
  2074  0320                     l1906:
  2075                           
  2076                           ;main.c: 255:     ANSELH = 0x00;
  2077  0320  0189               	clrf	9	;volatile
  2078  0321                     l1908:
  2079                           
  2080                           ;main.c: 257:     TRISA = 0x00;
  2081  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2083  0323  0185               	clrf	5	;volatile
  2084  0324                     l1910:
  2085                           
  2086                           ;main.c: 258:     TRISB = 0x00;
  2087  0324  0186               	clrf	6	;volatile
  2088  0325                     l1912:
  2089                           
  2090                           ;main.c: 259:     TRISC = 0x90;
  2091  0325  3090               	movlw	144
  2092  0326  0087               	movwf	7	;volatile
  2093                           
  2094                           ;main.c: 260:     TRISD = 0x00;
  2095  0327  0188               	clrf	8	;volatile
  2096                           
  2097                           ;main.c: 261:     TRISE = 0x00;
  2098  0328  0189               	clrf	9	;volatile
  2099  0329                     l1914:
  2100                           
  2101                           ;main.c: 263:     PORTA = 6;
  2102  0329  3006               	movlw	6
  2103  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2104  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2105  032C  0085               	movwf	5	;volatile
  2106  032D                     l1916:
  2107                           
  2108                           ;main.c: 264:     PORTB = 0;
  2109  032D  0186               	clrf	6	;volatile
  2110  032E                     l1918:
  2111                           
  2112                           ;main.c: 265:     PORTC = 0;
  2113  032E  0187               	clrf	7	;volatile
  2114  032F                     l1920:
  2115                           
  2116                           ;main.c: 266:     PORTD = 0;
  2117  032F  0188               	clrf	8	;volatile
  2118  0330                     l1922:
  2119                           
  2120                           ;main.c: 267:     PORTE = 0;
  2121  0330  0189               	clrf	9	;volatile
  2122  0331                     l1924:
  2123                           
  2124                           ;main.c: 270:     IOCB = 0x00;
  2125  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2126  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2127  0333  0196               	clrf	22	;volatile
  2128  0334                     l1926:
  2129                           
  2130                           ;main.c: 271:     INTCONbits.RBIE = 0;
  2131  0334  118B               	bcf	11,3	;volatile
  2132  0335                     l1928:
  2133                           
  2134                           ;main.c: 272:     INTCONbits.T0IE = 0;
  2135  0335  128B               	bcf	11,5	;volatile
  2136  0336                     l1930:
  2137                           
  2138                           ;main.c: 273:     INTCONbits.PEIE = 1;
  2139  0336  170B               	bsf	11,6	;volatile
  2140  0337                     l1932:
  2141                           
  2142                           ;main.c: 274:     INTCONbits.GIE = 1;
  2143  0337  178B               	bsf	11,7	;volatile
  2144                           
  2145                           ;main.c: 276:     OSCCON = 0b01100001;
  2146  0338  3061               	movlw	97
  2147  0339  008F               	movwf	15	;volatile
  2148  033A                     l1934:
  2149                           
  2150                           ;main.c: 278:     OPTION_REGbits.T0CS = 0;
  2151  033A  1281               	bcf	1,5	;volatile
  2152  033B                     l1936:
  2153                           
  2154                           ;main.c: 279:     OPTION_REGbits.PSA = 0;
  2155  033B  1181               	bcf	1,3	;volatile
  2156  033C                     l1938:
  2157                           
  2158                           ;main.c: 280:     OPTION_REGbits.PS2 = 0;
  2159  033C  1101               	bcf	1,2	;volatile
  2160  033D                     l1940:
  2161                           
  2162                           ;main.c: 281:     OPTION_REGbits.PS1 = 0;
  2163  033D  1081               	bcf	1,1	;volatile
  2164  033E                     l1942:
  2165                           
  2166                           ;main.c: 282:     OPTION_REGbits.PS0 = 1;
  2167  033E  1401               	bsf	1,0	;volatile
  2168                           
  2169                           ;main.c: 284:     TMR0 = 6;;
  2170  033F  3006               	movlw	6
  2171  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0342  0081               	movwf	1	;volatile
  2174  0343                     l1944:
  2175                           
  2176                           ;main.c: 286:     INTCONbits.T0IF = 0;
  2177  0343  110B               	bcf	11,2	;volatile
  2178  0344                     l1946:
  2179                           
  2180                           ;main.c: 288:     lcd_init();
  2181  0344  120A  118A  2277  120A  118A  	fcall	_lcd_init
  2182  0349                     l1948:
  2183                           
  2184                           ;main.c: 289:     lcd_cmd(0x0c);
  2185  0349  300C               	movlw	12
  2186  034A  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2187  034F                     l1950:
  2188                           
  2189                           ;main.c: 291:     eusart_init_tx();
  2190  034F  120A  118A  2567  120A  118A  	fcall	_eusart_init_tx
  2191                           
  2192                           ;main.c: 292:     eusart_enable_tx_isr();
  2193  0354  120A  118A  2586  120A  118A  	fcall	_eusart_enable_tx_isr
  2194  0359                     l1952:
  2195                           
  2196                           ;main.c: 294:     spi_init(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  2197  0359  01F3               	clrf	spi_init@sDataSample
  2198  035A  01F4               	clrf	spi_init@sClockIdle
  2199  035B  01F5               	clrf	spi_init@sTransmitEdge
  2200  035C  3020               	movlw	32
  2201  035D  120A  118A  2517  120A  118A  	fcall	_spi_init
  2202  0362                     l1954:
  2203                           
  2204                           ;main.c: 296:     SSPBUF = 0x00;
  2205  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0364  0193               	clrf	19	;volatile
  2208  0365                     l143:
  2209  0365  0008               	return
  2210  0366                     __end_of_setup:
  2211                           
  2212                           	psect	text7
  2213  0517                     __ptext7:	
  2214 ;; *************** function _spi_init *****************
  2215 ;; Defined at:
  2216 ;;		line 12 in file "spi.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  sType           1    wreg     enum E1264
  2219 ;;  sDataSample     1    3[COMMON] enum E1272
  2220 ;;  sClockIdle      1    4[COMMON] enum E1276
  2221 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  sType           1    6[COMMON] enum E1264
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         3       0       0       0       0
  2234 ;;      Locals:         1       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0
  2236 ;;      Totals:         4       0       0       0       0
  2237 ;;Total ram usage:        4 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_setup
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _spi_init
  2249  0517                     _spi_init:
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _spi_init: [wreg+status,2+status,0]
  2253                           ;spi_init@sType stored from wreg
  2254  0517  00F6               	movwf	spi_init@sType
  2255  0518                     l1410:
  2256                           
  2257                           ;spi.c: 12: void spi_init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
  2258  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2260  051A  1287               	bcf	7,5	;volatile
  2261                           
  2262                           ;spi.c: 15:     if(sType & 0b00000100)
  2263  051B  1D76               	btfss	spi_init@sType,2
  2264  051C  2D1E               	goto	u491
  2265  051D  2D1F               	goto	u490
  2266  051E                     u491:
  2267  051E  2D23               	goto	l1416
  2268  051F                     u490:
  2269  051F                     l1412:
  2270                           
  2271                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
  2272  051F  0875               	movf	spi_init@sTransmitEdge,w
  2273  0520  0094               	movwf	20	;volatile
  2274  0521                     l1414:
  2275                           
  2276                           ;spi.c: 18:         TRISC3 = 1;
  2277  0521  1587               	bsf	7,3	;volatile
  2278                           
  2279                           ;spi.c: 19:     }
  2280  0522  2D27               	goto	l314
  2281  0523                     l1416:
  2282                           
  2283                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2284  0523  0873               	movf	spi_init@sDataSample,w
  2285  0524  0475               	iorwf	spi_init@sTransmitEdge,w
  2286  0525  0094               	movwf	20	;volatile
  2287  0526                     l1418:
  2288                           
  2289                           ;spi.c: 23:         TRISC3 = 0;
  2290  0526  1187               	bcf	7,3	;volatile
  2291  0527                     l314:	
  2292                           ;spi.c: 24:     }
  2293                           
  2294                           
  2295                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
  2296  0527  0876               	movf	spi_init@sType,w
  2297  0528  0474               	iorwf	spi_init@sClockIdle,w
  2298  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2299  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2300  052B  0094               	movwf	20	;volatile
  2301  052C                     l315:
  2302  052C  0008               	return
  2303  052D                     __end_of_spi_init:
  2304                           
  2305                           	psect	text8
  2306  0277                     __ptext8:	
  2307 ;; *************** function _lcd_init *****************
  2308 ;; Defined at:
  2309 ;;		line 8 in file "lcd.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0, pclath, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2323 ;;      Params:         0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0
  2325 ;;      Temps:          0       2       0       0       0
  2326 ;;      Totals:         0       2       0       0       0
  2327 ;;Total ram usage:        2 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    3
  2330 ;; This function calls:
  2331 ;;		_lcd_cmd
  2332 ;;		_lcd_port
  2333 ;; This function is called by:
  2334 ;;		_setup
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _lcd_init
  2340  0277                     _lcd_init:
  2341  0277                     l1868:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2344                           
  2345                           
  2346                           ;lcd.c: 10:     lcd_port(0x00);
  2347  0277  3000               	movlw	0
  2348  0278  120A  118A  258C  120A  118A  	fcall	_lcd_port
  2349  027D                     l1870:
  2350                           
  2351                           ;lcd.c: 11:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2352  027D  301A               	movlw	26
  2353  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2354  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0280  00A1               	movwf	??_lcd_init+1
  2356  0281  30F7               	movlw	247
  2357  0282  00A0               	movwf	??_lcd_init
  2358  0283                     u1167:
  2359  0283  0BA0               	decfsz	??_lcd_init,f
  2360  0284  2A83               	goto	u1167
  2361  0285  0BA1               	decfsz	??_lcd_init+1,f
  2362  0286  2A83               	goto	u1167
  2363  0287  2A88               	nop2
  2364  0288                     l1872:
  2365                           
  2366                           ;lcd.c: 13:     lcd_cmd(0x30);
  2367  0288  3030               	movlw	48
  2368  0289  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2369                           
  2370                           ;lcd.c: 14:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2371  028E  3007               	movlw	7
  2372  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0291  00A1               	movwf	??_lcd_init+1
  2375  0292  307C               	movlw	124
  2376  0293  00A0               	movwf	??_lcd_init
  2377  0294                     u1177:
  2378  0294  0BA0               	decfsz	??_lcd_init,f
  2379  0295  2A94               	goto	u1177
  2380  0296  0BA1               	decfsz	??_lcd_init+1,f
  2381  0297  2A94               	goto	u1177
  2382  0298  0000               	nop
  2383  0299                     l1874:
  2384                           
  2385                           ;lcd.c: 16:     lcd_cmd(0x30);
  2386  0299  3030               	movlw	48
  2387  029A  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2388  029F                     l1876:
  2389                           
  2390                           ;lcd.c: 17:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2391  029F  300F               	movlw	15
  2392  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2393  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2394  02A2  00A1               	movwf	??_lcd_init+1
  2395  02A3  3047               	movlw	71
  2396  02A4  00A0               	movwf	??_lcd_init
  2397  02A5                     u1187:
  2398  02A5  0BA0               	decfsz	??_lcd_init,f
  2399  02A6  2AA5               	goto	u1187
  2400  02A7  0BA1               	decfsz	??_lcd_init+1,f
  2401  02A8  2AA5               	goto	u1187
  2402                           
  2403                           ;lcd.c: 19:     lcd_cmd(0x30);
  2404  02A9  3030               	movlw	48
  2405  02AA  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2406                           
  2407                           ;lcd.c: 21:     lcd_cmd(0x38);
  2408  02AF  3038               	movlw	56
  2409  02B0  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2410                           
  2411                           ;lcd.c: 22:     lcd_cmd(0x10);
  2412  02B5  3010               	movlw	16
  2413  02B6  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2414                           
  2415                           ;lcd.c: 23:     lcd_cmd(0x01);
  2416  02BB  3001               	movlw	1
  2417  02BC  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2418                           
  2419                           ;lcd.c: 24:     lcd_cmd(0x06);
  2420  02C1  3006               	movlw	6
  2421  02C2  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2422                           
  2423                           ;lcd.c: 25:     lcd_cmd(0x0F);
  2424  02C7  300F               	movlw	15
  2425  02C8  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  2426  02CD                     l238:
  2427  02CD  0008               	return
  2428  02CE                     __end_of_lcd_init:
  2429                           
  2430                           	psect	text9
  2431  0567                     __ptext9:	
  2432 ;; *************** function _eusart_init_tx *****************
  2433 ;; Defined at:
  2434 ;;		line 14 in file "eusart.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    1
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_setup
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _eusart_init_tx
  2464  0567                     _eusart_init_tx:
  2465  0567                     l1394:	
  2466                           ;incstack = 0
  2467                           ; Regs used in _eusart_init_tx: [wreg+status,2]
  2468                           
  2469                           
  2470                           ;eusart.c: 16:     SPBRGH = 0;
  2471  0567  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0568  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0569  019A               	clrf	26	;volatile
  2474  056A                     l1396:
  2475                           
  2476                           ;eusart.c: 17:     SPBRG = 25;
  2477  056A  3019               	movlw	25
  2478  056B  0099               	movwf	25	;volatile
  2479  056C                     l1398:
  2480                           
  2481                           ;eusart.c: 18:     TXSTAbits.BRGH = 1;
  2482  056C  1518               	bsf	24,2	;volatile
  2483  056D                     l1400:
  2484                           
  2485                           ;eusart.c: 20:     TXSTAbits.SYNC = 0;
  2486  056D  1218               	bcf	24,4	;volatile
  2487  056E                     l1402:
  2488                           
  2489                           ;eusart.c: 21:     RCSTAbits.SPEN = 1;
  2490  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2491  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0570  1798               	bsf	24,7	;volatile
  2493  0571                     l1404:
  2494                           
  2495                           ;eusart.c: 23:     TXSTAbits.TX9 = 0;
  2496  0571  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0572  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0573  1318               	bcf	24,6	;volatile
  2499  0574                     l1406:
  2500                           
  2501                           ;eusart.c: 24:     TXSTAbits.TXEN = 1;
  2502  0574  1698               	bsf	24,5	;volatile
  2503  0575                     l283:
  2504  0575  0008               	return
  2505  0576                     __end_of_eusart_init_tx:
  2506                           
  2507                           	psect	text10
  2508  0586                     __ptext10:	
  2509 ;; *************** function _eusart_enable_tx_isr *****************
  2510 ;; Defined at:
  2511 ;;		line 27 in file "eusart.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		None
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_setup
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _eusart_enable_tx_isr
  2541  0586                     _eusart_enable_tx_isr:
  2542  0586                     l1408:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _eusart_enable_tx_isr: []
  2545                           
  2546                           
  2547                           ;eusart.c: 29:     INTCONbits.GIE = 1;
  2548  0586  178B               	bsf	11,7	;volatile
  2549                           
  2550                           ;eusart.c: 30:     INTCONbits.PEIE = 1;
  2551  0587  170B               	bsf	11,6	;volatile
  2552                           
  2553                           ;eusart.c: 31:     PIE1bits.TXIE = 1;
  2554  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2555  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2556  058A  160C               	bsf	12,4	;volatile
  2557  058B                     l286:
  2558  058B  0008               	return
  2559  058C                     __end_of_eusart_enable_tx_isr:
  2560                           
  2561                           	psect	text11
  2562  046E                     __ptext11:	
  2563 ;; *************** function _set_next_slave *****************
  2564 ;; Defined at:
  2565 ;;		line 193 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0
  2581 ;;      Temps:          1       0       0       0       0
  2582 ;;      Totals:         1       0       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _set_next_slave
  2595  046E                     _set_next_slave:
  2596  046E                     l1548:	
  2597                           ;incstack = 0
  2598                           ; Regs used in _set_next_slave: [wreg+status,2+status,0]
  2599                           
  2600                           
  2601                           ;main.c: 195:     if (!next_slave)
  2602  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2603  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0470  0839               	movf	_next_slave,w
  2605  0471  1D03               	btfss	3,2
  2606  0472  2C74               	goto	u671
  2607  0473  2C75               	goto	u670
  2608  0474                     u671:
  2609  0474  2C76               	goto	l1552
  2610  0475                     u670:
  2611  0475  2C9C               	goto	l134
  2612  0476                     l1552:
  2613                           
  2614                           ;main.c: 200:     next_slave = 0;
  2615  0476  01B9               	clrf	_next_slave
  2616  0477                     l1554:
  2617                           
  2618                           ;main.c: 202:     if (1 == slave_num)
  2619  0477  0350               	decf	_slave_num,w
  2620  0478  1D03               	btfss	3,2
  2621  0479  2C7B               	goto	u681
  2622  047A  2C7C               	goto	u680
  2623  047B                     u681:
  2624  047B  2C83               	goto	l1560
  2625  047C                     u680:
  2626  047C                     l1556:
  2627                           
  2628                           ;main.c: 203:     {;main.c: 204:         pot_data = spi_data;
  2629  047C  087A               	movf	_spi_data,w
  2630  047D  00F3               	movwf	??_set_next_slave
  2631  047E  0873               	movf	??_set_next_slave,w
  2632  047F  00D4               	movwf	_pot_data
  2633                           
  2634                           ;main.c: 205:         PORTA = 5;
  2635  0480  3005               	movlw	5
  2636  0481  0085               	movwf	5	;volatile
  2637  0482  2C9C               	goto	l134
  2638  0483                     l1560:
  2639                           
  2640                           ;main.c: 209:     if (2 == slave_num)
  2641  0483  3002               	movlw	2
  2642  0484  0650               	xorwf	_slave_num,w
  2643  0485  1D03               	btfss	3,2
  2644  0486  2C88               	goto	u691
  2645  0487  2C89               	goto	u690
  2646  0488                     u691:
  2647  0488  2C90               	goto	l1566
  2648  0489                     u690:
  2649  0489                     l1562:
  2650                           
  2651                           ;main.c: 210:     {;main.c: 211:         push_data = spi_data;
  2652  0489  087A               	movf	_spi_data,w
  2653  048A  00F3               	movwf	??_set_next_slave
  2654  048B  0873               	movf	??_set_next_slave,w
  2655  048C  00D3               	movwf	_push_data
  2656                           
  2657                           ;main.c: 212:         PORTA = 3;
  2658  048D  3003               	movlw	3
  2659  048E  0085               	movwf	5	;volatile
  2660  048F  2C9C               	goto	l134
  2661  0490                     l1566:
  2662                           
  2663                           ;main.c: 216:     if (3 == slave_num)
  2664  0490  3003               	movlw	3
  2665  0491  0650               	xorwf	_slave_num,w
  2666  0492  1D03               	btfss	3,2
  2667  0493  2C95               	goto	u701
  2668  0494  2C96               	goto	u700
  2669  0495                     u701:
  2670  0495  2C9C               	goto	l134
  2671  0496                     u700:
  2672  0496                     l1568:
  2673                           
  2674                           ;main.c: 217:     {;main.c: 218:         temp_data = spi_data;
  2675  0496  087A               	movf	_spi_data,w
  2676  0497  00F3               	movwf	??_set_next_slave
  2677  0498  0873               	movf	??_set_next_slave,w
  2678  0499  00D2               	movwf	_temp_data
  2679                           
  2680                           ;main.c: 219:         PORTA = 6;
  2681  049A  3006               	movlw	6
  2682  049B  0085               	movwf	5	;volatile
  2683  049C                     l134:
  2684  049C  0008               	return
  2685  049D                     __end_of_set_next_slave:
  2686                           
  2687                           	psect	text12
  2688  02CE                     __ptext12:	
  2689 ;; *************** function _prepare_uart_data *****************
  2690 ;; Defined at:
  2691 ;;		line 154 in file "main.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          2       0       0       0       0
  2708 ;;      Totals:         2       0       0       0       0
  2709 ;;Total ram usage:        2 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _prepare_uart_data
  2721  02CE                     _prepare_uart_data:
  2722  02CE                     l1572:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _prepare_uart_data: [wreg-fsr0h+status,2+status,0]
  2725                           
  2726                           
  2727                           ;main.c: 156:     if (!next_uart)
  2728  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2729  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2730  02D0  083A               	movf	_next_uart,w
  2731  02D1  1D03               	btfss	3,2
  2732  02D2  2AD4               	goto	u711
  2733  02D3  2AD5               	goto	u710
  2734  02D4                     u711:
  2735  02D4  2AD6               	goto	l1576
  2736  02D5                     u710:
  2737  02D5  2B1B               	goto	l123
  2738  02D6                     l1576:
  2739                           
  2740                           ;main.c: 161:     next_uart = 0;
  2741  02D6  01BA               	clrf	_next_uart
  2742                           
  2743                           ;main.c: 163:     switch (uart_num)
  2744  02D7  2AF6               	goto	l1588
  2745  02D8                     l1578:
  2746                           
  2747                           ;main.c: 166:             uart_data = (uint8_t)str_pot_a[str_pos];
  2748  02D8  0878               	movf	_str_pos,w
  2749  02D9  3E3B               	addlw	(low (_str_pot_a| 0))& (0+255)
  2750  02DA  0084               	movwf	4
  2751  02DB  1383               	bcf	3,7	;select IRP bank0
  2752  02DC  0800               	movf	0,w
  2753  02DD  00F3               	movwf	??_prepare_uart_data
  2754  02DE  0873               	movf	??_prepare_uart_data,w
  2755  02DF  00F9               	movwf	_uart_data
  2756                           
  2757                           ;main.c: 167:             break;
  2758  02E0  2B09               	goto	l1590
  2759  02E1                     l1580:
  2760                           
  2761                           ;main.c: 170:             uart_data = (uint8_t)str_pot_b[str_pos];
  2762  02E1  0878               	movf	_str_pos,w
  2763  02E2  3E42               	addlw	(low (_str_pot_b| 0))& (0+255)
  2764  02E3  0084               	movwf	4
  2765  02E4  1383               	bcf	3,7	;select IRP bank0
  2766  02E5  0800               	movf	0,w
  2767  02E6  00F3               	movwf	??_prepare_uart_data
  2768  02E7  0873               	movf	??_prepare_uart_data,w
  2769  02E8  00F9               	movwf	_uart_data
  2770                           
  2771                           ;main.c: 171:             break;
  2772  02E9  2B09               	goto	l1590
  2773  02EA                     l1582:
  2774                           
  2775                           ;main.c: 174:             uart_data = (uint8_t)str_pot_c[str_pos];
  2776  02EA  0878               	movf	_str_pos,w
  2777  02EB  3E48               	addlw	(low (_str_pot_c| 0))& (0+255)
  2778  02EC  0084               	movwf	4
  2779  02ED  1383               	bcf	3,7	;select IRP bank0
  2780  02EE  0800               	movf	0,w
  2781  02EF  00F3               	movwf	??_prepare_uart_data
  2782  02F0  0873               	movf	??_prepare_uart_data,w
  2783  02F1  00F9               	movwf	_uart_data
  2784                           
  2785                           ;main.c: 175:             break;
  2786  02F2  2B09               	goto	l1590
  2787  02F3                     l1584:
  2788                           
  2789                           ;main.c: 178:             uart_num = 0;
  2790  02F3  01D1               	clrf	_uart_num
  2791                           
  2792                           ;main.c: 179:             uart_data = 0x00;
  2793  02F4  01F9               	clrf	_uart_data
  2794                           
  2795                           ;main.c: 180:             break;
  2796  02F5  2B09               	goto	l1590
  2797  02F6                     l1588:
  2798  02F6  0851               	movf	_uart_num,w
  2799  02F7  00F3               	movwf	??_prepare_uart_data
  2800  02F8  01F4               	clrf	??_prepare_uart_data+1
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ; direct_byte           11     8 (fixed)
  2809                           ; jumptable            260     6 (fixed)
  2810                           ;	Chosen strategy is simple_byte
  2811  02F9  0874               	movf	??_prepare_uart_data+1,w
  2812  02FA  3A00               	xorlw	0	; case 0
  2813  02FB  1903               	skipnz
  2814  02FC  2AFE               	goto	l2164
  2815  02FD  2AF3               	goto	l1584
  2816  02FE                     l2164:
  2817                           
  2818                           ; Switch size 1, requested type "simple"
  2819                           ; Number of cases is 3, Range of values is 1 to 3
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte           10     6 (average)
  2823                           ; direct_byte           20    11 (fixed)
  2824                           ; jumptable            263     9 (fixed)
  2825                           ;	Chosen strategy is simple_byte
  2826  02FE  0873               	movf	??_prepare_uart_data,w
  2827  02FF  3A01               	xorlw	1	; case 1
  2828  0300  1903               	skipnz
  2829  0301  2AD8               	goto	l1578
  2830  0302  3A03               	xorlw	3	; case 2
  2831  0303  1903               	skipnz
  2832  0304  2AE1               	goto	l1580
  2833  0305  3A01               	xorlw	1	; case 3
  2834  0306  1903               	skipnz
  2835  0307  2AEA               	goto	l1582
  2836  0308  2AF3               	goto	l1584
  2837  0309                     l1590:
  2838                           
  2839                           ;main.c: 182:     str_pos++;
  2840  0309  3001               	movlw	1
  2841  030A  00F3               	movwf	??_prepare_uart_data
  2842  030B  0873               	movf	??_prepare_uart_data,w
  2843  030C  07F8               	addwf	_str_pos,f
  2844                           
  2845                           ;main.c: 184:     if (5 == str_pos)
  2846  030D  3005               	movlw	5
  2847  030E  0678               	xorwf	_str_pos,w
  2848  030F  1D03               	btfss	3,2
  2849  0310  2B12               	goto	u721
  2850  0311  2B13               	goto	u720
  2851  0312                     u721:
  2852  0312  2B18               	goto	l1596
  2853  0313                     u720:
  2854  0313                     l1592:
  2855                           
  2856                           ;main.c: 185:     {;main.c: 186:         str_pos = 0;
  2857  0313  01F8               	clrf	_str_pos
  2858  0314                     l1594:
  2859                           
  2860                           ;main.c: 187:         uart_num++;
  2861  0314  3001               	movlw	1
  2862  0315  00F3               	movwf	??_prepare_uart_data
  2863  0316  0873               	movf	??_prepare_uart_data,w
  2864  0317  07D1               	addwf	_uart_num,f
  2865  0318                     l1596:
  2866                           
  2867                           ;main.c: 190:     PIE1bits.TXIE = 1;
  2868  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2869  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2870  031A  160C               	bsf	12,4	;volatile
  2871  031B                     l123:
  2872  031B  0008               	return
  2873  031C                     __end_of_prepare_uart_data:
  2874                           
  2875                           	psect	text13
  2876  0191                     __ptext13:	
  2877 ;; *************** function _display *****************
  2878 ;; Defined at:
  2879 ;;		line 224 in file "main.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  header_str      1    4[BANK0 ] PTR unsigned char 
  2884 ;;		 -> STR_4(17), 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       1       0       0       0
  2896 ;;      Temps:          0       1       0       0       0
  2897 ;;      Totals:         0       2       0       0       0
  2898 ;;Total ram usage:        2 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    4
  2901 ;; This function calls:
  2902 ;;		_lcd_move_cursor
  2903 ;;		_lcd_write_char
  2904 ;;		_lcd_write_string
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _display
  2912  0191                     _display:
  2913  0191                     l2048:	
  2914                           ;incstack = 0
  2915                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2916                           
  2917                           
  2918                           ;main.c: 226:     char* header_str = "  S1:  S2:  S3: ";
  2919  0191  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2920  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0194  00A3               	movwf	??_display
  2923  0195  0823               	movf	??_display,w
  2924  0196  00A4               	movwf	display@header_str
  2925  0197                     l2050:
  2926                           
  2927                           ;main.c: 227:     lcd_move_cursor(0,0);
  2928  0197  01F7               	clrf	lcd_move_cursor@col
  2929  0198  3000               	movlw	0
  2930  0199  120A  118A  24C6  120A  118A  	fcall	_lcd_move_cursor
  2931  019E                     l2052:
  2932                           
  2933                           ;main.c: 228:     lcd_write_string(header_str);
  2934  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2935  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2936  01A0  0824               	movf	display@header_str,w
  2937  01A1  120A  118A  249D  120A  118A  	fcall	_lcd_write_string
  2938  01A6                     l2054:
  2939                           
  2940                           ;main.c: 229:     lcd_move_cursor(1,0);
  2941  01A6  01F7               	clrf	lcd_move_cursor@col
  2942  01A7  3001               	movlw	1
  2943  01A8  120A  118A  24C6  120A  118A  	fcall	_lcd_move_cursor
  2944  01AD                     l2056:
  2945                           
  2946                           ;main.c: 231:     lcd_write_char(stra[1]);
  2947  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2948  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2949  01AF  083C               	movf	_str_pot_a+1,w
  2950  01B0  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2951  01B5                     l2058:
  2952                           
  2953                           ;main.c: 232:     lcd_write_char('.');
  2954  01B5  302E               	movlw	46
  2955  01B6  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2956  01BB                     l2060:
  2957                           
  2958                           ;main.c: 233:     lcd_write_char(stra[2]);
  2959  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2960  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2961  01BD  083D               	movf	_str_pot_a+2,w
  2962  01BE  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2963  01C3                     l2062:
  2964                           
  2965                           ;main.c: 234:     lcd_write_char(stra[3]);
  2966  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2967  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2968  01C5  083E               	movf	_str_pot_a+3,w
  2969  01C6  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2970  01CB                     l2064:
  2971                           
  2972                           ;main.c: 235:     lcd_write_char('V');
  2973  01CB  3056               	movlw	86
  2974  01CC  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2975  01D1                     l2066:
  2976                           
  2977                           ;main.c: 236:     lcd_write_string("  ");
  2978  01D1  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2979  01D2  120A  118A  249D  120A  118A  	fcall	_lcd_write_string
  2980  01D7                     l2068:
  2981                           
  2982                           ;main.c: 238:     lcd_write_char(strb[1]);
  2983  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2984  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2985  01D9  0843               	movf	_str_pot_b+1,w
  2986  01DA  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2987  01DF                     l2070:
  2988                           
  2989                           ;main.c: 239:     lcd_write_char(strb[2]);
  2990  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2991  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2992  01E1  0844               	movf	_str_pot_b+2,w
  2993  01E2  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  2994  01E7                     l2072:
  2995                           
  2996                           ;main.c: 240:     lcd_write_char(strb[3]);
  2997  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2998  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2999  01E9  0845               	movf	_str_pot_b+3,w
  3000  01EA  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  3001  01EF                     l2074:
  3002                           
  3003                           ;main.c: 241:     lcd_write_string("  ");
  3004  01EF  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3005  01F0  120A  118A  249D  120A  118A  	fcall	_lcd_write_string
  3006  01F5                     l2076:
  3007                           
  3008                           ;main.c: 243:     lcd_write_char(strc[1]);
  3009  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  3010  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  3011  01F7  0849               	movf	_str_pot_c+1,w
  3012  01F8  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  3013  01FD                     l2078:
  3014                           
  3015                           ;main.c: 244:     lcd_write_char(strc[2]);
  3016  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3017  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3018  01FF  084A               	movf	_str_pot_c+2,w
  3019  0200  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  3020  0205                     l2080:
  3021                           
  3022                           ;main.c: 245:     lcd_write_char(strc[3]);
  3023  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0207  084B               	movf	_str_pot_c+3,w
  3026  0208  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  3027  020D                     l2082:
  3028                           
  3029                           ;main.c: 246:     lcd_write_char('C');
  3030  020D  3043               	movlw	67
  3031  020E  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  3032  0213                     l140:
  3033  0213  0008               	return
  3034  0214                     __end_of_display:
  3035                           
  3036                           	psect	text14
  3037  049D                     __ptext14:	
  3038 ;; *************** function _lcd_write_string *****************
  3039 ;; Defined at:
  3040 ;;		line 85 in file "lcd.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  a               1    wreg     PTR unsigned char 
  3043 ;;		 -> STR_6(3), STR_5(3), STR_4(17), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3046 ;;		 -> STR_6(3), STR_5(3), STR_4(17), 
  3047 ;;  i               2    0[BANK0 ] int 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       0       0       0       0
  3058 ;;      Locals:         0       3       0       0       0
  3059 ;;      Temps:          0       0       0       0       0
  3060 ;;      Totals:         0       3       0       0       0
  3061 ;;Total ram usage:        3 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    3
  3064 ;; This function calls:
  3065 ;;		_lcd_write_char
  3066 ;; This function is called by:
  3067 ;;		_display
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _lcd_write_string
  3073  049D                     _lcd_write_string:
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3077                           ;lcd_write_string@a stored from wreg
  3078  049D  1283               	bcf	3,5	;RP0=0, select bank0
  3079  049E  1303               	bcf	3,6	;RP1=0, select bank0
  3080  049F  00A2               	movwf	lcd_write_string@a
  3081  04A0                     l1860:
  3082                           
  3083                           ;lcd.c: 85: void lcd_write_string(char* a);lcd.c: 86: {;lcd.c: 87:     for(int i=0; a[i]
      +                           != '\0'; i++)
  3084  04A0  01A0               	clrf	lcd_write_string@i
  3085  04A1  01A1               	clrf	lcd_write_string@i+1
  3086  04A2  2CB8               	goto	l1866
  3087  04A3                     l1862:
  3088                           
  3089                           ;lcd.c: 88:     {;lcd.c: 89:        lcd_write_char(a[i]);
  3090  04A3  0820               	movf	lcd_write_string@i,w
  3091  04A4  0722               	addwf	lcd_write_string@a,w
  3092  04A5  0084               	movwf	4
  3093  04A6  120A  118A  2400  120A  118A  	fcall	stringdir
  3094  04AB  120A  118A  24E3  120A  118A  	fcall	_lcd_write_char
  3095  04B0                     l1864:
  3096                           
  3097                           ;lcd.c: 90:     }
  3098  04B0  3001               	movlw	1
  3099  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  3100  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  3101  04B3  07A0               	addwf	lcd_write_string@i,f
  3102  04B4  1803               	skipnc
  3103  04B5  0AA1               	incf	lcd_write_string@i+1,f
  3104  04B6  3000               	movlw	0
  3105  04B7  07A1               	addwf	lcd_write_string@i+1,f
  3106  04B8                     l1866:
  3107  04B8  0820               	movf	lcd_write_string@i,w
  3108  04B9  0722               	addwf	lcd_write_string@a,w
  3109  04BA  0084               	movwf	4
  3110  04BB  120A  118A  2400  120A  118A  	fcall	stringdir
  3111  04C0  3A00               	xorlw	0
  3112  04C1  1D03               	skipz
  3113  04C2  2CC4               	goto	u931
  3114  04C3  2CC5               	goto	u930
  3115  04C4                     u931:
  3116  04C4  2CA3               	goto	l1862
  3117  04C5                     u930:
  3118  04C5                     l262:
  3119  04C5  0008               	return
  3120  04C6                     __end_of_lcd_write_string:
  3121                           
  3122                           	psect	text15
  3123  04E3                     __ptext15:	
  3124 ;; *************** function _lcd_write_char *****************
  3125 ;; Defined at:
  3126 ;;		line 75 in file "lcd.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  data            1    wreg     unsigned char 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  data            1    6[COMMON] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         1       0       0       0       0
  3142 ;;      Temps:          2       0       0       0       0
  3143 ;;      Totals:         3       0       0       0       0
  3144 ;;Total ram usage:        3 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		_lcd_port
  3149 ;; This function is called by:
  3150 ;;		_display
  3151 ;;		_lcd_write_string
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _lcd_write_char
  3157  04E3                     _lcd_write_char:
  3158                           
  3159                           ;incstack = 0
  3160                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  3161                           ;lcd_write_char@data stored from wreg
  3162  04E3  00F6               	movwf	lcd_write_char@data
  3163  04E4                     l1832:
  3164                           
  3165                           ;lcd.c: 75: void lcd_write_char(char data);lcd.c: 76: {;lcd.c: 77:     PORTEbits.RE0 = 1
      +                          ;
  3166  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3167  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3168  04E6  1409               	bsf	9,0	;volatile
  3169  04E7                     l1834:
  3170                           
  3171                           ;lcd.c: 78:     lcd_port((uint8_t)data);
  3172  04E7  0876               	movf	lcd_write_char@data,w
  3173  04E8  120A  118A  258C  120A  118A  	fcall	_lcd_port
  3174  04ED                     l1836:
  3175                           
  3176                           ;lcd.c: 80:     PORTEbits.RE2 = 1;
  3177  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  3178  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  3179  04EF  1509               	bsf	9,2	;volatile
  3180  04F0                     l1838:
  3181                           
  3182                           ;lcd.c: 81:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3183  04F0  3006               	movlw	6
  3184  04F1  00F5               	movwf	??_lcd_write_char+1
  3185  04F2  3030               	movlw	48
  3186  04F3  00F4               	movwf	??_lcd_write_char
  3187  04F4                     u1197:
  3188  04F4  0BF4               	decfsz	??_lcd_write_char,f
  3189  04F5  2CF4               	goto	u1197
  3190  04F6  0BF5               	decfsz	??_lcd_write_char+1,f
  3191  04F7  2CF4               	goto	u1197
  3192  04F8  0000               	nop
  3193  04F9                     l1840:
  3194                           
  3195                           ;lcd.c: 82:     PORTEbits.RE2 = 0;
  3196  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3197  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3198  04FB  1109               	bcf	9,2	;volatile
  3199  04FC                     l256:
  3200  04FC  0008               	return
  3201  04FD                     __end_of_lcd_write_char:
  3202                           
  3203                           	psect	text16
  3204  04C6                     __ptext16:	
  3205 ;; *************** function _lcd_move_cursor *****************
  3206 ;; Defined at:
  3207 ;;		line 63 in file "lcd.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  row             1    wreg     unsigned char 
  3210 ;;  col             1    7[COMMON] unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  row             1    0[BANK0 ] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         1       0       0       0       0
  3223 ;;      Locals:         0       1       0       0       0
  3224 ;;      Temps:          0       0       0       0       0
  3225 ;;      Totals:         1       1       0       0       0
  3226 ;;Total ram usage:        2 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    3
  3229 ;; This function calls:
  3230 ;;		_lcd_cmd
  3231 ;; This function is called by:
  3232 ;;		_display
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _lcd_move_cursor
  3238  04C6                     _lcd_move_cursor:
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _lcd_move_cursor: [wreg+status,2+status,0+pclath+cstack]
  3242                           ;lcd_move_cursor@row stored from wreg
  3243  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3244  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3245  04C8  00A0               	movwf	lcd_move_cursor@row
  3246  04C9                     l1852:
  3247                           
  3248                           ;lcd.c: 63: void lcd_move_cursor(uint8_t row, uint8_t col);lcd.c: 64: {;lcd.c: 65:     i
      +                          f(row == 0)
  3249  04C9  0820               	movf	lcd_move_cursor@row,w
  3250  04CA  1D03               	btfss	3,2
  3251  04CB  2CCD               	goto	u911
  3252  04CC  2CCE               	goto	u910
  3253  04CD                     u911:
  3254  04CD  2CD6               	goto	l1856
  3255  04CE                     u910:
  3256  04CE                     l1854:
  3257                           
  3258                           ;lcd.c: 66:     {;lcd.c: 67:         lcd_cmd(0x80 + col);
  3259  04CE  0877               	movf	lcd_move_cursor@col,w
  3260  04CF  3E80               	addlw	128
  3261  04D0  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  3262                           
  3263                           ;lcd.c: 68:     }
  3264  04D5  2CE2               	goto	l253
  3265  04D6                     l1856:
  3266  04D6  0320               	decf	lcd_move_cursor@row,w
  3267  04D7  1D03               	btfss	3,2
  3268  04D8  2CDA               	goto	u921
  3269  04D9  2CDB               	goto	u920
  3270  04DA                     u921:
  3271  04DA  2CE2               	goto	l253
  3272  04DB                     u920:
  3273  04DB                     l1858:
  3274                           
  3275                           ;lcd.c: 70:     {;lcd.c: 71:         lcd_cmd(0xC0 + col);
  3276  04DB  0877               	movf	lcd_move_cursor@col,w
  3277  04DC  3EC0               	addlw	192
  3278  04DD  120A  118A  24FD  120A  118A  	fcall	_lcd_cmd
  3279  04E2                     l253:
  3280  04E2  0008               	return
  3281  04E3                     __end_of_lcd_move_cursor:
  3282                           
  3283                           	psect	text17
  3284  04FD                     __ptext17:	
  3285 ;; *************** function _lcd_cmd *****************
  3286 ;; Defined at:
  3287 ;;		line 46 in file "lcd.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  cmd             1    wreg     unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  cmd             1    6[COMMON] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         1       0       0       0       0
  3303 ;;      Temps:          2       0       0       0       0
  3304 ;;      Totals:         3       0       0       0       0
  3305 ;;Total ram usage:        3 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    2
  3308 ;; This function calls:
  3309 ;;		_lcd_port
  3310 ;; This function is called by:
  3311 ;;		_setup
  3312 ;;		_lcd_init
  3313 ;;		_lcd_move_cursor
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _lcd_cmd
  3319  04FD                     _lcd_cmd:
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3323                           ;lcd_cmd@cmd stored from wreg
  3324  04FD  00F6               	movwf	lcd_cmd@cmd
  3325  04FE                     l1842:
  3326                           
  3327                           ;lcd.c: 46: void lcd_cmd(uint8_t cmd);lcd.c: 47: {;lcd.c: 48:     PORTEbits.RE0 = 0;
  3328  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3329  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0500  1009               	bcf	9,0	;volatile
  3331  0501                     l1844:
  3332                           
  3333                           ;lcd.c: 49:     lcd_port(cmd);
  3334  0501  0876               	movf	lcd_cmd@cmd,w
  3335  0502  120A  118A  258C  120A  118A  	fcall	_lcd_port
  3336  0507                     l1846:
  3337                           
  3338                           ;lcd.c: 51:     PORTEbits.RE2 = 1;
  3339  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0509  1509               	bsf	9,2	;volatile
  3342  050A                     l1848:
  3343                           
  3344                           ;lcd.c: 52:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3345  050A  3006               	movlw	6
  3346  050B  00F5               	movwf	??_lcd_cmd+1
  3347  050C  3030               	movlw	48
  3348  050D  00F4               	movwf	??_lcd_cmd
  3349  050E                     u1207:
  3350  050E  0BF4               	decfsz	??_lcd_cmd,f
  3351  050F  2D0E               	goto	u1207
  3352  0510  0BF5               	decfsz	??_lcd_cmd+1,f
  3353  0511  2D0E               	goto	u1207
  3354  0512  0000               	nop
  3355  0513                     l1850:
  3356                           
  3357                           ;lcd.c: 53:     PORTEbits.RE2 = 0;
  3358  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0515  1109               	bcf	9,2	;volatile
  3361  0516                     l244:
  3362  0516  0008               	return
  3363  0517                     __end_of_lcd_cmd:
  3364                           
  3365                           	psect	text18
  3366  058C                     __ptext18:	
  3367 ;; *************** function _lcd_port *****************
  3368 ;; Defined at:
  3369 ;;		line 28 in file "lcd.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  a               1    wreg     unsigned char 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  a               1    3[COMMON] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3383 ;;      Params:         0       0       0       0       0
  3384 ;;      Locals:         1       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0
  3386 ;;      Totals:         1       0       0       0       0
  3387 ;;Total ram usage:        1 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    1
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_lcd_init
  3394 ;;		_lcd_cmd
  3395 ;;		_lcd_write_char
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function _lcd_port
  3401  058C                     _lcd_port:
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _lcd_port: [wreg]
  3405                           ;lcd_port@a stored from wreg
  3406  058C  00F3               	movwf	lcd_port@a
  3407  058D                     l1830:
  3408                           
  3409                           ;lcd.c: 28: void lcd_port(uint8_t a);lcd.c: 29: {;lcd.c: 31:     PORTD = a;
  3410  058D  0873               	movf	lcd_port@a,w
  3411  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3412  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0590  0088               	movwf	8	;volatile
  3414  0591                     l241:
  3415  0591  0008               	return
  3416  0592                     __end_of_lcd_port:
  3417                           
  3418                           	psect	text19
  3419  0439                     __ptext19:	
  3420 ;; *************** function _isr *****************
  3421 ;; Defined at:
  3422 ;;		line 132 in file "main.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3436 ;;      Params:         0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0
  3438 ;;      Temps:          3       0       0       0       0
  3439 ;;      Totals:         3       0       0       0       0
  3440 ;;Total ram usage:        3 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		Interrupt level 1
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _isr
  3451  0439                     _isr:
  3452  0439                     i1l1748:
  3453                           
  3454                           ;main.c: 135:     if (PIE1bits.TXIE && PIR1bits.TXIF)
  3455  0439  1683               	bsf	3,5	;RP0=1, select bank1
  3456  043A  1303               	bcf	3,6	;RP1=0, select bank1
  3457  043B  1E0C               	btfss	12,4	;volatile
  3458  043C  2C3E               	goto	u88_21
  3459  043D  2C3F               	goto	u88_20
  3460  043E                     u88_21:
  3461  043E  2C4C               	goto	i1l1758
  3462  043F                     u88_20:
  3463  043F                     i1l1750:
  3464  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0441  1E0C               	btfss	12,4	;volatile
  3467  0442  2C44               	goto	u89_21
  3468  0443  2C45               	goto	u89_20
  3469  0444                     u89_21:
  3470  0444  2C4C               	goto	i1l1758
  3471  0445                     u89_20:
  3472  0445                     i1l1752:
  3473                           
  3474                           ;main.c: 136:     {;main.c: 137:         TXREG = (volatile unsigned char)uart_data;
  3475  0445  0879               	movf	_uart_data,w
  3476  0446  0099               	movwf	25	;volatile
  3477  0447                     i1l1754:
  3478                           
  3479                           ;main.c: 138:         next_uart = 1;
  3480  0447  01BA               	clrf	_next_uart
  3481  0448  0ABA               	incf	_next_uart,f
  3482  0449                     i1l1756:
  3483                           
  3484                           ;main.c: 141:         PIE1bits.TXIE = 0;
  3485  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3486  044A  1303               	bcf	3,6	;RP1=0, select bank1
  3487  044B  120C               	bcf	12,4	;volatile
  3488  044C                     i1l1758:
  3489                           
  3490                           ;main.c: 144:     if (SSPSTATbits.BF)
  3491  044C  1683               	bsf	3,5	;RP0=1, select bank1
  3492  044D  1303               	bcf	3,6	;RP1=0, select bank1
  3493  044E  1C14               	btfss	20,0	;volatile
  3494  044F  2C51               	goto	u90_21
  3495  0450  2C52               	goto	u90_20
  3496  0451                     u90_21:
  3497  0451  2C67               	goto	i1l119
  3498  0452                     u90_20:
  3499  0452                     i1l1760:
  3500                           
  3501                           ;main.c: 145:     {;main.c: 146:         spi_data = SSPBUF;
  3502  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0454  0813               	movf	19,w	;volatile
  3505  0455  00F0               	movwf	??_isr
  3506  0456  0870               	movf	??_isr,w
  3507  0457  00FA               	movwf	_spi_data
  3508  0458                     i1l1762:
  3509                           
  3510                           ;main.c: 147:         SSPSTATbits.BF = 0;
  3511  0458  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0459  1303               	bcf	3,6	;RP1=0, select bank1
  3513  045A  1014               	bcf	20,0	;volatile
  3514  045B                     i1l1764:
  3515                           
  3516                           ;main.c: 148:         next_slave = 1;
  3517  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3518  045C  1303               	bcf	3,6	;RP1=0, select bank0
  3519  045D  01B9               	clrf	_next_slave
  3520  045E  0AB9               	incf	_next_slave,f
  3521  045F                     i1l1766:
  3522                           
  3523                           ;main.c: 149:         slave_num++;
  3524  045F  3001               	movlw	1
  3525  0460  00F0               	movwf	??_isr
  3526  0461  0870               	movf	??_isr,w
  3527  0462  07D0               	addwf	_slave_num,f
  3528  0463                     i1l1768:
  3529                           
  3530                           ;main.c: 150:         slave_num &= 0x03;
  3531  0463  3003               	movlw	3
  3532  0464  00F0               	movwf	??_isr
  3533  0465  0870               	movf	??_isr,w
  3534  0466  05D0               	andwf	_slave_num,f
  3535  0467                     i1l119:
  3536  0467  0872               	movf	??_isr+2,w
  3537  0468  008A               	movwf	10
  3538  0469  0E71               	swapf	??_isr+1,w
  3539  046A  0083               	movwf	3
  3540  046B  0EFE               	swapf	btemp,f
  3541  046C  0E7E               	swapf	btemp,w
  3542  046D  0009               	retfie
  3543  046E                     __end_of_isr:
  3544  007E                     btemp	set	126	;btemp
  3545  007E                     wtemp0	set	126
  3546                           
  3547                           	psect	intentry
  3548  0004                     __pintentry:	
  3549                           ;incstack = 0
  3550                           ; Regs used in _isr: [wreg+status,2+status,0]
  3551                           
  3552  0004                     interrupt_function:
  3553  007E                     saved_w	set	btemp
  3554  0004  00FE               	movwf	btemp
  3555  0005  0E03               	swapf	3,w
  3556  0006  00F1               	movwf	??_isr+1
  3557  0007  080A               	movf	10,w
  3558  0008  00F2               	movwf	??_isr+2
  3559  0009  120A  118A  2C39   	ljmp	_isr
  3560                           
  3561                           	psect	config
  3562                           
  3563                           ;Config register CONFIG1 @ 0x2007
  3564                           ;	Oscillator Selection bits
  3565                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3566                           ;	Watchdog Timer Enable bit
  3567                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3568                           ;	Power-up Timer Enable bit
  3569                           ;	PWRTE = OFF, PWRT disabled
  3570                           ;	RE3/MCLR pin function select bit
  3571                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3572                           ;	Code Protection bit
  3573                           ;	CP = OFF, Program memory code protection is disabled
  3574                           ;	Data Code Protection bit
  3575                           ;	CPD = OFF, Data memory code protection is disabled
  3576                           ;	Brown Out Reset Selection bits
  3577                           ;	BOREN = OFF, BOR disabled
  3578                           ;	Internal External Switchover bit
  3579                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3580                           ;	Fail-Safe Clock Monitor Enabled bit
  3581                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3582                           ;	Low Voltage Programming Enable bit
  3583                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3584                           ;	In-Circuit Debugger Mode bit
  3585                           ;	DEBUG = 0x1, unprogrammed default
  3586  2007                     	org	8199
  3587  2007  20D4               	dw	8404
  3588                           
  3589                           ;Config register CONFIG2 @ 0x2008
  3590                           ;	Brown-out Reset Selection bit
  3591                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3592                           ;	Flash Program Memory Self Write Enable bits
  3593                           ;	WRT = OFF, Write protection off
  3594  2008                     	org	8200
  3595  2008  3FFF               	dw	16383

Data Sizes:
    Strings     41
    Constant    10
    Data        8
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 7
		 -> str_pot_c(BANK0[5]), str_pot_b(BANK0[6]), str_pot_a(BANK0[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_write_string@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[17]), 

    display@header_str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), 

    strc	PTR unsigned char  size(1) Largest target is 5
		 -> str_pot_c(BANK0[5]), 

    str_pot_c	PTR unsigned char [5] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    strb	PTR unsigned char  size(1) Largest target is 6
		 -> str_pot_b(BANK0[6]), 

    str_pot_b	PTR unsigned char [6] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    stra	PTR unsigned char  size(1) Largest target is 7
		 -> str_pot_a(BANK0[7]), 

    str_pot_a	PTR unsigned char [7] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_lcd_cmd
    _setup->_spi_init
    _lcd_init->_lcd_cmd
    _display->_lcd_move_cursor
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->_lcd_port
    _lcd_move_cursor->_lcd_cmd
    _lcd_cmd->_lcd_port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_lcd_init
    _display->_lcd_write_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3684
                                             22 BANK0      3     3      0
                            _display
                  _prepare_uart_data
                     _set_next_slave
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2407
                                              9 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     515
               _eusart_enable_tx_isr
                     _eusart_init_tx
                            _lcd_cmd
                           _lcd_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _lcd_cmd
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _eusart_init_tx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_tx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_next_slave                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _prepare_uart_data                                    2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display                                              2     2      0     762
                                              3 BANK0      2     2      0
                    _lcd_move_cursor
                     _lcd_write_char
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (2) _lcd_write_string                                     3     3      0     300
                                              0 BANK0      3     3      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     3      0      62
                                              4 COMMON     3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1     366
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (3) _lcd_port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _lcd_move_cursor
       _lcd_cmd
         _lcd_port
     _lcd_write_char
       _lcd_port
     _lcd_write_string
       _lcd_write_char
         _lcd_port
   _prepare_uart_data
   _set_next_slave
   _setup
     _eusart_enable_tx_isr
     _eusart_init_tx
     _lcd_cmd
       _lcd_port
     _lcd_init
       _lcd_cmd
         _lcd_port
       _lcd_port
     _spi_init
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar  5 19:16:14 2021

                            pc 0002                 ___bmul@product 0075                    _SSPSTATbits 0094  
                           fsr 0004                            l123 031B                            l107 0219  
                          l140 0213                            l134 049C                            l143 0365  
                          l241 0591                            l401 0541                            l314 0527  
                          l315 052C                            l244 0516                            l253 04E2  
                          l262 04C5                            l238 02CD                            l256 04FC  
                          l283 0575                            l371 0190                            l286 058B  
                          l647 03AB                            l657 03E7                            l828 0566  
                          u500 055D                            u501 055C                            u510 0563  
                          u511 0562                            u520 0533                            u521 0532  
                          u530 0540                            u610 03B4                            u531 053F  
                          u611 03B3                            u700 0496                            u701 0495  
                          u710 02D5                            u630 03C6                            u711 02D4  
                          u631 03C5                            u720 0313                            u640 03D0  
                          u721 0312                            u641 03CF                            u625 03B8  
                          u490 051F                            u491 051E                            u660 03E3  
                          u661 03E2                            u645 03CC                            u910 04CE  
                          u670 0475                            u911 04CD                            u671 0474  
                          u655 03D7                            u920 04DB                            u680 047C  
                          u921 04DA                            u681 047B                            u930 04C5  
                          u690 0489                            u931 04C4                            u691 0488  
                          u940 0370                            u941 036F                            u960 0382  
                          u961 0381                            u955 0374                            u980 0393  
                          u981 0392                            u975 0383                            u985 038F  
                          u995 039B                            _isr 0439                            fsr0 0004  
                          indf 0000                           l2000 00C8                           l2002 00CE  
                         l2020 011F                           l2012 00F0                           l2004 00D2  
                         l2100 026F                           l2030 0169                           l2022 0125  
                         l2014 00FA                           l1400 056D                           l2024 012D  
                         l2016 010A                           l2008 00D4                           l2050 0197  
                         l1402 056E                           l1410 0518                           l2026 0134  
                         l2034 0171                           l2018 010B                           l2060 01BB  
                         l2052 019E                           l1404 0571                           l1412 051F  
                         l1420 0556                           l2028 0139                           l2036 017A  
                         l2070 01DF                           l2062 01C3                           l2054 01A6  
                         l1406 0574                           l1414 0521                           l1422 0557  
                         l2038 018C                           l2080 0205                           l2072 01E7  
                         l2064 01CB                           l2056 01AD                           l2048 0191  
                         l1408 0586                           l1416 0523                           l1440 0539  
                         l1432 052E                           l1424 055D                           l2082 020D  
                         l2074 01EF                           l2066 01D1                           l2058 01B5  
                         l1418 0526                           l1442 0540                           l1434 052F  
                         l1426 0563                           l2162 009F                           l2090 0226  
                         l2076 01F5                           l2068 01D7                           l2164 02FE  
                         l1436 0533                           l1428 0565                           l2092 0227  
                         l2084 0214                           l2078 01FD                           l1438 0537  
                         l2094 022C                           l2086 021E                           l1560 0483  
                         l1552 0476                           l1480 03C2                           l1472 03AC  
                         l2096 0233                           l2088 0224                           l1562 0489  
                         l1554 0477                           l1394 0567                           l1482 03C6  
                         l1474 03B4                           l1490 03E3                           l2098 026A  
                         l1580 02E1                           l1572 02CE                           l1556 047C  
                         l1548 046E                           l1396 056A                           l1900 03A7  
                         l1484 03D0                           l1476 03B7                           l1830 058D  
                         l1582 02EA                           l1590 0309                           l1566 0490  
                         l1398 056C                           l1910 0324                           l1486 03D6  
                         l1478 03BE                           l1840 04F9                           l1832 04E4  
                         l1592 0313                           l1584 02F3                           l1576 02D6  
                         l1568 0496                           l1920 032F                           l1912 0325  
                         l1904 031C                           l1488 03DD                           l1850 0513  
                         l1842 04FE                           l1834 04E7                           l1594 0314  
                         l1578 02D8                           l1930 0336                           l1922 0330  
                         l1914 0329                           l1906 0320                           l1844 0501  
                         l1852 04C9                           l1836 04ED                           l1860 04A0  
                         l1596 0318                           l1588 02F6                           l1940 033D  
                         l1932 0337                           l1924 0331                           l1916 032D  
                         l1908 0321                           l1846 0507                           l1854 04CE  
                         l1838 04F0                           l1862 04A3                           l1870 027D  
                         l1950 034F                           l1942 033E                           l1934 033A  
                         l1926 0334                           l1918 032E                           l1848 050A  
                         l1856 04D6                           l1864 04B0                           l1872 0288  
                         l1952 0359                           l1944 0343                           l1936 033B  
                         l1928 0335                           l1880 036A                           l1960 0034  
                         l1858 04DB                           l1866 04B8                           l1874 0299  
                         l1954 0362                           l1946 0344                           l1938 033C  
                         l1890 0382                           l1882 0370                           l1970 0053  
                         l1962 003A                           l1876 029F                           l1868 0277  
                         l1948 0349                           l1892 0393                           l1884 0373  
                         l1980 0079                           l1972 0057                           l1964 0041  
                         l1894 0399                           l1886 037A                           l1878 0366  
                         l1990 00B2                           l1974 0059                           l1982 008A  
                         l1966 0046                           l1958 002F                           l1896 039A  
                         l1888 037E                           l1992 00B6                           l1976 006A  
                         l1968 0047                           l1898 03A1                           l1994 00BA  
                         l1986 008B                           l1978 0075                           l1996 00BE  
                         l1988 00AA                           l1998 00C3                           ?_isr 0070  
                         STR_1 0421                           STR_2 0428                           STR_3 042F  
                         STR_4 0410                           STR_5 0436                           STR_6 0436  
                         u1000 03A7                           u1001 03A6                           u1010 003A  
                         u1011 0039                           u1100 011F                           u1020 0053  
                         u1101 011E                           u1021 0052                           u1110 012D  
                         u1030 0089                           u1111 012C                           u1031 0088  
                         u1120 017A                           u1040 00BA                           u1121 0179  
                         u1105 011B                           u1041 00B9                           u1130 018C  
                         u1050 00C8                           u1131 018B                           u1051 00C7  
                         u1060 00CE                           u1140 0224                           u1061 00CD  
                         u1141 0223                           u1070 00EF                           u1150 0233  
                         u1207 050E                           u1071 00EE                           u1151 0232  
                         u1080 00FA                           u1081 00F9                           u1090 010A  
                         u1091 0109                           u1075 00EB                           _IOCB 0096  
                         u1167 0283                           u1095 0106                           u1177 0294  
                         u1187 02A5                           u1197 04F4                           _TMR0 0001  
       __end_of_lcd_write_char 04FD                           _main 0214                           _stra 004F  
                         btemp 007E                           _strb 004E                           _strc 004D  
                         start 000C              ___bmul@multiplier 0076               ?_lcd_move_cursor 0077  
                        ??_isr 0070                          ?_main 0070                          _ANSEL 0188  
              __end_of___lwdiv 03AC                          i1l119 0467                __end_of___lwmod 03E8  
                        _SPBRG 0099                          _PORTA 0005                          _PORTB 0006  
                        _PORTC 0007                          _PORTD 0008                          _PORTE 0009  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          u90_20 0452  
                        u90_21 0451                          u88_20 043F                          u88_21 043E  
                        u89_20 0445                          u89_21 0444                          _TXREG 0019  
              __end_of_lcd_cmd 0517                __end_of_display 0214                __end_of_dpowers 0410  
              __end_of_isdigit 0567                          _setup 031C                  spi_init@sType 0076  
                        pclath 000A                ?_lcd_write_char 0070                          status 0003  
                        wtemp0 007E                __end_of_sprintf 0191               ??_eusart_init_tx 0073  
              __initialization 000F   __end_of_eusart_enable_tx_isr 058C                   __end_of_main 0277  
                       ??_main 0036              display@header_str 0024                         ?_setup 0070  
                       _ANSELH 0189                         i1l1750 043F                         i1l1760 0452  
                       i1l1752 0445                         i1l1762 0458                         i1l1754 0447  
                       i1l1764 045B                         i1l1756 0449                         i1l1748 0439  
                       i1l1766 045F                         i1l1758 044C                         i1l1768 0463  
                       _OSCCON 008F                         _SPBRGH 009A                         _TRISC3 043B  
                       _TRISC5 043D                         _SSPBUF 0013                         _SSPCON 0014  
             __end_of_lcd_init 02CE               __end_of_lcd_port 0592                         ___bmul 052D  
                    ??___lwdiv 0077                      ??___lwmod 0027       __end_of_lcd_write_string 04C6  
                    ??_lcd_cmd 0074                      ??_display 0023                      ??_isdigit 0073  
                       saved_w 007E               __end_of_spi_init 052D                      ??_sprintf 002C  
            lcd_write_string@a 0022              lcd_write_string@i 0020        __end_of__initialization 0028  
          ___bmul@multiplicand 0073                 __pcstackCOMMON 0070                   __pidataBANK0 0576  
                __end_of_setup 0366                 _OPTION_REGbits 0081           _eusart_enable_tx_isr 0586  
                      ??_setup 0077                     __pbssBANK0 0039        __size_of_set_next_slave 002F  
            _prepare_uart_data 02CE             ?_prepare_uart_data 0070                     __pmaintext 0214  
                      ?___bmul 0073                     __pintentry 0004            ??_prepare_uart_data 0073  
             ??_lcd_write_char 0074          ?_eusart_enable_tx_isr 0070                      ?_lcd_init 0070  
                      _SSPSTAT 0094                      ?_lcd_port 0070                     __stringtab 0400  
           lcd_write_char@data 0076      __end_of_prepare_uart_data 031C             spi_init@sClockIdle 0074  
              __size_of___bmul 0015                      ?_spi_init 0073                        ___lwdiv 0366  
                      ___lwmod 03AC                        __ptext1 002C                        __ptext2 0555  
                      __ptext3 03AC                        __ptext4 0366                        __ptext5 052D  
                      __ptext6 031C                        __ptext7 0517                        __ptext8 0277  
                      __ptext9 0567                        _lcd_cmd 04FD       __size_of_lcd_move_cursor 001D  
                      _display 0191                        _dpowers 0406                        _isdigit 0555  
                 __size_of_isr 0035                        _sprintf 002C                        clrloop0 057F  
                   ??_lcd_init 0020                        _str_pos 0078                     ??_lcd_port 0073  
         end_of_initialization 0028                     _next_slave 0039                      _RCSTAbits 0018  
                   ??_spi_init 0076              ?_lcd_write_string 0070                      _PORTEbits 0009  
           ??_lcd_write_string 0077         ??_eusart_enable_tx_isr 0073                     lcd_cmd@cmd 0076  
   __size_of_prepare_uart_data 004E                 _set_next_slave 046E                      _TXSTAbits 0098  
               __end_of___bmul 0542        __size_of_eusart_init_tx 000F            start_initialization 000F  
                  __end_of_isr 046E              ??_lcd_move_cursor 0078         __end_of_set_next_slave 049D  
                     ??___bmul 0074                     init_fetch0 0542                    __pdataBANK0 004D  
                  __pbssCOMMON 0078                      ___latbits 0002                  __pcstackBANK0 0020  
                 _isdigit$1092 0073                ?_set_next_slave 0070              __size_of_lcd_init 0057  
                  sprintf@flag 0030              __size_of_lcd_port 0006                    sprintf@prec 0034  
             ___lwdiv@dividend 0075                       ?___lwdiv 0073                       ?___lwmod 0023  
            __size_of_spi_init 0016                      __pstrings 0400                       ?_lcd_cmd 0070  
                     ?_display 0070                       ?_isdigit 0070             lcd_move_cursor@col 0077  
           lcd_move_cursor@row 0020               ___lwdiv@quotient 0021                       ?_sprintf 0029  
               __size_of_setup 004A              interrupt_function 0004                      clear_ram0 057E  
                     _PIE1bits 008C                      _next_uart 003A                       _PIR1bits 000C  
                    _temp_data 0052                      _slave_num 0050                      _uart_data 0079  
               _eusart_init_tx 0567                    __stringbase 0405                      _push_data 0053  
          spi_init@sDataSample 0073                      lcd_port@a 0073                      _str_pot_a 003B  
                    _str_pot_b 0042                      _str_pot_c 0048      __size_of_lcd_write_string 0029  
      __size_of_lcd_write_char 001A         __end_of_eusart_init_tx 0576               __size_of___lwdiv 0046  
             __size_of___lwmod 003C                _lcd_move_cursor 04C6             __end_of__stringtab 0406  
             __size_of_lcd_cmd 001A               __size_of_display 0083                     sprintf@val 0031  
        spi_init@sTransmitEdge 0075               __size_of_isdigit 0012                ___lwdiv@divisor 0073  
              ___lwdiv@counter 0020                       __ptext10 0586                       __ptext11 046E  
                     __ptext12 02CE                       __ptext13 0191                       __ptext14 049D  
                     __ptext15 04E3                       __ptext16 04C6                       __ptext17 04FD  
                     __ptext18 058C                       __ptext19 0439                       _lcd_init 0277  
__size_of_eusart_enable_tx_isr 0006                       _lcd_port 058C               __size_of_sprintf 0165  
                __size_of_main 0063                       _pot_data 0054                       _uart_num 0051  
                     _spi_data 007A                       _spi_init 0517                ?_eusart_init_tx 0070  
                   _INTCONbits 000B               ??_set_next_slave 0073                       init_ram0 0546  
                     isdigit@c 0074                       intlevel1 0000                      sprintf@ap 002F  
                    sprintf@sp 0033               ___lwmod@dividend 0025                      stringcode 0400  
      __end_of_lcd_move_cursor 04E3                       sprintf@c 0035                       sprintf@f 0029  
              ___lwmod@divisor 0023                ___lwmod@counter 0028                       stringdir 0400  
                     stringtab 0400               _lcd_write_string 049D                 _lcd_write_char 04E3  
